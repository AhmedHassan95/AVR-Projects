
Simple_Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002b0e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000013e  00800060  00002b0e  00002b82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001524  00000000  00000000  00002cc0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d1b  00000000  00000000  000041e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001a0  00000000  00000000  00004eff  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001f0  00000000  00000000  0000509f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000240c  00000000  00000000  0000528f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001377  00000000  00000000  0000769b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011d8  00000000  00000000  00008a12  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  00009bec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002f3  00000000  00000000  00009dac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ce  00000000  00000000  0000a09f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000aa6d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
       8:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
       c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      10:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      14:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      18:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      1c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      20:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      24:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      28:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      2c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      30:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      34:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      38:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      3c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      40:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      44:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      48:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      4c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
      50:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>

00000054 <__c.1790>:
      54:	6e 61 6e 00                                         nan.

00000058 <__c.1788>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d4 e0       	ldi	r29, 0x04	; 4
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	11 e0       	ldi	r17, 0x01	; 1
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	ee e0       	ldi	r30, 0x0E	; 14
     16a:	fb e2       	ldi	r31, 0x2B	; 43
     16c:	02 c0       	rjmp	.+4      	; 0x172 <.do_copy_data_start>

0000016e <.do_copy_data_loop>:
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0

00000172 <.do_copy_data_start>:
     172:	ae 39       	cpi	r26, 0x9E	; 158
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <.do_copy_data_loop>
     178:	0e 94 75 07 	call	0xeea	; 0xeea <main>
     17c:	0c 94 85 15 	jmp	0x2b0a	; 0x2b0a <_exit>

00000180 <__bad_interrupt>:
     180:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000184 <__fixunssfsi>:
     184:	ef 92       	push	r14
     186:	ff 92       	push	r15
     188:	0f 93       	push	r16
     18a:	1f 93       	push	r17
     18c:	7b 01       	movw	r14, r22
     18e:	8c 01       	movw	r16, r24
     190:	20 e0       	ldi	r18, 0x00	; 0
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	40 e0       	ldi	r20, 0x00	; 0
     196:	5f e4       	ldi	r21, 0x4F	; 79
     198:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__gesf2>
     19c:	88 23       	and	r24, r24
     19e:	8c f0       	brlt	.+34     	; 0x1c2 <__fixunssfsi+0x3e>
     1a0:	c8 01       	movw	r24, r16
     1a2:	b7 01       	movw	r22, r14
     1a4:	20 e0       	ldi	r18, 0x00	; 0
     1a6:	30 e0       	ldi	r19, 0x00	; 0
     1a8:	40 e0       	ldi	r20, 0x00	; 0
     1aa:	5f e4       	ldi	r21, 0x4F	; 79
     1ac:	0e 94 3a 02 	call	0x474	; 0x474 <__subsf3>
     1b0:	0e 94 2c 05 	call	0xa58	; 0xa58 <__fixsfsi>
     1b4:	9b 01       	movw	r18, r22
     1b6:	ac 01       	movw	r20, r24
     1b8:	20 50       	subi	r18, 0x00	; 0
     1ba:	30 40       	sbci	r19, 0x00	; 0
     1bc:	40 40       	sbci	r20, 0x00	; 0
     1be:	50 48       	sbci	r21, 0x80	; 128
     1c0:	06 c0       	rjmp	.+12     	; 0x1ce <__fixunssfsi+0x4a>
     1c2:	c8 01       	movw	r24, r16
     1c4:	b7 01       	movw	r22, r14
     1c6:	0e 94 2c 05 	call	0xa58	; 0xa58 <__fixsfsi>
     1ca:	9b 01       	movw	r18, r22
     1cc:	ac 01       	movw	r20, r24
     1ce:	b9 01       	movw	r22, r18
     1d0:	ca 01       	movw	r24, r20
     1d2:	1f 91       	pop	r17
     1d4:	0f 91       	pop	r16
     1d6:	ff 90       	pop	r15
     1d8:	ef 90       	pop	r14
     1da:	08 95       	ret

000001dc <_fpadd_parts>:
     1dc:	a0 e0       	ldi	r26, 0x00	; 0
     1de:	b0 e0       	ldi	r27, 0x00	; 0
     1e0:	e4 ef       	ldi	r30, 0xF4	; 244
     1e2:	f0 e0       	ldi	r31, 0x00	; 0
     1e4:	0c 94 6d 13 	jmp	0x26da	; 0x26da <__prologue_saves__>
     1e8:	dc 01       	movw	r26, r24
     1ea:	2b 01       	movw	r4, r22
     1ec:	fa 01       	movw	r30, r20
     1ee:	9c 91       	ld	r25, X
     1f0:	92 30       	cpi	r25, 0x02	; 2
     1f2:	08 f4       	brcc	.+2      	; 0x1f6 <_fpadd_parts+0x1a>
     1f4:	39 c1       	rjmp	.+626    	; 0x468 <__stack+0x9>
     1f6:	eb 01       	movw	r28, r22
     1f8:	88 81       	ld	r24, Y
     1fa:	82 30       	cpi	r24, 0x02	; 2
     1fc:	08 f4       	brcc	.+2      	; 0x200 <_fpadd_parts+0x24>
     1fe:	33 c1       	rjmp	.+614    	; 0x466 <__stack+0x7>
     200:	94 30       	cpi	r25, 0x04	; 4
     202:	69 f4       	brne	.+26     	; 0x21e <_fpadd_parts+0x42>
     204:	84 30       	cpi	r24, 0x04	; 4
     206:	09 f0       	breq	.+2      	; 0x20a <_fpadd_parts+0x2e>
     208:	2f c1       	rjmp	.+606    	; 0x468 <__stack+0x9>
     20a:	11 96       	adiw	r26, 0x01	; 1
     20c:	9c 91       	ld	r25, X
     20e:	11 97       	sbiw	r26, 0x01	; 1
     210:	89 81       	ldd	r24, Y+1	; 0x01
     212:	98 17       	cp	r25, r24
     214:	09 f4       	brne	.+2      	; 0x218 <_fpadd_parts+0x3c>
     216:	28 c1       	rjmp	.+592    	; 0x468 <__stack+0x9>
     218:	a5 e9       	ldi	r26, 0x95	; 149
     21a:	b0 e0       	ldi	r27, 0x00	; 0
     21c:	25 c1       	rjmp	.+586    	; 0x468 <__stack+0x9>
     21e:	84 30       	cpi	r24, 0x04	; 4
     220:	09 f4       	brne	.+2      	; 0x224 <_fpadd_parts+0x48>
     222:	21 c1       	rjmp	.+578    	; 0x466 <__stack+0x7>
     224:	82 30       	cpi	r24, 0x02	; 2
     226:	a9 f4       	brne	.+42     	; 0x252 <_fpadd_parts+0x76>
     228:	92 30       	cpi	r25, 0x02	; 2
     22a:	09 f0       	breq	.+2      	; 0x22e <_fpadd_parts+0x52>
     22c:	1d c1       	rjmp	.+570    	; 0x468 <__stack+0x9>
     22e:	9a 01       	movw	r18, r20
     230:	ad 01       	movw	r20, r26
     232:	88 e0       	ldi	r24, 0x08	; 8
     234:	ea 01       	movw	r28, r20
     236:	09 90       	ld	r0, Y+
     238:	ae 01       	movw	r20, r28
     23a:	e9 01       	movw	r28, r18
     23c:	09 92       	st	Y+, r0
     23e:	9e 01       	movw	r18, r28
     240:	81 50       	subi	r24, 0x01	; 1
     242:	c1 f7       	brne	.-16     	; 0x234 <_fpadd_parts+0x58>
     244:	e2 01       	movw	r28, r4
     246:	89 81       	ldd	r24, Y+1	; 0x01
     248:	11 96       	adiw	r26, 0x01	; 1
     24a:	9c 91       	ld	r25, X
     24c:	89 23       	and	r24, r25
     24e:	81 83       	std	Z+1, r24	; 0x01
     250:	08 c1       	rjmp	.+528    	; 0x462 <__stack+0x3>
     252:	92 30       	cpi	r25, 0x02	; 2
     254:	09 f4       	brne	.+2      	; 0x258 <_fpadd_parts+0x7c>
     256:	07 c1       	rjmp	.+526    	; 0x466 <__stack+0x7>
     258:	12 96       	adiw	r26, 0x02	; 2
     25a:	2d 90       	ld	r2, X+
     25c:	3c 90       	ld	r3, X
     25e:	13 97       	sbiw	r26, 0x03	; 3
     260:	eb 01       	movw	r28, r22
     262:	8a 81       	ldd	r24, Y+2	; 0x02
     264:	9b 81       	ldd	r25, Y+3	; 0x03
     266:	14 96       	adiw	r26, 0x04	; 4
     268:	ad 90       	ld	r10, X+
     26a:	bd 90       	ld	r11, X+
     26c:	cd 90       	ld	r12, X+
     26e:	dc 90       	ld	r13, X
     270:	17 97       	sbiw	r26, 0x07	; 7
     272:	ec 80       	ldd	r14, Y+4	; 0x04
     274:	fd 80       	ldd	r15, Y+5	; 0x05
     276:	0e 81       	ldd	r16, Y+6	; 0x06
     278:	1f 81       	ldd	r17, Y+7	; 0x07
     27a:	91 01       	movw	r18, r2
     27c:	28 1b       	sub	r18, r24
     27e:	39 0b       	sbc	r19, r25
     280:	b9 01       	movw	r22, r18
     282:	37 ff       	sbrs	r19, 7
     284:	04 c0       	rjmp	.+8      	; 0x28e <_fpadd_parts+0xb2>
     286:	66 27       	eor	r22, r22
     288:	77 27       	eor	r23, r23
     28a:	62 1b       	sub	r22, r18
     28c:	73 0b       	sbc	r23, r19
     28e:	60 32       	cpi	r22, 0x20	; 32
     290:	71 05       	cpc	r23, r1
     292:	0c f0       	brlt	.+2      	; 0x296 <_fpadd_parts+0xba>
     294:	61 c0       	rjmp	.+194    	; 0x358 <_fpadd_parts+0x17c>
     296:	12 16       	cp	r1, r18
     298:	13 06       	cpc	r1, r19
     29a:	6c f5       	brge	.+90     	; 0x2f6 <_fpadd_parts+0x11a>
     29c:	37 01       	movw	r6, r14
     29e:	48 01       	movw	r8, r16
     2a0:	06 2e       	mov	r0, r22
     2a2:	04 c0       	rjmp	.+8      	; 0x2ac <_fpadd_parts+0xd0>
     2a4:	96 94       	lsr	r9
     2a6:	87 94       	ror	r8
     2a8:	77 94       	ror	r7
     2aa:	67 94       	ror	r6
     2ac:	0a 94       	dec	r0
     2ae:	d2 f7       	brpl	.-12     	; 0x2a4 <_fpadd_parts+0xc8>
     2b0:	21 e0       	ldi	r18, 0x01	; 1
     2b2:	30 e0       	ldi	r19, 0x00	; 0
     2b4:	40 e0       	ldi	r20, 0x00	; 0
     2b6:	50 e0       	ldi	r21, 0x00	; 0
     2b8:	04 c0       	rjmp	.+8      	; 0x2c2 <_fpadd_parts+0xe6>
     2ba:	22 0f       	add	r18, r18
     2bc:	33 1f       	adc	r19, r19
     2be:	44 1f       	adc	r20, r20
     2c0:	55 1f       	adc	r21, r21
     2c2:	6a 95       	dec	r22
     2c4:	d2 f7       	brpl	.-12     	; 0x2ba <_fpadd_parts+0xde>
     2c6:	21 50       	subi	r18, 0x01	; 1
     2c8:	30 40       	sbci	r19, 0x00	; 0
     2ca:	40 40       	sbci	r20, 0x00	; 0
     2cc:	50 40       	sbci	r21, 0x00	; 0
     2ce:	2e 21       	and	r18, r14
     2d0:	3f 21       	and	r19, r15
     2d2:	40 23       	and	r20, r16
     2d4:	51 23       	and	r21, r17
     2d6:	21 15       	cp	r18, r1
     2d8:	31 05       	cpc	r19, r1
     2da:	41 05       	cpc	r20, r1
     2dc:	51 05       	cpc	r21, r1
     2de:	21 f0       	breq	.+8      	; 0x2e8 <_fpadd_parts+0x10c>
     2e0:	21 e0       	ldi	r18, 0x01	; 1
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	40 e0       	ldi	r20, 0x00	; 0
     2e6:	50 e0       	ldi	r21, 0x00	; 0
     2e8:	79 01       	movw	r14, r18
     2ea:	8a 01       	movw	r16, r20
     2ec:	e6 28       	or	r14, r6
     2ee:	f7 28       	or	r15, r7
     2f0:	08 29       	or	r16, r8
     2f2:	19 29       	or	r17, r9
     2f4:	3c c0       	rjmp	.+120    	; 0x36e <_fpadd_parts+0x192>
     2f6:	23 2b       	or	r18, r19
     2f8:	d1 f1       	breq	.+116    	; 0x36e <_fpadd_parts+0x192>
     2fa:	26 0e       	add	r2, r22
     2fc:	37 1e       	adc	r3, r23
     2fe:	35 01       	movw	r6, r10
     300:	46 01       	movw	r8, r12
     302:	06 2e       	mov	r0, r22
     304:	04 c0       	rjmp	.+8      	; 0x30e <_fpadd_parts+0x132>
     306:	96 94       	lsr	r9
     308:	87 94       	ror	r8
     30a:	77 94       	ror	r7
     30c:	67 94       	ror	r6
     30e:	0a 94       	dec	r0
     310:	d2 f7       	brpl	.-12     	; 0x306 <_fpadd_parts+0x12a>
     312:	21 e0       	ldi	r18, 0x01	; 1
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	40 e0       	ldi	r20, 0x00	; 0
     318:	50 e0       	ldi	r21, 0x00	; 0
     31a:	04 c0       	rjmp	.+8      	; 0x324 <_fpadd_parts+0x148>
     31c:	22 0f       	add	r18, r18
     31e:	33 1f       	adc	r19, r19
     320:	44 1f       	adc	r20, r20
     322:	55 1f       	adc	r21, r21
     324:	6a 95       	dec	r22
     326:	d2 f7       	brpl	.-12     	; 0x31c <_fpadd_parts+0x140>
     328:	21 50       	subi	r18, 0x01	; 1
     32a:	30 40       	sbci	r19, 0x00	; 0
     32c:	40 40       	sbci	r20, 0x00	; 0
     32e:	50 40       	sbci	r21, 0x00	; 0
     330:	2a 21       	and	r18, r10
     332:	3b 21       	and	r19, r11
     334:	4c 21       	and	r20, r12
     336:	5d 21       	and	r21, r13
     338:	21 15       	cp	r18, r1
     33a:	31 05       	cpc	r19, r1
     33c:	41 05       	cpc	r20, r1
     33e:	51 05       	cpc	r21, r1
     340:	21 f0       	breq	.+8      	; 0x34a <_fpadd_parts+0x16e>
     342:	21 e0       	ldi	r18, 0x01	; 1
     344:	30 e0       	ldi	r19, 0x00	; 0
     346:	40 e0       	ldi	r20, 0x00	; 0
     348:	50 e0       	ldi	r21, 0x00	; 0
     34a:	59 01       	movw	r10, r18
     34c:	6a 01       	movw	r12, r20
     34e:	a6 28       	or	r10, r6
     350:	b7 28       	or	r11, r7
     352:	c8 28       	or	r12, r8
     354:	d9 28       	or	r13, r9
     356:	0b c0       	rjmp	.+22     	; 0x36e <_fpadd_parts+0x192>
     358:	82 15       	cp	r24, r2
     35a:	93 05       	cpc	r25, r3
     35c:	2c f0       	brlt	.+10     	; 0x368 <_fpadd_parts+0x18c>
     35e:	1c 01       	movw	r2, r24
     360:	aa 24       	eor	r10, r10
     362:	bb 24       	eor	r11, r11
     364:	65 01       	movw	r12, r10
     366:	03 c0       	rjmp	.+6      	; 0x36e <_fpadd_parts+0x192>
     368:	ee 24       	eor	r14, r14
     36a:	ff 24       	eor	r15, r15
     36c:	87 01       	movw	r16, r14
     36e:	11 96       	adiw	r26, 0x01	; 1
     370:	9c 91       	ld	r25, X
     372:	d2 01       	movw	r26, r4
     374:	11 96       	adiw	r26, 0x01	; 1
     376:	8c 91       	ld	r24, X
     378:	98 17       	cp	r25, r24
     37a:	09 f4       	brne	.+2      	; 0x37e <_fpadd_parts+0x1a2>
     37c:	45 c0       	rjmp	.+138    	; 0x408 <_fpadd_parts+0x22c>
     37e:	99 23       	and	r25, r25
     380:	39 f0       	breq	.+14     	; 0x390 <_fpadd_parts+0x1b4>
     382:	a8 01       	movw	r20, r16
     384:	97 01       	movw	r18, r14
     386:	2a 19       	sub	r18, r10
     388:	3b 09       	sbc	r19, r11
     38a:	4c 09       	sbc	r20, r12
     38c:	5d 09       	sbc	r21, r13
     38e:	06 c0       	rjmp	.+12     	; 0x39c <_fpadd_parts+0x1c0>
     390:	a6 01       	movw	r20, r12
     392:	95 01       	movw	r18, r10
     394:	2e 19       	sub	r18, r14
     396:	3f 09       	sbc	r19, r15
     398:	40 0b       	sbc	r20, r16
     39a:	51 0b       	sbc	r21, r17
     39c:	57 fd       	sbrc	r21, 7
     39e:	08 c0       	rjmp	.+16     	; 0x3b0 <_fpadd_parts+0x1d4>
     3a0:	11 82       	std	Z+1, r1	; 0x01
     3a2:	33 82       	std	Z+3, r3	; 0x03
     3a4:	22 82       	std	Z+2, r2	; 0x02
     3a6:	24 83       	std	Z+4, r18	; 0x04
     3a8:	35 83       	std	Z+5, r19	; 0x05
     3aa:	46 83       	std	Z+6, r20	; 0x06
     3ac:	57 83       	std	Z+7, r21	; 0x07
     3ae:	1d c0       	rjmp	.+58     	; 0x3ea <_fpadd_parts+0x20e>
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	81 83       	std	Z+1, r24	; 0x01
     3b4:	33 82       	std	Z+3, r3	; 0x03
     3b6:	22 82       	std	Z+2, r2	; 0x02
     3b8:	88 27       	eor	r24, r24
     3ba:	99 27       	eor	r25, r25
     3bc:	dc 01       	movw	r26, r24
     3be:	82 1b       	sub	r24, r18
     3c0:	93 0b       	sbc	r25, r19
     3c2:	a4 0b       	sbc	r26, r20
     3c4:	b5 0b       	sbc	r27, r21
     3c6:	84 83       	std	Z+4, r24	; 0x04
     3c8:	95 83       	std	Z+5, r25	; 0x05
     3ca:	a6 83       	std	Z+6, r26	; 0x06
     3cc:	b7 83       	std	Z+7, r27	; 0x07
     3ce:	0d c0       	rjmp	.+26     	; 0x3ea <_fpadd_parts+0x20e>
     3d0:	22 0f       	add	r18, r18
     3d2:	33 1f       	adc	r19, r19
     3d4:	44 1f       	adc	r20, r20
     3d6:	55 1f       	adc	r21, r21
     3d8:	24 83       	std	Z+4, r18	; 0x04
     3da:	35 83       	std	Z+5, r19	; 0x05
     3dc:	46 83       	std	Z+6, r20	; 0x06
     3de:	57 83       	std	Z+7, r21	; 0x07
     3e0:	82 81       	ldd	r24, Z+2	; 0x02
     3e2:	93 81       	ldd	r25, Z+3	; 0x03
     3e4:	01 97       	sbiw	r24, 0x01	; 1
     3e6:	93 83       	std	Z+3, r25	; 0x03
     3e8:	82 83       	std	Z+2, r24	; 0x02
     3ea:	24 81       	ldd	r18, Z+4	; 0x04
     3ec:	35 81       	ldd	r19, Z+5	; 0x05
     3ee:	46 81       	ldd	r20, Z+6	; 0x06
     3f0:	57 81       	ldd	r21, Z+7	; 0x07
     3f2:	da 01       	movw	r26, r20
     3f4:	c9 01       	movw	r24, r18
     3f6:	01 97       	sbiw	r24, 0x01	; 1
     3f8:	a1 09       	sbc	r26, r1
     3fa:	b1 09       	sbc	r27, r1
     3fc:	8f 5f       	subi	r24, 0xFF	; 255
     3fe:	9f 4f       	sbci	r25, 0xFF	; 255
     400:	af 4f       	sbci	r26, 0xFF	; 255
     402:	bf 43       	sbci	r27, 0x3F	; 63
     404:	28 f3       	brcs	.-54     	; 0x3d0 <_fpadd_parts+0x1f4>
     406:	0b c0       	rjmp	.+22     	; 0x41e <_fpadd_parts+0x242>
     408:	91 83       	std	Z+1, r25	; 0x01
     40a:	33 82       	std	Z+3, r3	; 0x03
     40c:	22 82       	std	Z+2, r2	; 0x02
     40e:	ea 0c       	add	r14, r10
     410:	fb 1c       	adc	r15, r11
     412:	0c 1d       	adc	r16, r12
     414:	1d 1d       	adc	r17, r13
     416:	e4 82       	std	Z+4, r14	; 0x04
     418:	f5 82       	std	Z+5, r15	; 0x05
     41a:	06 83       	std	Z+6, r16	; 0x06
     41c:	17 83       	std	Z+7, r17	; 0x07
     41e:	83 e0       	ldi	r24, 0x03	; 3
     420:	80 83       	st	Z, r24
     422:	24 81       	ldd	r18, Z+4	; 0x04
     424:	35 81       	ldd	r19, Z+5	; 0x05
     426:	46 81       	ldd	r20, Z+6	; 0x06
     428:	57 81       	ldd	r21, Z+7	; 0x07
     42a:	57 ff       	sbrs	r21, 7
     42c:	1a c0       	rjmp	.+52     	; 0x462 <__stack+0x3>
     42e:	c9 01       	movw	r24, r18
     430:	aa 27       	eor	r26, r26
     432:	97 fd       	sbrc	r25, 7
     434:	a0 95       	com	r26
     436:	ba 2f       	mov	r27, r26
     438:	81 70       	andi	r24, 0x01	; 1
     43a:	90 70       	andi	r25, 0x00	; 0
     43c:	a0 70       	andi	r26, 0x00	; 0
     43e:	b0 70       	andi	r27, 0x00	; 0
     440:	56 95       	lsr	r21
     442:	47 95       	ror	r20
     444:	37 95       	ror	r19
     446:	27 95       	ror	r18
     448:	82 2b       	or	r24, r18
     44a:	93 2b       	or	r25, r19
     44c:	a4 2b       	or	r26, r20
     44e:	b5 2b       	or	r27, r21
     450:	84 83       	std	Z+4, r24	; 0x04
     452:	95 83       	std	Z+5, r25	; 0x05
     454:	a6 83       	std	Z+6, r26	; 0x06
     456:	b7 83       	std	Z+7, r27	; 0x07
     458:	82 81       	ldd	r24, Z+2	; 0x02
     45a:	93 81       	ldd	r25, Z+3	; 0x03
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	93 83       	std	Z+3, r25	; 0x03
     460:	82 83       	std	Z+2, r24	; 0x02
     462:	df 01       	movw	r26, r30
     464:	01 c0       	rjmp	.+2      	; 0x468 <__stack+0x9>
     466:	d2 01       	movw	r26, r4
     468:	cd 01       	movw	r24, r26
     46a:	cd b7       	in	r28, 0x3d	; 61
     46c:	de b7       	in	r29, 0x3e	; 62
     46e:	e2 e1       	ldi	r30, 0x12	; 18
     470:	0c 94 89 13 	jmp	0x2712	; 0x2712 <__epilogue_restores__>

00000474 <__subsf3>:
     474:	a0 e2       	ldi	r26, 0x20	; 32
     476:	b0 e0       	ldi	r27, 0x00	; 0
     478:	e0 e4       	ldi	r30, 0x40	; 64
     47a:	f2 e0       	ldi	r31, 0x02	; 2
     47c:	0c 94 79 13 	jmp	0x26f2	; 0x26f2 <__prologue_saves__+0x18>
     480:	69 83       	std	Y+1, r22	; 0x01
     482:	7a 83       	std	Y+2, r23	; 0x02
     484:	8b 83       	std	Y+3, r24	; 0x03
     486:	9c 83       	std	Y+4, r25	; 0x04
     488:	2d 83       	std	Y+5, r18	; 0x05
     48a:	3e 83       	std	Y+6, r19	; 0x06
     48c:	4f 83       	std	Y+7, r20	; 0x07
     48e:	58 87       	std	Y+8, r21	; 0x08
     490:	e9 e0       	ldi	r30, 0x09	; 9
     492:	ee 2e       	mov	r14, r30
     494:	f1 2c       	mov	r15, r1
     496:	ec 0e       	add	r14, r28
     498:	fd 1e       	adc	r15, r29
     49a:	ce 01       	movw	r24, r28
     49c:	01 96       	adiw	r24, 0x01	; 1
     49e:	b7 01       	movw	r22, r14
     4a0:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     4a4:	8e 01       	movw	r16, r28
     4a6:	0f 5e       	subi	r16, 0xEF	; 239
     4a8:	1f 4f       	sbci	r17, 0xFF	; 255
     4aa:	ce 01       	movw	r24, r28
     4ac:	05 96       	adiw	r24, 0x05	; 5
     4ae:	b8 01       	movw	r22, r16
     4b0:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     4b4:	8a 89       	ldd	r24, Y+18	; 0x12
     4b6:	91 e0       	ldi	r25, 0x01	; 1
     4b8:	89 27       	eor	r24, r25
     4ba:	8a 8b       	std	Y+18, r24	; 0x12
     4bc:	c7 01       	movw	r24, r14
     4be:	b8 01       	movw	r22, r16
     4c0:	ae 01       	movw	r20, r28
     4c2:	47 5e       	subi	r20, 0xE7	; 231
     4c4:	5f 4f       	sbci	r21, 0xFF	; 255
     4c6:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_fpadd_parts>
     4ca:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__pack_f>
     4ce:	a0 96       	adiw	r28, 0x20	; 32
     4d0:	e6 e0       	ldi	r30, 0x06	; 6
     4d2:	0c 94 95 13 	jmp	0x272a	; 0x272a <__epilogue_restores__+0x18>

000004d6 <__addsf3>:
     4d6:	a0 e2       	ldi	r26, 0x20	; 32
     4d8:	b0 e0       	ldi	r27, 0x00	; 0
     4da:	e1 e7       	ldi	r30, 0x71	; 113
     4dc:	f2 e0       	ldi	r31, 0x02	; 2
     4de:	0c 94 79 13 	jmp	0x26f2	; 0x26f2 <__prologue_saves__+0x18>
     4e2:	69 83       	std	Y+1, r22	; 0x01
     4e4:	7a 83       	std	Y+2, r23	; 0x02
     4e6:	8b 83       	std	Y+3, r24	; 0x03
     4e8:	9c 83       	std	Y+4, r25	; 0x04
     4ea:	2d 83       	std	Y+5, r18	; 0x05
     4ec:	3e 83       	std	Y+6, r19	; 0x06
     4ee:	4f 83       	std	Y+7, r20	; 0x07
     4f0:	58 87       	std	Y+8, r21	; 0x08
     4f2:	f9 e0       	ldi	r31, 0x09	; 9
     4f4:	ef 2e       	mov	r14, r31
     4f6:	f1 2c       	mov	r15, r1
     4f8:	ec 0e       	add	r14, r28
     4fa:	fd 1e       	adc	r15, r29
     4fc:	ce 01       	movw	r24, r28
     4fe:	01 96       	adiw	r24, 0x01	; 1
     500:	b7 01       	movw	r22, r14
     502:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     506:	8e 01       	movw	r16, r28
     508:	0f 5e       	subi	r16, 0xEF	; 239
     50a:	1f 4f       	sbci	r17, 0xFF	; 255
     50c:	ce 01       	movw	r24, r28
     50e:	05 96       	adiw	r24, 0x05	; 5
     510:	b8 01       	movw	r22, r16
     512:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     516:	c7 01       	movw	r24, r14
     518:	b8 01       	movw	r22, r16
     51a:	ae 01       	movw	r20, r28
     51c:	47 5e       	subi	r20, 0xE7	; 231
     51e:	5f 4f       	sbci	r21, 0xFF	; 255
     520:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_fpadd_parts>
     524:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__pack_f>
     528:	a0 96       	adiw	r28, 0x20	; 32
     52a:	e6 e0       	ldi	r30, 0x06	; 6
     52c:	0c 94 95 13 	jmp	0x272a	; 0x272a <__epilogue_restores__+0x18>

00000530 <__mulsf3>:
     530:	a0 e2       	ldi	r26, 0x20	; 32
     532:	b0 e0       	ldi	r27, 0x00	; 0
     534:	ee e9       	ldi	r30, 0x9E	; 158
     536:	f2 e0       	ldi	r31, 0x02	; 2
     538:	0c 94 6d 13 	jmp	0x26da	; 0x26da <__prologue_saves__>
     53c:	69 83       	std	Y+1, r22	; 0x01
     53e:	7a 83       	std	Y+2, r23	; 0x02
     540:	8b 83       	std	Y+3, r24	; 0x03
     542:	9c 83       	std	Y+4, r25	; 0x04
     544:	2d 83       	std	Y+5, r18	; 0x05
     546:	3e 83       	std	Y+6, r19	; 0x06
     548:	4f 83       	std	Y+7, r20	; 0x07
     54a:	58 87       	std	Y+8, r21	; 0x08
     54c:	ce 01       	movw	r24, r28
     54e:	01 96       	adiw	r24, 0x01	; 1
     550:	be 01       	movw	r22, r28
     552:	67 5f       	subi	r22, 0xF7	; 247
     554:	7f 4f       	sbci	r23, 0xFF	; 255
     556:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     55a:	ce 01       	movw	r24, r28
     55c:	05 96       	adiw	r24, 0x05	; 5
     55e:	be 01       	movw	r22, r28
     560:	6f 5e       	subi	r22, 0xEF	; 239
     562:	7f 4f       	sbci	r23, 0xFF	; 255
     564:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     568:	99 85       	ldd	r25, Y+9	; 0x09
     56a:	92 30       	cpi	r25, 0x02	; 2
     56c:	88 f0       	brcs	.+34     	; 0x590 <__mulsf3+0x60>
     56e:	89 89       	ldd	r24, Y+17	; 0x11
     570:	82 30       	cpi	r24, 0x02	; 2
     572:	c8 f0       	brcs	.+50     	; 0x5a6 <__mulsf3+0x76>
     574:	94 30       	cpi	r25, 0x04	; 4
     576:	19 f4       	brne	.+6      	; 0x57e <__mulsf3+0x4e>
     578:	82 30       	cpi	r24, 0x02	; 2
     57a:	51 f4       	brne	.+20     	; 0x590 <__mulsf3+0x60>
     57c:	04 c0       	rjmp	.+8      	; 0x586 <__mulsf3+0x56>
     57e:	84 30       	cpi	r24, 0x04	; 4
     580:	29 f4       	brne	.+10     	; 0x58c <__mulsf3+0x5c>
     582:	92 30       	cpi	r25, 0x02	; 2
     584:	81 f4       	brne	.+32     	; 0x5a6 <__mulsf3+0x76>
     586:	85 e9       	ldi	r24, 0x95	; 149
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	c6 c0       	rjmp	.+396    	; 0x718 <__mulsf3+0x1e8>
     58c:	92 30       	cpi	r25, 0x02	; 2
     58e:	49 f4       	brne	.+18     	; 0x5a2 <__mulsf3+0x72>
     590:	20 e0       	ldi	r18, 0x00	; 0
     592:	9a 85       	ldd	r25, Y+10	; 0x0a
     594:	8a 89       	ldd	r24, Y+18	; 0x12
     596:	98 13       	cpse	r25, r24
     598:	21 e0       	ldi	r18, 0x01	; 1
     59a:	2a 87       	std	Y+10, r18	; 0x0a
     59c:	ce 01       	movw	r24, r28
     59e:	09 96       	adiw	r24, 0x09	; 9
     5a0:	bb c0       	rjmp	.+374    	; 0x718 <__mulsf3+0x1e8>
     5a2:	82 30       	cpi	r24, 0x02	; 2
     5a4:	49 f4       	brne	.+18     	; 0x5b8 <__mulsf3+0x88>
     5a6:	20 e0       	ldi	r18, 0x00	; 0
     5a8:	9a 85       	ldd	r25, Y+10	; 0x0a
     5aa:	8a 89       	ldd	r24, Y+18	; 0x12
     5ac:	98 13       	cpse	r25, r24
     5ae:	21 e0       	ldi	r18, 0x01	; 1
     5b0:	2a 8b       	std	Y+18, r18	; 0x12
     5b2:	ce 01       	movw	r24, r28
     5b4:	41 96       	adiw	r24, 0x11	; 17
     5b6:	b0 c0       	rjmp	.+352    	; 0x718 <__mulsf3+0x1e8>
     5b8:	2d 84       	ldd	r2, Y+13	; 0x0d
     5ba:	3e 84       	ldd	r3, Y+14	; 0x0e
     5bc:	4f 84       	ldd	r4, Y+15	; 0x0f
     5be:	58 88       	ldd	r5, Y+16	; 0x10
     5c0:	6d 88       	ldd	r6, Y+21	; 0x15
     5c2:	7e 88       	ldd	r7, Y+22	; 0x16
     5c4:	8f 88       	ldd	r8, Y+23	; 0x17
     5c6:	98 8c       	ldd	r9, Y+24	; 0x18
     5c8:	ee 24       	eor	r14, r14
     5ca:	ff 24       	eor	r15, r15
     5cc:	87 01       	movw	r16, r14
     5ce:	aa 24       	eor	r10, r10
     5d0:	bb 24       	eor	r11, r11
     5d2:	65 01       	movw	r12, r10
     5d4:	40 e0       	ldi	r20, 0x00	; 0
     5d6:	50 e0       	ldi	r21, 0x00	; 0
     5d8:	60 e0       	ldi	r22, 0x00	; 0
     5da:	70 e0       	ldi	r23, 0x00	; 0
     5dc:	e0 e0       	ldi	r30, 0x00	; 0
     5de:	f0 e0       	ldi	r31, 0x00	; 0
     5e0:	c1 01       	movw	r24, r2
     5e2:	81 70       	andi	r24, 0x01	; 1
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	89 2b       	or	r24, r25
     5e8:	e9 f0       	breq	.+58     	; 0x624 <__mulsf3+0xf4>
     5ea:	e6 0c       	add	r14, r6
     5ec:	f7 1c       	adc	r15, r7
     5ee:	08 1d       	adc	r16, r8
     5f0:	19 1d       	adc	r17, r9
     5f2:	9a 01       	movw	r18, r20
     5f4:	ab 01       	movw	r20, r22
     5f6:	2a 0d       	add	r18, r10
     5f8:	3b 1d       	adc	r19, r11
     5fa:	4c 1d       	adc	r20, r12
     5fc:	5d 1d       	adc	r21, r13
     5fe:	80 e0       	ldi	r24, 0x00	; 0
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	a0 e0       	ldi	r26, 0x00	; 0
     604:	b0 e0       	ldi	r27, 0x00	; 0
     606:	e6 14       	cp	r14, r6
     608:	f7 04       	cpc	r15, r7
     60a:	08 05       	cpc	r16, r8
     60c:	19 05       	cpc	r17, r9
     60e:	20 f4       	brcc	.+8      	; 0x618 <__mulsf3+0xe8>
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	a0 e0       	ldi	r26, 0x00	; 0
     616:	b0 e0       	ldi	r27, 0x00	; 0
     618:	ba 01       	movw	r22, r20
     61a:	a9 01       	movw	r20, r18
     61c:	48 0f       	add	r20, r24
     61e:	59 1f       	adc	r21, r25
     620:	6a 1f       	adc	r22, r26
     622:	7b 1f       	adc	r23, r27
     624:	aa 0c       	add	r10, r10
     626:	bb 1c       	adc	r11, r11
     628:	cc 1c       	adc	r12, r12
     62a:	dd 1c       	adc	r13, r13
     62c:	97 fe       	sbrs	r9, 7
     62e:	08 c0       	rjmp	.+16     	; 0x640 <__mulsf3+0x110>
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	a0 e0       	ldi	r26, 0x00	; 0
     636:	b0 e0       	ldi	r27, 0x00	; 0
     638:	a8 2a       	or	r10, r24
     63a:	b9 2a       	or	r11, r25
     63c:	ca 2a       	or	r12, r26
     63e:	db 2a       	or	r13, r27
     640:	31 96       	adiw	r30, 0x01	; 1
     642:	e0 32       	cpi	r30, 0x20	; 32
     644:	f1 05       	cpc	r31, r1
     646:	49 f0       	breq	.+18     	; 0x65a <__mulsf3+0x12a>
     648:	66 0c       	add	r6, r6
     64a:	77 1c       	adc	r7, r7
     64c:	88 1c       	adc	r8, r8
     64e:	99 1c       	adc	r9, r9
     650:	56 94       	lsr	r5
     652:	47 94       	ror	r4
     654:	37 94       	ror	r3
     656:	27 94       	ror	r2
     658:	c3 cf       	rjmp	.-122    	; 0x5e0 <__mulsf3+0xb0>
     65a:	fa 85       	ldd	r31, Y+10	; 0x0a
     65c:	ea 89       	ldd	r30, Y+18	; 0x12
     65e:	2b 89       	ldd	r18, Y+19	; 0x13
     660:	3c 89       	ldd	r19, Y+20	; 0x14
     662:	8b 85       	ldd	r24, Y+11	; 0x0b
     664:	9c 85       	ldd	r25, Y+12	; 0x0c
     666:	28 0f       	add	r18, r24
     668:	39 1f       	adc	r19, r25
     66a:	2e 5f       	subi	r18, 0xFE	; 254
     66c:	3f 4f       	sbci	r19, 0xFF	; 255
     66e:	17 c0       	rjmp	.+46     	; 0x69e <__mulsf3+0x16e>
     670:	ca 01       	movw	r24, r20
     672:	81 70       	andi	r24, 0x01	; 1
     674:	90 70       	andi	r25, 0x00	; 0
     676:	89 2b       	or	r24, r25
     678:	61 f0       	breq	.+24     	; 0x692 <__mulsf3+0x162>
     67a:	16 95       	lsr	r17
     67c:	07 95       	ror	r16
     67e:	f7 94       	ror	r15
     680:	e7 94       	ror	r14
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	a0 e0       	ldi	r26, 0x00	; 0
     688:	b0 e8       	ldi	r27, 0x80	; 128
     68a:	e8 2a       	or	r14, r24
     68c:	f9 2a       	or	r15, r25
     68e:	0a 2b       	or	r16, r26
     690:	1b 2b       	or	r17, r27
     692:	76 95       	lsr	r23
     694:	67 95       	ror	r22
     696:	57 95       	ror	r21
     698:	47 95       	ror	r20
     69a:	2f 5f       	subi	r18, 0xFF	; 255
     69c:	3f 4f       	sbci	r19, 0xFF	; 255
     69e:	77 fd       	sbrc	r23, 7
     6a0:	e7 cf       	rjmp	.-50     	; 0x670 <__mulsf3+0x140>
     6a2:	0c c0       	rjmp	.+24     	; 0x6bc <__mulsf3+0x18c>
     6a4:	44 0f       	add	r20, r20
     6a6:	55 1f       	adc	r21, r21
     6a8:	66 1f       	adc	r22, r22
     6aa:	77 1f       	adc	r23, r23
     6ac:	17 fd       	sbrc	r17, 7
     6ae:	41 60       	ori	r20, 0x01	; 1
     6b0:	ee 0c       	add	r14, r14
     6b2:	ff 1c       	adc	r15, r15
     6b4:	00 1f       	adc	r16, r16
     6b6:	11 1f       	adc	r17, r17
     6b8:	21 50       	subi	r18, 0x01	; 1
     6ba:	30 40       	sbci	r19, 0x00	; 0
     6bc:	40 30       	cpi	r20, 0x00	; 0
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	59 07       	cpc	r21, r25
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	69 07       	cpc	r22, r25
     6c6:	90 e4       	ldi	r25, 0x40	; 64
     6c8:	79 07       	cpc	r23, r25
     6ca:	60 f3       	brcs	.-40     	; 0x6a4 <__mulsf3+0x174>
     6cc:	2b 8f       	std	Y+27, r18	; 0x1b
     6ce:	3c 8f       	std	Y+28, r19	; 0x1c
     6d0:	db 01       	movw	r26, r22
     6d2:	ca 01       	movw	r24, r20
     6d4:	8f 77       	andi	r24, 0x7F	; 127
     6d6:	90 70       	andi	r25, 0x00	; 0
     6d8:	a0 70       	andi	r26, 0x00	; 0
     6da:	b0 70       	andi	r27, 0x00	; 0
     6dc:	80 34       	cpi	r24, 0x40	; 64
     6de:	91 05       	cpc	r25, r1
     6e0:	a1 05       	cpc	r26, r1
     6e2:	b1 05       	cpc	r27, r1
     6e4:	61 f4       	brne	.+24     	; 0x6fe <__mulsf3+0x1ce>
     6e6:	47 fd       	sbrc	r20, 7
     6e8:	0a c0       	rjmp	.+20     	; 0x6fe <__mulsf3+0x1ce>
     6ea:	e1 14       	cp	r14, r1
     6ec:	f1 04       	cpc	r15, r1
     6ee:	01 05       	cpc	r16, r1
     6f0:	11 05       	cpc	r17, r1
     6f2:	29 f0       	breq	.+10     	; 0x6fe <__mulsf3+0x1ce>
     6f4:	40 5c       	subi	r20, 0xC0	; 192
     6f6:	5f 4f       	sbci	r21, 0xFF	; 255
     6f8:	6f 4f       	sbci	r22, 0xFF	; 255
     6fa:	7f 4f       	sbci	r23, 0xFF	; 255
     6fc:	40 78       	andi	r20, 0x80	; 128
     6fe:	1a 8e       	std	Y+26, r1	; 0x1a
     700:	fe 17       	cp	r31, r30
     702:	11 f0       	breq	.+4      	; 0x708 <__mulsf3+0x1d8>
     704:	81 e0       	ldi	r24, 0x01	; 1
     706:	8a 8f       	std	Y+26, r24	; 0x1a
     708:	4d 8f       	std	Y+29, r20	; 0x1d
     70a:	5e 8f       	std	Y+30, r21	; 0x1e
     70c:	6f 8f       	std	Y+31, r22	; 0x1f
     70e:	78 a3       	std	Y+32, r23	; 0x20
     710:	83 e0       	ldi	r24, 0x03	; 3
     712:	89 8f       	std	Y+25, r24	; 0x19
     714:	ce 01       	movw	r24, r28
     716:	49 96       	adiw	r24, 0x19	; 25
     718:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__pack_f>
     71c:	a0 96       	adiw	r28, 0x20	; 32
     71e:	e2 e1       	ldi	r30, 0x12	; 18
     720:	0c 94 89 13 	jmp	0x2712	; 0x2712 <__epilogue_restores__>

00000724 <__divsf3>:
     724:	a8 e1       	ldi	r26, 0x18	; 24
     726:	b0 e0       	ldi	r27, 0x00	; 0
     728:	e8 e9       	ldi	r30, 0x98	; 152
     72a:	f3 e0       	ldi	r31, 0x03	; 3
     72c:	0c 94 75 13 	jmp	0x26ea	; 0x26ea <__prologue_saves__+0x10>
     730:	69 83       	std	Y+1, r22	; 0x01
     732:	7a 83       	std	Y+2, r23	; 0x02
     734:	8b 83       	std	Y+3, r24	; 0x03
     736:	9c 83       	std	Y+4, r25	; 0x04
     738:	2d 83       	std	Y+5, r18	; 0x05
     73a:	3e 83       	std	Y+6, r19	; 0x06
     73c:	4f 83       	std	Y+7, r20	; 0x07
     73e:	58 87       	std	Y+8, r21	; 0x08
     740:	b9 e0       	ldi	r27, 0x09	; 9
     742:	eb 2e       	mov	r14, r27
     744:	f1 2c       	mov	r15, r1
     746:	ec 0e       	add	r14, r28
     748:	fd 1e       	adc	r15, r29
     74a:	ce 01       	movw	r24, r28
     74c:	01 96       	adiw	r24, 0x01	; 1
     74e:	b7 01       	movw	r22, r14
     750:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     754:	8e 01       	movw	r16, r28
     756:	0f 5e       	subi	r16, 0xEF	; 239
     758:	1f 4f       	sbci	r17, 0xFF	; 255
     75a:	ce 01       	movw	r24, r28
     75c:	05 96       	adiw	r24, 0x05	; 5
     75e:	b8 01       	movw	r22, r16
     760:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     764:	29 85       	ldd	r18, Y+9	; 0x09
     766:	22 30       	cpi	r18, 0x02	; 2
     768:	08 f4       	brcc	.+2      	; 0x76c <__divsf3+0x48>
     76a:	7e c0       	rjmp	.+252    	; 0x868 <__divsf3+0x144>
     76c:	39 89       	ldd	r19, Y+17	; 0x11
     76e:	32 30       	cpi	r19, 0x02	; 2
     770:	10 f4       	brcc	.+4      	; 0x776 <__divsf3+0x52>
     772:	b8 01       	movw	r22, r16
     774:	7c c0       	rjmp	.+248    	; 0x86e <__divsf3+0x14a>
     776:	8a 85       	ldd	r24, Y+10	; 0x0a
     778:	9a 89       	ldd	r25, Y+18	; 0x12
     77a:	89 27       	eor	r24, r25
     77c:	8a 87       	std	Y+10, r24	; 0x0a
     77e:	24 30       	cpi	r18, 0x04	; 4
     780:	11 f0       	breq	.+4      	; 0x786 <__divsf3+0x62>
     782:	22 30       	cpi	r18, 0x02	; 2
     784:	31 f4       	brne	.+12     	; 0x792 <__divsf3+0x6e>
     786:	23 17       	cp	r18, r19
     788:	09 f0       	breq	.+2      	; 0x78c <__divsf3+0x68>
     78a:	6e c0       	rjmp	.+220    	; 0x868 <__divsf3+0x144>
     78c:	65 e9       	ldi	r22, 0x95	; 149
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	6e c0       	rjmp	.+220    	; 0x86e <__divsf3+0x14a>
     792:	34 30       	cpi	r19, 0x04	; 4
     794:	39 f4       	brne	.+14     	; 0x7a4 <__divsf3+0x80>
     796:	1d 86       	std	Y+13, r1	; 0x0d
     798:	1e 86       	std	Y+14, r1	; 0x0e
     79a:	1f 86       	std	Y+15, r1	; 0x0f
     79c:	18 8a       	std	Y+16, r1	; 0x10
     79e:	1c 86       	std	Y+12, r1	; 0x0c
     7a0:	1b 86       	std	Y+11, r1	; 0x0b
     7a2:	04 c0       	rjmp	.+8      	; 0x7ac <__divsf3+0x88>
     7a4:	32 30       	cpi	r19, 0x02	; 2
     7a6:	21 f4       	brne	.+8      	; 0x7b0 <__divsf3+0x8c>
     7a8:	84 e0       	ldi	r24, 0x04	; 4
     7aa:	89 87       	std	Y+9, r24	; 0x09
     7ac:	b7 01       	movw	r22, r14
     7ae:	5f c0       	rjmp	.+190    	; 0x86e <__divsf3+0x14a>
     7b0:	2b 85       	ldd	r18, Y+11	; 0x0b
     7b2:	3c 85       	ldd	r19, Y+12	; 0x0c
     7b4:	8b 89       	ldd	r24, Y+19	; 0x13
     7b6:	9c 89       	ldd	r25, Y+20	; 0x14
     7b8:	28 1b       	sub	r18, r24
     7ba:	39 0b       	sbc	r19, r25
     7bc:	3c 87       	std	Y+12, r19	; 0x0c
     7be:	2b 87       	std	Y+11, r18	; 0x0b
     7c0:	ed 84       	ldd	r14, Y+13	; 0x0d
     7c2:	fe 84       	ldd	r15, Y+14	; 0x0e
     7c4:	0f 85       	ldd	r16, Y+15	; 0x0f
     7c6:	18 89       	ldd	r17, Y+16	; 0x10
     7c8:	ad 88       	ldd	r10, Y+21	; 0x15
     7ca:	be 88       	ldd	r11, Y+22	; 0x16
     7cc:	cf 88       	ldd	r12, Y+23	; 0x17
     7ce:	d8 8c       	ldd	r13, Y+24	; 0x18
     7d0:	ea 14       	cp	r14, r10
     7d2:	fb 04       	cpc	r15, r11
     7d4:	0c 05       	cpc	r16, r12
     7d6:	1d 05       	cpc	r17, r13
     7d8:	40 f4       	brcc	.+16     	; 0x7ea <__divsf3+0xc6>
     7da:	ee 0c       	add	r14, r14
     7dc:	ff 1c       	adc	r15, r15
     7de:	00 1f       	adc	r16, r16
     7e0:	11 1f       	adc	r17, r17
     7e2:	21 50       	subi	r18, 0x01	; 1
     7e4:	30 40       	sbci	r19, 0x00	; 0
     7e6:	3c 87       	std	Y+12, r19	; 0x0c
     7e8:	2b 87       	std	Y+11, r18	; 0x0b
     7ea:	20 e0       	ldi	r18, 0x00	; 0
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	40 e0       	ldi	r20, 0x00	; 0
     7f0:	50 e0       	ldi	r21, 0x00	; 0
     7f2:	80 e0       	ldi	r24, 0x00	; 0
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	a0 e0       	ldi	r26, 0x00	; 0
     7f8:	b0 e4       	ldi	r27, 0x40	; 64
     7fa:	60 e0       	ldi	r22, 0x00	; 0
     7fc:	70 e0       	ldi	r23, 0x00	; 0
     7fe:	ea 14       	cp	r14, r10
     800:	fb 04       	cpc	r15, r11
     802:	0c 05       	cpc	r16, r12
     804:	1d 05       	cpc	r17, r13
     806:	40 f0       	brcs	.+16     	; 0x818 <__divsf3+0xf4>
     808:	28 2b       	or	r18, r24
     80a:	39 2b       	or	r19, r25
     80c:	4a 2b       	or	r20, r26
     80e:	5b 2b       	or	r21, r27
     810:	ea 18       	sub	r14, r10
     812:	fb 08       	sbc	r15, r11
     814:	0c 09       	sbc	r16, r12
     816:	1d 09       	sbc	r17, r13
     818:	b6 95       	lsr	r27
     81a:	a7 95       	ror	r26
     81c:	97 95       	ror	r25
     81e:	87 95       	ror	r24
     820:	ee 0c       	add	r14, r14
     822:	ff 1c       	adc	r15, r15
     824:	00 1f       	adc	r16, r16
     826:	11 1f       	adc	r17, r17
     828:	6f 5f       	subi	r22, 0xFF	; 255
     82a:	7f 4f       	sbci	r23, 0xFF	; 255
     82c:	6f 31       	cpi	r22, 0x1F	; 31
     82e:	71 05       	cpc	r23, r1
     830:	31 f7       	brne	.-52     	; 0x7fe <__divsf3+0xda>
     832:	da 01       	movw	r26, r20
     834:	c9 01       	movw	r24, r18
     836:	8f 77       	andi	r24, 0x7F	; 127
     838:	90 70       	andi	r25, 0x00	; 0
     83a:	a0 70       	andi	r26, 0x00	; 0
     83c:	b0 70       	andi	r27, 0x00	; 0
     83e:	80 34       	cpi	r24, 0x40	; 64
     840:	91 05       	cpc	r25, r1
     842:	a1 05       	cpc	r26, r1
     844:	b1 05       	cpc	r27, r1
     846:	61 f4       	brne	.+24     	; 0x860 <__divsf3+0x13c>
     848:	27 fd       	sbrc	r18, 7
     84a:	0a c0       	rjmp	.+20     	; 0x860 <__divsf3+0x13c>
     84c:	e1 14       	cp	r14, r1
     84e:	f1 04       	cpc	r15, r1
     850:	01 05       	cpc	r16, r1
     852:	11 05       	cpc	r17, r1
     854:	29 f0       	breq	.+10     	; 0x860 <__divsf3+0x13c>
     856:	20 5c       	subi	r18, 0xC0	; 192
     858:	3f 4f       	sbci	r19, 0xFF	; 255
     85a:	4f 4f       	sbci	r20, 0xFF	; 255
     85c:	5f 4f       	sbci	r21, 0xFF	; 255
     85e:	20 78       	andi	r18, 0x80	; 128
     860:	2d 87       	std	Y+13, r18	; 0x0d
     862:	3e 87       	std	Y+14, r19	; 0x0e
     864:	4f 87       	std	Y+15, r20	; 0x0f
     866:	58 8b       	std	Y+16, r21	; 0x10
     868:	be 01       	movw	r22, r28
     86a:	67 5f       	subi	r22, 0xF7	; 247
     86c:	7f 4f       	sbci	r23, 0xFF	; 255
     86e:	cb 01       	movw	r24, r22
     870:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__pack_f>
     874:	68 96       	adiw	r28, 0x18	; 24
     876:	ea e0       	ldi	r30, 0x0A	; 10
     878:	0c 94 91 13 	jmp	0x2722	; 0x2722 <__epilogue_restores__+0x10>

0000087c <__gtsf2>:
     87c:	a8 e1       	ldi	r26, 0x18	; 24
     87e:	b0 e0       	ldi	r27, 0x00	; 0
     880:	e4 e4       	ldi	r30, 0x44	; 68
     882:	f4 e0       	ldi	r31, 0x04	; 4
     884:	0c 94 79 13 	jmp	0x26f2	; 0x26f2 <__prologue_saves__+0x18>
     888:	69 83       	std	Y+1, r22	; 0x01
     88a:	7a 83       	std	Y+2, r23	; 0x02
     88c:	8b 83       	std	Y+3, r24	; 0x03
     88e:	9c 83       	std	Y+4, r25	; 0x04
     890:	2d 83       	std	Y+5, r18	; 0x05
     892:	3e 83       	std	Y+6, r19	; 0x06
     894:	4f 83       	std	Y+7, r20	; 0x07
     896:	58 87       	std	Y+8, r21	; 0x08
     898:	89 e0       	ldi	r24, 0x09	; 9
     89a:	e8 2e       	mov	r14, r24
     89c:	f1 2c       	mov	r15, r1
     89e:	ec 0e       	add	r14, r28
     8a0:	fd 1e       	adc	r15, r29
     8a2:	ce 01       	movw	r24, r28
     8a4:	01 96       	adiw	r24, 0x01	; 1
     8a6:	b7 01       	movw	r22, r14
     8a8:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     8ac:	8e 01       	movw	r16, r28
     8ae:	0f 5e       	subi	r16, 0xEF	; 239
     8b0:	1f 4f       	sbci	r17, 0xFF	; 255
     8b2:	ce 01       	movw	r24, r28
     8b4:	05 96       	adiw	r24, 0x05	; 5
     8b6:	b8 01       	movw	r22, r16
     8b8:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     8bc:	89 85       	ldd	r24, Y+9	; 0x09
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	40 f0       	brcs	.+16     	; 0x8d2 <__gtsf2+0x56>
     8c2:	89 89       	ldd	r24, Y+17	; 0x11
     8c4:	82 30       	cpi	r24, 0x02	; 2
     8c6:	28 f0       	brcs	.+10     	; 0x8d2 <__gtsf2+0x56>
     8c8:	c7 01       	movw	r24, r14
     8ca:	b8 01       	movw	r22, r16
     8cc:	0e 94 1c 07 	call	0xe38	; 0xe38 <__fpcmp_parts_f>
     8d0:	01 c0       	rjmp	.+2      	; 0x8d4 <__gtsf2+0x58>
     8d2:	8f ef       	ldi	r24, 0xFF	; 255
     8d4:	68 96       	adiw	r28, 0x18	; 24
     8d6:	e6 e0       	ldi	r30, 0x06	; 6
     8d8:	0c 94 95 13 	jmp	0x272a	; 0x272a <__epilogue_restores__+0x18>

000008dc <__gesf2>:
     8dc:	a8 e1       	ldi	r26, 0x18	; 24
     8de:	b0 e0       	ldi	r27, 0x00	; 0
     8e0:	e4 e7       	ldi	r30, 0x74	; 116
     8e2:	f4 e0       	ldi	r31, 0x04	; 4
     8e4:	0c 94 79 13 	jmp	0x26f2	; 0x26f2 <__prologue_saves__+0x18>
     8e8:	69 83       	std	Y+1, r22	; 0x01
     8ea:	7a 83       	std	Y+2, r23	; 0x02
     8ec:	8b 83       	std	Y+3, r24	; 0x03
     8ee:	9c 83       	std	Y+4, r25	; 0x04
     8f0:	2d 83       	std	Y+5, r18	; 0x05
     8f2:	3e 83       	std	Y+6, r19	; 0x06
     8f4:	4f 83       	std	Y+7, r20	; 0x07
     8f6:	58 87       	std	Y+8, r21	; 0x08
     8f8:	89 e0       	ldi	r24, 0x09	; 9
     8fa:	e8 2e       	mov	r14, r24
     8fc:	f1 2c       	mov	r15, r1
     8fe:	ec 0e       	add	r14, r28
     900:	fd 1e       	adc	r15, r29
     902:	ce 01       	movw	r24, r28
     904:	01 96       	adiw	r24, 0x01	; 1
     906:	b7 01       	movw	r22, r14
     908:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     90c:	8e 01       	movw	r16, r28
     90e:	0f 5e       	subi	r16, 0xEF	; 239
     910:	1f 4f       	sbci	r17, 0xFF	; 255
     912:	ce 01       	movw	r24, r28
     914:	05 96       	adiw	r24, 0x05	; 5
     916:	b8 01       	movw	r22, r16
     918:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     91c:	89 85       	ldd	r24, Y+9	; 0x09
     91e:	82 30       	cpi	r24, 0x02	; 2
     920:	40 f0       	brcs	.+16     	; 0x932 <__gesf2+0x56>
     922:	89 89       	ldd	r24, Y+17	; 0x11
     924:	82 30       	cpi	r24, 0x02	; 2
     926:	28 f0       	brcs	.+10     	; 0x932 <__gesf2+0x56>
     928:	c7 01       	movw	r24, r14
     92a:	b8 01       	movw	r22, r16
     92c:	0e 94 1c 07 	call	0xe38	; 0xe38 <__fpcmp_parts_f>
     930:	01 c0       	rjmp	.+2      	; 0x934 <__gesf2+0x58>
     932:	8f ef       	ldi	r24, 0xFF	; 255
     934:	68 96       	adiw	r28, 0x18	; 24
     936:	e6 e0       	ldi	r30, 0x06	; 6
     938:	0c 94 95 13 	jmp	0x272a	; 0x272a <__epilogue_restores__+0x18>

0000093c <__ltsf2>:
     93c:	a8 e1       	ldi	r26, 0x18	; 24
     93e:	b0 e0       	ldi	r27, 0x00	; 0
     940:	e4 ea       	ldi	r30, 0xA4	; 164
     942:	f4 e0       	ldi	r31, 0x04	; 4
     944:	0c 94 79 13 	jmp	0x26f2	; 0x26f2 <__prologue_saves__+0x18>
     948:	69 83       	std	Y+1, r22	; 0x01
     94a:	7a 83       	std	Y+2, r23	; 0x02
     94c:	8b 83       	std	Y+3, r24	; 0x03
     94e:	9c 83       	std	Y+4, r25	; 0x04
     950:	2d 83       	std	Y+5, r18	; 0x05
     952:	3e 83       	std	Y+6, r19	; 0x06
     954:	4f 83       	std	Y+7, r20	; 0x07
     956:	58 87       	std	Y+8, r21	; 0x08
     958:	89 e0       	ldi	r24, 0x09	; 9
     95a:	e8 2e       	mov	r14, r24
     95c:	f1 2c       	mov	r15, r1
     95e:	ec 0e       	add	r14, r28
     960:	fd 1e       	adc	r15, r29
     962:	ce 01       	movw	r24, r28
     964:	01 96       	adiw	r24, 0x01	; 1
     966:	b7 01       	movw	r22, r14
     968:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     96c:	8e 01       	movw	r16, r28
     96e:	0f 5e       	subi	r16, 0xEF	; 239
     970:	1f 4f       	sbci	r17, 0xFF	; 255
     972:	ce 01       	movw	r24, r28
     974:	05 96       	adiw	r24, 0x05	; 5
     976:	b8 01       	movw	r22, r16
     978:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     97c:	89 85       	ldd	r24, Y+9	; 0x09
     97e:	82 30       	cpi	r24, 0x02	; 2
     980:	40 f0       	brcs	.+16     	; 0x992 <__ltsf2+0x56>
     982:	89 89       	ldd	r24, Y+17	; 0x11
     984:	82 30       	cpi	r24, 0x02	; 2
     986:	28 f0       	brcs	.+10     	; 0x992 <__ltsf2+0x56>
     988:	c7 01       	movw	r24, r14
     98a:	b8 01       	movw	r22, r16
     98c:	0e 94 1c 07 	call	0xe38	; 0xe38 <__fpcmp_parts_f>
     990:	01 c0       	rjmp	.+2      	; 0x994 <__ltsf2+0x58>
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	68 96       	adiw	r28, 0x18	; 24
     996:	e6 e0       	ldi	r30, 0x06	; 6
     998:	0c 94 95 13 	jmp	0x272a	; 0x272a <__epilogue_restores__+0x18>

0000099c <__floatsisf>:
     99c:	a8 e0       	ldi	r26, 0x08	; 8
     99e:	b0 e0       	ldi	r27, 0x00	; 0
     9a0:	e4 ed       	ldi	r30, 0xD4	; 212
     9a2:	f4 e0       	ldi	r31, 0x04	; 4
     9a4:	0c 94 76 13 	jmp	0x26ec	; 0x26ec <__prologue_saves__+0x12>
     9a8:	9b 01       	movw	r18, r22
     9aa:	ac 01       	movw	r20, r24
     9ac:	83 e0       	ldi	r24, 0x03	; 3
     9ae:	89 83       	std	Y+1, r24	; 0x01
     9b0:	da 01       	movw	r26, r20
     9b2:	c9 01       	movw	r24, r18
     9b4:	88 27       	eor	r24, r24
     9b6:	b7 fd       	sbrc	r27, 7
     9b8:	83 95       	inc	r24
     9ba:	99 27       	eor	r25, r25
     9bc:	aa 27       	eor	r26, r26
     9be:	bb 27       	eor	r27, r27
     9c0:	b8 2e       	mov	r11, r24
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	41 05       	cpc	r20, r1
     9c8:	51 05       	cpc	r21, r1
     9ca:	19 f4       	brne	.+6      	; 0x9d2 <__floatsisf+0x36>
     9cc:	82 e0       	ldi	r24, 0x02	; 2
     9ce:	89 83       	std	Y+1, r24	; 0x01
     9d0:	3a c0       	rjmp	.+116    	; 0xa46 <__floatsisf+0xaa>
     9d2:	88 23       	and	r24, r24
     9d4:	a9 f0       	breq	.+42     	; 0xa00 <__floatsisf+0x64>
     9d6:	20 30       	cpi	r18, 0x00	; 0
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	38 07       	cpc	r19, r24
     9dc:	80 e0       	ldi	r24, 0x00	; 0
     9de:	48 07       	cpc	r20, r24
     9e0:	80 e8       	ldi	r24, 0x80	; 128
     9e2:	58 07       	cpc	r21, r24
     9e4:	29 f4       	brne	.+10     	; 0x9f0 <__floatsisf+0x54>
     9e6:	60 e0       	ldi	r22, 0x00	; 0
     9e8:	70 e0       	ldi	r23, 0x00	; 0
     9ea:	80 e0       	ldi	r24, 0x00	; 0
     9ec:	9f ec       	ldi	r25, 0xCF	; 207
     9ee:	30 c0       	rjmp	.+96     	; 0xa50 <__floatsisf+0xb4>
     9f0:	ee 24       	eor	r14, r14
     9f2:	ff 24       	eor	r15, r15
     9f4:	87 01       	movw	r16, r14
     9f6:	e2 1a       	sub	r14, r18
     9f8:	f3 0a       	sbc	r15, r19
     9fa:	04 0b       	sbc	r16, r20
     9fc:	15 0b       	sbc	r17, r21
     9fe:	02 c0       	rjmp	.+4      	; 0xa04 <__floatsisf+0x68>
     a00:	79 01       	movw	r14, r18
     a02:	8a 01       	movw	r16, r20
     a04:	8e e1       	ldi	r24, 0x1E	; 30
     a06:	c8 2e       	mov	r12, r24
     a08:	d1 2c       	mov	r13, r1
     a0a:	dc 82       	std	Y+4, r13	; 0x04
     a0c:	cb 82       	std	Y+3, r12	; 0x03
     a0e:	ed 82       	std	Y+5, r14	; 0x05
     a10:	fe 82       	std	Y+6, r15	; 0x06
     a12:	0f 83       	std	Y+7, r16	; 0x07
     a14:	18 87       	std	Y+8, r17	; 0x08
     a16:	c8 01       	movw	r24, r16
     a18:	b7 01       	movw	r22, r14
     a1a:	0e 94 80 05 	call	0xb00	; 0xb00 <__clzsi2>
     a1e:	01 97       	sbiw	r24, 0x01	; 1
     a20:	18 16       	cp	r1, r24
     a22:	19 06       	cpc	r1, r25
     a24:	84 f4       	brge	.+32     	; 0xa46 <__floatsisf+0xaa>
     a26:	08 2e       	mov	r0, r24
     a28:	04 c0       	rjmp	.+8      	; 0xa32 <__floatsisf+0x96>
     a2a:	ee 0c       	add	r14, r14
     a2c:	ff 1c       	adc	r15, r15
     a2e:	00 1f       	adc	r16, r16
     a30:	11 1f       	adc	r17, r17
     a32:	0a 94       	dec	r0
     a34:	d2 f7       	brpl	.-12     	; 0xa2a <__floatsisf+0x8e>
     a36:	ed 82       	std	Y+5, r14	; 0x05
     a38:	fe 82       	std	Y+6, r15	; 0x06
     a3a:	0f 83       	std	Y+7, r16	; 0x07
     a3c:	18 87       	std	Y+8, r17	; 0x08
     a3e:	c8 1a       	sub	r12, r24
     a40:	d9 0a       	sbc	r13, r25
     a42:	dc 82       	std	Y+4, r13	; 0x04
     a44:	cb 82       	std	Y+3, r12	; 0x03
     a46:	ba 82       	std	Y+2, r11	; 0x02
     a48:	ce 01       	movw	r24, r28
     a4a:	01 96       	adiw	r24, 0x01	; 1
     a4c:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__pack_f>
     a50:	28 96       	adiw	r28, 0x08	; 8
     a52:	e9 e0       	ldi	r30, 0x09	; 9
     a54:	0c 94 92 13 	jmp	0x2724	; 0x2724 <__epilogue_restores__+0x12>

00000a58 <__fixsfsi>:
     a58:	ac e0       	ldi	r26, 0x0C	; 12
     a5a:	b0 e0       	ldi	r27, 0x00	; 0
     a5c:	e2 e3       	ldi	r30, 0x32	; 50
     a5e:	f5 e0       	ldi	r31, 0x05	; 5
     a60:	0c 94 7d 13 	jmp	0x26fa	; 0x26fa <__prologue_saves__+0x20>
     a64:	69 83       	std	Y+1, r22	; 0x01
     a66:	7a 83       	std	Y+2, r23	; 0x02
     a68:	8b 83       	std	Y+3, r24	; 0x03
     a6a:	9c 83       	std	Y+4, r25	; 0x04
     a6c:	ce 01       	movw	r24, r28
     a6e:	01 96       	adiw	r24, 0x01	; 1
     a70:	be 01       	movw	r22, r28
     a72:	6b 5f       	subi	r22, 0xFB	; 251
     a74:	7f 4f       	sbci	r23, 0xFF	; 255
     a76:	0e 94 a4 06 	call	0xd48	; 0xd48 <__unpack_f>
     a7a:	8d 81       	ldd	r24, Y+5	; 0x05
     a7c:	82 30       	cpi	r24, 0x02	; 2
     a7e:	61 f1       	breq	.+88     	; 0xad8 <__fixsfsi+0x80>
     a80:	82 30       	cpi	r24, 0x02	; 2
     a82:	50 f1       	brcs	.+84     	; 0xad8 <__fixsfsi+0x80>
     a84:	84 30       	cpi	r24, 0x04	; 4
     a86:	21 f4       	brne	.+8      	; 0xa90 <__fixsfsi+0x38>
     a88:	8e 81       	ldd	r24, Y+6	; 0x06
     a8a:	88 23       	and	r24, r24
     a8c:	51 f1       	breq	.+84     	; 0xae2 <__fixsfsi+0x8a>
     a8e:	2e c0       	rjmp	.+92     	; 0xaec <__fixsfsi+0x94>
     a90:	2f 81       	ldd	r18, Y+7	; 0x07
     a92:	38 85       	ldd	r19, Y+8	; 0x08
     a94:	37 fd       	sbrc	r19, 7
     a96:	20 c0       	rjmp	.+64     	; 0xad8 <__fixsfsi+0x80>
     a98:	6e 81       	ldd	r22, Y+6	; 0x06
     a9a:	2f 31       	cpi	r18, 0x1F	; 31
     a9c:	31 05       	cpc	r19, r1
     a9e:	1c f0       	brlt	.+6      	; 0xaa6 <__fixsfsi+0x4e>
     aa0:	66 23       	and	r22, r22
     aa2:	f9 f0       	breq	.+62     	; 0xae2 <__fixsfsi+0x8a>
     aa4:	23 c0       	rjmp	.+70     	; 0xaec <__fixsfsi+0x94>
     aa6:	8e e1       	ldi	r24, 0x1E	; 30
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	82 1b       	sub	r24, r18
     aac:	93 0b       	sbc	r25, r19
     aae:	29 85       	ldd	r18, Y+9	; 0x09
     ab0:	3a 85       	ldd	r19, Y+10	; 0x0a
     ab2:	4b 85       	ldd	r20, Y+11	; 0x0b
     ab4:	5c 85       	ldd	r21, Y+12	; 0x0c
     ab6:	04 c0       	rjmp	.+8      	; 0xac0 <__fixsfsi+0x68>
     ab8:	56 95       	lsr	r21
     aba:	47 95       	ror	r20
     abc:	37 95       	ror	r19
     abe:	27 95       	ror	r18
     ac0:	8a 95       	dec	r24
     ac2:	d2 f7       	brpl	.-12     	; 0xab8 <__fixsfsi+0x60>
     ac4:	66 23       	and	r22, r22
     ac6:	b1 f0       	breq	.+44     	; 0xaf4 <__fixsfsi+0x9c>
     ac8:	50 95       	com	r21
     aca:	40 95       	com	r20
     acc:	30 95       	com	r19
     ace:	21 95       	neg	r18
     ad0:	3f 4f       	sbci	r19, 0xFF	; 255
     ad2:	4f 4f       	sbci	r20, 0xFF	; 255
     ad4:	5f 4f       	sbci	r21, 0xFF	; 255
     ad6:	0e c0       	rjmp	.+28     	; 0xaf4 <__fixsfsi+0x9c>
     ad8:	20 e0       	ldi	r18, 0x00	; 0
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	40 e0       	ldi	r20, 0x00	; 0
     ade:	50 e0       	ldi	r21, 0x00	; 0
     ae0:	09 c0       	rjmp	.+18     	; 0xaf4 <__fixsfsi+0x9c>
     ae2:	2f ef       	ldi	r18, 0xFF	; 255
     ae4:	3f ef       	ldi	r19, 0xFF	; 255
     ae6:	4f ef       	ldi	r20, 0xFF	; 255
     ae8:	5f e7       	ldi	r21, 0x7F	; 127
     aea:	04 c0       	rjmp	.+8      	; 0xaf4 <__fixsfsi+0x9c>
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	40 e0       	ldi	r20, 0x00	; 0
     af2:	50 e8       	ldi	r21, 0x80	; 128
     af4:	b9 01       	movw	r22, r18
     af6:	ca 01       	movw	r24, r20
     af8:	2c 96       	adiw	r28, 0x0c	; 12
     afa:	e2 e0       	ldi	r30, 0x02	; 2
     afc:	0c 94 99 13 	jmp	0x2732	; 0x2732 <__epilogue_restores__+0x20>

00000b00 <__clzsi2>:
     b00:	ef 92       	push	r14
     b02:	ff 92       	push	r15
     b04:	0f 93       	push	r16
     b06:	1f 93       	push	r17
     b08:	7b 01       	movw	r14, r22
     b0a:	8c 01       	movw	r16, r24
     b0c:	80 e0       	ldi	r24, 0x00	; 0
     b0e:	e8 16       	cp	r14, r24
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	f8 06       	cpc	r15, r24
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	08 07       	cpc	r16, r24
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	18 07       	cpc	r17, r24
     b1c:	88 f4       	brcc	.+34     	; 0xb40 <__clzsi2+0x40>
     b1e:	8f ef       	ldi	r24, 0xFF	; 255
     b20:	e8 16       	cp	r14, r24
     b22:	f1 04       	cpc	r15, r1
     b24:	01 05       	cpc	r16, r1
     b26:	11 05       	cpc	r17, r1
     b28:	31 f0       	breq	.+12     	; 0xb36 <__clzsi2+0x36>
     b2a:	28 f0       	brcs	.+10     	; 0xb36 <__clzsi2+0x36>
     b2c:	88 e0       	ldi	r24, 0x08	; 8
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	a0 e0       	ldi	r26, 0x00	; 0
     b32:	b0 e0       	ldi	r27, 0x00	; 0
     b34:	17 c0       	rjmp	.+46     	; 0xb64 <__clzsi2+0x64>
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	a0 e0       	ldi	r26, 0x00	; 0
     b3c:	b0 e0       	ldi	r27, 0x00	; 0
     b3e:	12 c0       	rjmp	.+36     	; 0xb64 <__clzsi2+0x64>
     b40:	80 e0       	ldi	r24, 0x00	; 0
     b42:	e8 16       	cp	r14, r24
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	f8 06       	cpc	r15, r24
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	08 07       	cpc	r16, r24
     b4c:	81 e0       	ldi	r24, 0x01	; 1
     b4e:	18 07       	cpc	r17, r24
     b50:	28 f0       	brcs	.+10     	; 0xb5c <__clzsi2+0x5c>
     b52:	88 e1       	ldi	r24, 0x18	; 24
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	a0 e0       	ldi	r26, 0x00	; 0
     b58:	b0 e0       	ldi	r27, 0x00	; 0
     b5a:	04 c0       	rjmp	.+8      	; 0xb64 <__clzsi2+0x64>
     b5c:	80 e1       	ldi	r24, 0x10	; 16
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	a0 e0       	ldi	r26, 0x00	; 0
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	20 e2       	ldi	r18, 0x20	; 32
     b66:	30 e0       	ldi	r19, 0x00	; 0
     b68:	40 e0       	ldi	r20, 0x00	; 0
     b6a:	50 e0       	ldi	r21, 0x00	; 0
     b6c:	28 1b       	sub	r18, r24
     b6e:	39 0b       	sbc	r19, r25
     b70:	4a 0b       	sbc	r20, r26
     b72:	5b 0b       	sbc	r21, r27
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__clzsi2+0x7e>
     b76:	16 95       	lsr	r17
     b78:	07 95       	ror	r16
     b7a:	f7 94       	ror	r15
     b7c:	e7 94       	ror	r14
     b7e:	8a 95       	dec	r24
     b80:	d2 f7       	brpl	.-12     	; 0xb76 <__clzsi2+0x76>
     b82:	f7 01       	movw	r30, r14
     b84:	e3 56       	subi	r30, 0x63	; 99
     b86:	ff 4f       	sbci	r31, 0xFF	; 255
     b88:	80 81       	ld	r24, Z
     b8a:	28 1b       	sub	r18, r24
     b8c:	31 09       	sbc	r19, r1
     b8e:	41 09       	sbc	r20, r1
     b90:	51 09       	sbc	r21, r1
     b92:	c9 01       	movw	r24, r18
     b94:	1f 91       	pop	r17
     b96:	0f 91       	pop	r16
     b98:	ff 90       	pop	r15
     b9a:	ef 90       	pop	r14
     b9c:	08 95       	ret

00000b9e <__pack_f>:
     b9e:	df 92       	push	r13
     ba0:	ef 92       	push	r14
     ba2:	ff 92       	push	r15
     ba4:	0f 93       	push	r16
     ba6:	1f 93       	push	r17
     ba8:	fc 01       	movw	r30, r24
     baa:	e4 80       	ldd	r14, Z+4	; 0x04
     bac:	f5 80       	ldd	r15, Z+5	; 0x05
     bae:	06 81       	ldd	r16, Z+6	; 0x06
     bb0:	17 81       	ldd	r17, Z+7	; 0x07
     bb2:	d1 80       	ldd	r13, Z+1	; 0x01
     bb4:	80 81       	ld	r24, Z
     bb6:	82 30       	cpi	r24, 0x02	; 2
     bb8:	48 f4       	brcc	.+18     	; 0xbcc <__pack_f+0x2e>
     bba:	80 e0       	ldi	r24, 0x00	; 0
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	a0 e1       	ldi	r26, 0x10	; 16
     bc0:	b0 e0       	ldi	r27, 0x00	; 0
     bc2:	e8 2a       	or	r14, r24
     bc4:	f9 2a       	or	r15, r25
     bc6:	0a 2b       	or	r16, r26
     bc8:	1b 2b       	or	r17, r27
     bca:	a5 c0       	rjmp	.+330    	; 0xd16 <__pack_f+0x178>
     bcc:	84 30       	cpi	r24, 0x04	; 4
     bce:	09 f4       	brne	.+2      	; 0xbd2 <__pack_f+0x34>
     bd0:	9f c0       	rjmp	.+318    	; 0xd10 <__pack_f+0x172>
     bd2:	82 30       	cpi	r24, 0x02	; 2
     bd4:	21 f4       	brne	.+8      	; 0xbde <__pack_f+0x40>
     bd6:	ee 24       	eor	r14, r14
     bd8:	ff 24       	eor	r15, r15
     bda:	87 01       	movw	r16, r14
     bdc:	05 c0       	rjmp	.+10     	; 0xbe8 <__pack_f+0x4a>
     bde:	e1 14       	cp	r14, r1
     be0:	f1 04       	cpc	r15, r1
     be2:	01 05       	cpc	r16, r1
     be4:	11 05       	cpc	r17, r1
     be6:	19 f4       	brne	.+6      	; 0xbee <__pack_f+0x50>
     be8:	e0 e0       	ldi	r30, 0x00	; 0
     bea:	f0 e0       	ldi	r31, 0x00	; 0
     bec:	96 c0       	rjmp	.+300    	; 0xd1a <__pack_f+0x17c>
     bee:	62 81       	ldd	r22, Z+2	; 0x02
     bf0:	73 81       	ldd	r23, Z+3	; 0x03
     bf2:	9f ef       	ldi	r25, 0xFF	; 255
     bf4:	62 38       	cpi	r22, 0x82	; 130
     bf6:	79 07       	cpc	r23, r25
     bf8:	0c f0       	brlt	.+2      	; 0xbfc <__pack_f+0x5e>
     bfa:	5b c0       	rjmp	.+182    	; 0xcb2 <__pack_f+0x114>
     bfc:	22 e8       	ldi	r18, 0x82	; 130
     bfe:	3f ef       	ldi	r19, 0xFF	; 255
     c00:	26 1b       	sub	r18, r22
     c02:	37 0b       	sbc	r19, r23
     c04:	2a 31       	cpi	r18, 0x1A	; 26
     c06:	31 05       	cpc	r19, r1
     c08:	2c f0       	brlt	.+10     	; 0xc14 <__pack_f+0x76>
     c0a:	20 e0       	ldi	r18, 0x00	; 0
     c0c:	30 e0       	ldi	r19, 0x00	; 0
     c0e:	40 e0       	ldi	r20, 0x00	; 0
     c10:	50 e0       	ldi	r21, 0x00	; 0
     c12:	2a c0       	rjmp	.+84     	; 0xc68 <__pack_f+0xca>
     c14:	b8 01       	movw	r22, r16
     c16:	a7 01       	movw	r20, r14
     c18:	02 2e       	mov	r0, r18
     c1a:	04 c0       	rjmp	.+8      	; 0xc24 <__pack_f+0x86>
     c1c:	76 95       	lsr	r23
     c1e:	67 95       	ror	r22
     c20:	57 95       	ror	r21
     c22:	47 95       	ror	r20
     c24:	0a 94       	dec	r0
     c26:	d2 f7       	brpl	.-12     	; 0xc1c <__pack_f+0x7e>
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	a0 e0       	ldi	r26, 0x00	; 0
     c2e:	b0 e0       	ldi	r27, 0x00	; 0
     c30:	04 c0       	rjmp	.+8      	; 0xc3a <__pack_f+0x9c>
     c32:	88 0f       	add	r24, r24
     c34:	99 1f       	adc	r25, r25
     c36:	aa 1f       	adc	r26, r26
     c38:	bb 1f       	adc	r27, r27
     c3a:	2a 95       	dec	r18
     c3c:	d2 f7       	brpl	.-12     	; 0xc32 <__pack_f+0x94>
     c3e:	01 97       	sbiw	r24, 0x01	; 1
     c40:	a1 09       	sbc	r26, r1
     c42:	b1 09       	sbc	r27, r1
     c44:	8e 21       	and	r24, r14
     c46:	9f 21       	and	r25, r15
     c48:	a0 23       	and	r26, r16
     c4a:	b1 23       	and	r27, r17
     c4c:	00 97       	sbiw	r24, 0x00	; 0
     c4e:	a1 05       	cpc	r26, r1
     c50:	b1 05       	cpc	r27, r1
     c52:	21 f0       	breq	.+8      	; 0xc5c <__pack_f+0xbe>
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	a0 e0       	ldi	r26, 0x00	; 0
     c5a:	b0 e0       	ldi	r27, 0x00	; 0
     c5c:	9a 01       	movw	r18, r20
     c5e:	ab 01       	movw	r20, r22
     c60:	28 2b       	or	r18, r24
     c62:	39 2b       	or	r19, r25
     c64:	4a 2b       	or	r20, r26
     c66:	5b 2b       	or	r21, r27
     c68:	da 01       	movw	r26, r20
     c6a:	c9 01       	movw	r24, r18
     c6c:	8f 77       	andi	r24, 0x7F	; 127
     c6e:	90 70       	andi	r25, 0x00	; 0
     c70:	a0 70       	andi	r26, 0x00	; 0
     c72:	b0 70       	andi	r27, 0x00	; 0
     c74:	80 34       	cpi	r24, 0x40	; 64
     c76:	91 05       	cpc	r25, r1
     c78:	a1 05       	cpc	r26, r1
     c7a:	b1 05       	cpc	r27, r1
     c7c:	39 f4       	brne	.+14     	; 0xc8c <__pack_f+0xee>
     c7e:	27 ff       	sbrs	r18, 7
     c80:	09 c0       	rjmp	.+18     	; 0xc94 <__pack_f+0xf6>
     c82:	20 5c       	subi	r18, 0xC0	; 192
     c84:	3f 4f       	sbci	r19, 0xFF	; 255
     c86:	4f 4f       	sbci	r20, 0xFF	; 255
     c88:	5f 4f       	sbci	r21, 0xFF	; 255
     c8a:	04 c0       	rjmp	.+8      	; 0xc94 <__pack_f+0xf6>
     c8c:	21 5c       	subi	r18, 0xC1	; 193
     c8e:	3f 4f       	sbci	r19, 0xFF	; 255
     c90:	4f 4f       	sbci	r20, 0xFF	; 255
     c92:	5f 4f       	sbci	r21, 0xFF	; 255
     c94:	e0 e0       	ldi	r30, 0x00	; 0
     c96:	f0 e0       	ldi	r31, 0x00	; 0
     c98:	20 30       	cpi	r18, 0x00	; 0
     c9a:	a0 e0       	ldi	r26, 0x00	; 0
     c9c:	3a 07       	cpc	r19, r26
     c9e:	a0 e0       	ldi	r26, 0x00	; 0
     ca0:	4a 07       	cpc	r20, r26
     ca2:	a0 e4       	ldi	r26, 0x40	; 64
     ca4:	5a 07       	cpc	r21, r26
     ca6:	10 f0       	brcs	.+4      	; 0xcac <__pack_f+0x10e>
     ca8:	e1 e0       	ldi	r30, 0x01	; 1
     caa:	f0 e0       	ldi	r31, 0x00	; 0
     cac:	79 01       	movw	r14, r18
     cae:	8a 01       	movw	r16, r20
     cb0:	27 c0       	rjmp	.+78     	; 0xd00 <__pack_f+0x162>
     cb2:	60 38       	cpi	r22, 0x80	; 128
     cb4:	71 05       	cpc	r23, r1
     cb6:	64 f5       	brge	.+88     	; 0xd10 <__pack_f+0x172>
     cb8:	fb 01       	movw	r30, r22
     cba:	e1 58       	subi	r30, 0x81	; 129
     cbc:	ff 4f       	sbci	r31, 0xFF	; 255
     cbe:	d8 01       	movw	r26, r16
     cc0:	c7 01       	movw	r24, r14
     cc2:	8f 77       	andi	r24, 0x7F	; 127
     cc4:	90 70       	andi	r25, 0x00	; 0
     cc6:	a0 70       	andi	r26, 0x00	; 0
     cc8:	b0 70       	andi	r27, 0x00	; 0
     cca:	80 34       	cpi	r24, 0x40	; 64
     ccc:	91 05       	cpc	r25, r1
     cce:	a1 05       	cpc	r26, r1
     cd0:	b1 05       	cpc	r27, r1
     cd2:	39 f4       	brne	.+14     	; 0xce2 <__pack_f+0x144>
     cd4:	e7 fe       	sbrs	r14, 7
     cd6:	0d c0       	rjmp	.+26     	; 0xcf2 <__pack_f+0x154>
     cd8:	80 e4       	ldi	r24, 0x40	; 64
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	a0 e0       	ldi	r26, 0x00	; 0
     cde:	b0 e0       	ldi	r27, 0x00	; 0
     ce0:	04 c0       	rjmp	.+8      	; 0xcea <__pack_f+0x14c>
     ce2:	8f e3       	ldi	r24, 0x3F	; 63
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	a0 e0       	ldi	r26, 0x00	; 0
     ce8:	b0 e0       	ldi	r27, 0x00	; 0
     cea:	e8 0e       	add	r14, r24
     cec:	f9 1e       	adc	r15, r25
     cee:	0a 1f       	adc	r16, r26
     cf0:	1b 1f       	adc	r17, r27
     cf2:	17 ff       	sbrs	r17, 7
     cf4:	05 c0       	rjmp	.+10     	; 0xd00 <__pack_f+0x162>
     cf6:	16 95       	lsr	r17
     cf8:	07 95       	ror	r16
     cfa:	f7 94       	ror	r15
     cfc:	e7 94       	ror	r14
     cfe:	31 96       	adiw	r30, 0x01	; 1
     d00:	87 e0       	ldi	r24, 0x07	; 7
     d02:	16 95       	lsr	r17
     d04:	07 95       	ror	r16
     d06:	f7 94       	ror	r15
     d08:	e7 94       	ror	r14
     d0a:	8a 95       	dec	r24
     d0c:	d1 f7       	brne	.-12     	; 0xd02 <__pack_f+0x164>
     d0e:	05 c0       	rjmp	.+10     	; 0xd1a <__pack_f+0x17c>
     d10:	ee 24       	eor	r14, r14
     d12:	ff 24       	eor	r15, r15
     d14:	87 01       	movw	r16, r14
     d16:	ef ef       	ldi	r30, 0xFF	; 255
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	6e 2f       	mov	r22, r30
     d1c:	67 95       	ror	r22
     d1e:	66 27       	eor	r22, r22
     d20:	67 95       	ror	r22
     d22:	90 2f       	mov	r25, r16
     d24:	9f 77       	andi	r25, 0x7F	; 127
     d26:	d7 94       	ror	r13
     d28:	dd 24       	eor	r13, r13
     d2a:	d7 94       	ror	r13
     d2c:	8e 2f       	mov	r24, r30
     d2e:	86 95       	lsr	r24
     d30:	49 2f       	mov	r20, r25
     d32:	46 2b       	or	r20, r22
     d34:	58 2f       	mov	r21, r24
     d36:	5d 29       	or	r21, r13
     d38:	b7 01       	movw	r22, r14
     d3a:	ca 01       	movw	r24, r20
     d3c:	1f 91       	pop	r17
     d3e:	0f 91       	pop	r16
     d40:	ff 90       	pop	r15
     d42:	ef 90       	pop	r14
     d44:	df 90       	pop	r13
     d46:	08 95       	ret

00000d48 <__unpack_f>:
     d48:	fc 01       	movw	r30, r24
     d4a:	db 01       	movw	r26, r22
     d4c:	40 81       	ld	r20, Z
     d4e:	51 81       	ldd	r21, Z+1	; 0x01
     d50:	22 81       	ldd	r18, Z+2	; 0x02
     d52:	62 2f       	mov	r22, r18
     d54:	6f 77       	andi	r22, 0x7F	; 127
     d56:	70 e0       	ldi	r23, 0x00	; 0
     d58:	22 1f       	adc	r18, r18
     d5a:	22 27       	eor	r18, r18
     d5c:	22 1f       	adc	r18, r18
     d5e:	93 81       	ldd	r25, Z+3	; 0x03
     d60:	89 2f       	mov	r24, r25
     d62:	88 0f       	add	r24, r24
     d64:	82 2b       	or	r24, r18
     d66:	28 2f       	mov	r18, r24
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	99 1f       	adc	r25, r25
     d6c:	99 27       	eor	r25, r25
     d6e:	99 1f       	adc	r25, r25
     d70:	11 96       	adiw	r26, 0x01	; 1
     d72:	9c 93       	st	X, r25
     d74:	11 97       	sbiw	r26, 0x01	; 1
     d76:	21 15       	cp	r18, r1
     d78:	31 05       	cpc	r19, r1
     d7a:	a9 f5       	brne	.+106    	; 0xde6 <__unpack_f+0x9e>
     d7c:	41 15       	cp	r20, r1
     d7e:	51 05       	cpc	r21, r1
     d80:	61 05       	cpc	r22, r1
     d82:	71 05       	cpc	r23, r1
     d84:	11 f4       	brne	.+4      	; 0xd8a <__unpack_f+0x42>
     d86:	82 e0       	ldi	r24, 0x02	; 2
     d88:	37 c0       	rjmp	.+110    	; 0xdf8 <__unpack_f+0xb0>
     d8a:	82 e8       	ldi	r24, 0x82	; 130
     d8c:	9f ef       	ldi	r25, 0xFF	; 255
     d8e:	13 96       	adiw	r26, 0x03	; 3
     d90:	9c 93       	st	X, r25
     d92:	8e 93       	st	-X, r24
     d94:	12 97       	sbiw	r26, 0x02	; 2
     d96:	9a 01       	movw	r18, r20
     d98:	ab 01       	movw	r20, r22
     d9a:	67 e0       	ldi	r22, 0x07	; 7
     d9c:	22 0f       	add	r18, r18
     d9e:	33 1f       	adc	r19, r19
     da0:	44 1f       	adc	r20, r20
     da2:	55 1f       	adc	r21, r21
     da4:	6a 95       	dec	r22
     da6:	d1 f7       	brne	.-12     	; 0xd9c <__unpack_f+0x54>
     da8:	83 e0       	ldi	r24, 0x03	; 3
     daa:	8c 93       	st	X, r24
     dac:	0d c0       	rjmp	.+26     	; 0xdc8 <__unpack_f+0x80>
     dae:	22 0f       	add	r18, r18
     db0:	33 1f       	adc	r19, r19
     db2:	44 1f       	adc	r20, r20
     db4:	55 1f       	adc	r21, r21
     db6:	12 96       	adiw	r26, 0x02	; 2
     db8:	8d 91       	ld	r24, X+
     dba:	9c 91       	ld	r25, X
     dbc:	13 97       	sbiw	r26, 0x03	; 3
     dbe:	01 97       	sbiw	r24, 0x01	; 1
     dc0:	13 96       	adiw	r26, 0x03	; 3
     dc2:	9c 93       	st	X, r25
     dc4:	8e 93       	st	-X, r24
     dc6:	12 97       	sbiw	r26, 0x02	; 2
     dc8:	20 30       	cpi	r18, 0x00	; 0
     dca:	80 e0       	ldi	r24, 0x00	; 0
     dcc:	38 07       	cpc	r19, r24
     dce:	80 e0       	ldi	r24, 0x00	; 0
     dd0:	48 07       	cpc	r20, r24
     dd2:	80 e4       	ldi	r24, 0x40	; 64
     dd4:	58 07       	cpc	r21, r24
     dd6:	58 f3       	brcs	.-42     	; 0xdae <__unpack_f+0x66>
     dd8:	14 96       	adiw	r26, 0x04	; 4
     dda:	2d 93       	st	X+, r18
     ddc:	3d 93       	st	X+, r19
     dde:	4d 93       	st	X+, r20
     de0:	5c 93       	st	X, r21
     de2:	17 97       	sbiw	r26, 0x07	; 7
     de4:	08 95       	ret
     de6:	2f 3f       	cpi	r18, 0xFF	; 255
     de8:	31 05       	cpc	r19, r1
     dea:	79 f4       	brne	.+30     	; 0xe0a <__unpack_f+0xc2>
     dec:	41 15       	cp	r20, r1
     dee:	51 05       	cpc	r21, r1
     df0:	61 05       	cpc	r22, r1
     df2:	71 05       	cpc	r23, r1
     df4:	19 f4       	brne	.+6      	; 0xdfc <__unpack_f+0xb4>
     df6:	84 e0       	ldi	r24, 0x04	; 4
     df8:	8c 93       	st	X, r24
     dfa:	08 95       	ret
     dfc:	64 ff       	sbrs	r22, 4
     dfe:	03 c0       	rjmp	.+6      	; 0xe06 <__unpack_f+0xbe>
     e00:	81 e0       	ldi	r24, 0x01	; 1
     e02:	8c 93       	st	X, r24
     e04:	12 c0       	rjmp	.+36     	; 0xe2a <__unpack_f+0xe2>
     e06:	1c 92       	st	X, r1
     e08:	10 c0       	rjmp	.+32     	; 0xe2a <__unpack_f+0xe2>
     e0a:	2f 57       	subi	r18, 0x7F	; 127
     e0c:	30 40       	sbci	r19, 0x00	; 0
     e0e:	13 96       	adiw	r26, 0x03	; 3
     e10:	3c 93       	st	X, r19
     e12:	2e 93       	st	-X, r18
     e14:	12 97       	sbiw	r26, 0x02	; 2
     e16:	83 e0       	ldi	r24, 0x03	; 3
     e18:	8c 93       	st	X, r24
     e1a:	87 e0       	ldi	r24, 0x07	; 7
     e1c:	44 0f       	add	r20, r20
     e1e:	55 1f       	adc	r21, r21
     e20:	66 1f       	adc	r22, r22
     e22:	77 1f       	adc	r23, r23
     e24:	8a 95       	dec	r24
     e26:	d1 f7       	brne	.-12     	; 0xe1c <__unpack_f+0xd4>
     e28:	70 64       	ori	r23, 0x40	; 64
     e2a:	14 96       	adiw	r26, 0x04	; 4
     e2c:	4d 93       	st	X+, r20
     e2e:	5d 93       	st	X+, r21
     e30:	6d 93       	st	X+, r22
     e32:	7c 93       	st	X, r23
     e34:	17 97       	sbiw	r26, 0x07	; 7
     e36:	08 95       	ret

00000e38 <__fpcmp_parts_f>:
     e38:	1f 93       	push	r17
     e3a:	dc 01       	movw	r26, r24
     e3c:	fb 01       	movw	r30, r22
     e3e:	9c 91       	ld	r25, X
     e40:	92 30       	cpi	r25, 0x02	; 2
     e42:	08 f4       	brcc	.+2      	; 0xe46 <__fpcmp_parts_f+0xe>
     e44:	47 c0       	rjmp	.+142    	; 0xed4 <__fpcmp_parts_f+0x9c>
     e46:	80 81       	ld	r24, Z
     e48:	82 30       	cpi	r24, 0x02	; 2
     e4a:	08 f4       	brcc	.+2      	; 0xe4e <__fpcmp_parts_f+0x16>
     e4c:	43 c0       	rjmp	.+134    	; 0xed4 <__fpcmp_parts_f+0x9c>
     e4e:	94 30       	cpi	r25, 0x04	; 4
     e50:	51 f4       	brne	.+20     	; 0xe66 <__fpcmp_parts_f+0x2e>
     e52:	11 96       	adiw	r26, 0x01	; 1
     e54:	1c 91       	ld	r17, X
     e56:	84 30       	cpi	r24, 0x04	; 4
     e58:	99 f5       	brne	.+102    	; 0xec0 <__fpcmp_parts_f+0x88>
     e5a:	81 81       	ldd	r24, Z+1	; 0x01
     e5c:	68 2f       	mov	r22, r24
     e5e:	70 e0       	ldi	r23, 0x00	; 0
     e60:	61 1b       	sub	r22, r17
     e62:	71 09       	sbc	r23, r1
     e64:	3f c0       	rjmp	.+126    	; 0xee4 <__fpcmp_parts_f+0xac>
     e66:	84 30       	cpi	r24, 0x04	; 4
     e68:	21 f0       	breq	.+8      	; 0xe72 <__fpcmp_parts_f+0x3a>
     e6a:	92 30       	cpi	r25, 0x02	; 2
     e6c:	31 f4       	brne	.+12     	; 0xe7a <__fpcmp_parts_f+0x42>
     e6e:	82 30       	cpi	r24, 0x02	; 2
     e70:	b9 f1       	breq	.+110    	; 0xee0 <__fpcmp_parts_f+0xa8>
     e72:	81 81       	ldd	r24, Z+1	; 0x01
     e74:	88 23       	and	r24, r24
     e76:	89 f1       	breq	.+98     	; 0xeda <__fpcmp_parts_f+0xa2>
     e78:	2d c0       	rjmp	.+90     	; 0xed4 <__fpcmp_parts_f+0x9c>
     e7a:	11 96       	adiw	r26, 0x01	; 1
     e7c:	1c 91       	ld	r17, X
     e7e:	11 97       	sbiw	r26, 0x01	; 1
     e80:	82 30       	cpi	r24, 0x02	; 2
     e82:	f1 f0       	breq	.+60     	; 0xec0 <__fpcmp_parts_f+0x88>
     e84:	81 81       	ldd	r24, Z+1	; 0x01
     e86:	18 17       	cp	r17, r24
     e88:	d9 f4       	brne	.+54     	; 0xec0 <__fpcmp_parts_f+0x88>
     e8a:	12 96       	adiw	r26, 0x02	; 2
     e8c:	2d 91       	ld	r18, X+
     e8e:	3c 91       	ld	r19, X
     e90:	13 97       	sbiw	r26, 0x03	; 3
     e92:	82 81       	ldd	r24, Z+2	; 0x02
     e94:	93 81       	ldd	r25, Z+3	; 0x03
     e96:	82 17       	cp	r24, r18
     e98:	93 07       	cpc	r25, r19
     e9a:	94 f0       	brlt	.+36     	; 0xec0 <__fpcmp_parts_f+0x88>
     e9c:	28 17       	cp	r18, r24
     e9e:	39 07       	cpc	r19, r25
     ea0:	bc f0       	brlt	.+46     	; 0xed0 <__fpcmp_parts_f+0x98>
     ea2:	14 96       	adiw	r26, 0x04	; 4
     ea4:	8d 91       	ld	r24, X+
     ea6:	9d 91       	ld	r25, X+
     ea8:	0d 90       	ld	r0, X+
     eaa:	bc 91       	ld	r27, X
     eac:	a0 2d       	mov	r26, r0
     eae:	24 81       	ldd	r18, Z+4	; 0x04
     eb0:	35 81       	ldd	r19, Z+5	; 0x05
     eb2:	46 81       	ldd	r20, Z+6	; 0x06
     eb4:	57 81       	ldd	r21, Z+7	; 0x07
     eb6:	28 17       	cp	r18, r24
     eb8:	39 07       	cpc	r19, r25
     eba:	4a 07       	cpc	r20, r26
     ebc:	5b 07       	cpc	r21, r27
     ebe:	18 f4       	brcc	.+6      	; 0xec6 <__fpcmp_parts_f+0x8e>
     ec0:	11 23       	and	r17, r17
     ec2:	41 f0       	breq	.+16     	; 0xed4 <__fpcmp_parts_f+0x9c>
     ec4:	0a c0       	rjmp	.+20     	; 0xeda <__fpcmp_parts_f+0xa2>
     ec6:	82 17       	cp	r24, r18
     ec8:	93 07       	cpc	r25, r19
     eca:	a4 07       	cpc	r26, r20
     ecc:	b5 07       	cpc	r27, r21
     ece:	40 f4       	brcc	.+16     	; 0xee0 <__fpcmp_parts_f+0xa8>
     ed0:	11 23       	and	r17, r17
     ed2:	19 f0       	breq	.+6      	; 0xeda <__fpcmp_parts_f+0xa2>
     ed4:	61 e0       	ldi	r22, 0x01	; 1
     ed6:	70 e0       	ldi	r23, 0x00	; 0
     ed8:	05 c0       	rjmp	.+10     	; 0xee4 <__fpcmp_parts_f+0xac>
     eda:	6f ef       	ldi	r22, 0xFF	; 255
     edc:	7f ef       	ldi	r23, 0xFF	; 255
     ede:	02 c0       	rjmp	.+4      	; 0xee4 <__fpcmp_parts_f+0xac>
     ee0:	60 e0       	ldi	r22, 0x00	; 0
     ee2:	70 e0       	ldi	r23, 0x00	; 0
     ee4:	cb 01       	movw	r24, r22
     ee6:	1f 91       	pop	r17
     ee8:	08 95       	ret

00000eea <main>:
/*****************************************************************************************
 *                                MAIN FUNCTION                                          *
 *****************************************************************************************/

int main(void)
{
     eea:	ef 92       	push	r14
     eec:	ff 92       	push	r15
     eee:	0f 93       	push	r16
     ef0:	1f 93       	push	r17
     ef2:	df 93       	push	r29
     ef4:	cf 93       	push	r28
     ef6:	cd b7       	in	r28, 0x3d	; 61
     ef8:	de b7       	in	r29, 0x3e	; 62
     efa:	ad 97       	sbiw	r28, 0x2d	; 45
     efc:	0f b6       	in	r0, 0x3f	; 63
     efe:	f8 94       	cli
     f00:	de bf       	out	0x3e, r29	; 62
     f02:	0f be       	out	0x3f, r0	; 63
     f04:	cd bf       	out	0x3d, r28	; 61
	/********************************************************************************
	 *                           SYSTEM INITIALIZATION                              *
	 ********************************************************************************/

	uint8 key, operation, buf[16] = {0};	/* Buffer to store data that needed to display */
     f06:	80 e1       	ldi	r24, 0x10	; 16
     f08:	fe 01       	movw	r30, r28
     f0a:	7a 96       	adiw	r30, 0x1a	; 26
     f0c:	df 01       	movw	r26, r30
     f0e:	28 2f       	mov	r18, r24
     f10:	1d 92       	st	X+, r1
     f12:	2a 95       	dec	r18
     f14:	e9 f7       	brne	.-6      	; 0xf10 <main+0x26>
	uint8 flage_op = 0;
     f16:	1f 8a       	std	Y+23, r1	; 0x17
	float32 result;
	sint16 var1 = 0, var2 = 0;	/* Two variables to store operands */
     f18:	1a 8a       	std	Y+18, r1	; 0x12
     f1a:	19 8a       	std	Y+17, r1	; 0x11
     f1c:	18 8a       	std	Y+16, r1	; 0x10
     f1e:	1f 86       	std	Y+15, r1	; 0x0f

	LCD_init();	/*Initialize LCD */
     f20:	0e 94 22 0b 	call	0x1644	; 0x1644 <LCD_init>
	LCD_displayStringRowColumn(0,0,"M.T Diploma 51");
     f24:	20 e6       	ldi	r18, 0x60	; 96
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	80 e0       	ldi	r24, 0x00	; 0
     f2a:	60 e0       	ldi	r22, 0x00	; 0
     f2c:	a9 01       	movw	r20, r18
     f2e:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <LCD_displayStringRowColumn>
	LCD_displayStringRowColumn(1,0,"Enter operation:");
     f32:	2f e6       	ldi	r18, 0x6F	; 111
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	81 e0       	ldi	r24, 0x01	; 1
     f38:	60 e0       	ldi	r22, 0x00	; 0
     f3a:	a9 01       	movw	r20, r18
     f3c:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <LCD_displayStringRowColumn>
	LCD_goToRowColumn(2,0);
     f40:	82 e0       	ldi	r24, 0x02	; 2
     f42:	60 e0       	ldi	r22, 0x00	; 0
     f44:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <LCD_goToRowColumn>

	while(1)
	{
		/* If any switch pressed for more than 200 ms it counts more than one press */
		/* get the pressed key number */
		key = KeyPad_getPressedKey();
     f48:	0e 94 24 0a 	call	0x1448	; 0x1448 <KeyPad_getPressedKey>
     f4c:	89 8f       	std	Y+25, r24	; 0x19
     f4e:	80 e0       	ldi	r24, 0x00	; 0
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	a8 e4       	ldi	r26, 0x48	; 72
     f54:	b3 e4       	ldi	r27, 0x43	; 67
     f56:	8b 87       	std	Y+11, r24	; 0x0b
     f58:	9c 87       	std	Y+12, r25	; 0x0c
     f5a:	ad 87       	std	Y+13, r26	; 0x0d
     f5c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f5e:	6b 85       	ldd	r22, Y+11	; 0x0b
     f60:	7c 85       	ldd	r23, Y+12	; 0x0c
     f62:	8d 85       	ldd	r24, Y+13	; 0x0d
     f64:	9e 85       	ldd	r25, Y+14	; 0x0e
     f66:	20 e0       	ldi	r18, 0x00	; 0
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	4a e7       	ldi	r20, 0x7A	; 122
     f6c:	53 e4       	ldi	r21, 0x43	; 67
     f6e:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
     f72:	dc 01       	movw	r26, r24
     f74:	cb 01       	movw	r24, r22
     f76:	8f 83       	std	Y+7, r24	; 0x07
     f78:	98 87       	std	Y+8, r25	; 0x08
     f7a:	a9 87       	std	Y+9, r26	; 0x09
     f7c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     f7e:	6f 81       	ldd	r22, Y+7	; 0x07
     f80:	78 85       	ldd	r23, Y+8	; 0x08
     f82:	89 85       	ldd	r24, Y+9	; 0x09
     f84:	9a 85       	ldd	r25, Y+10	; 0x0a
     f86:	20 e0       	ldi	r18, 0x00	; 0
     f88:	30 e0       	ldi	r19, 0x00	; 0
     f8a:	40 e8       	ldi	r20, 0x80	; 128
     f8c:	5f e3       	ldi	r21, 0x3F	; 63
     f8e:	0e 94 9e 04 	call	0x93c	; 0x93c <__ltsf2>
     f92:	88 23       	and	r24, r24
     f94:	2c f4       	brge	.+10     	; 0xfa0 <main+0xb6>
		__ticks = 1;
     f96:	81 e0       	ldi	r24, 0x01	; 1
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	9e 83       	std	Y+6, r25	; 0x06
     f9c:	8d 83       	std	Y+5, r24	; 0x05
     f9e:	3f c0       	rjmp	.+126    	; 0x101e <main+0x134>
	else if (__tmp > 65535)
     fa0:	6f 81       	ldd	r22, Y+7	; 0x07
     fa2:	78 85       	ldd	r23, Y+8	; 0x08
     fa4:	89 85       	ldd	r24, Y+9	; 0x09
     fa6:	9a 85       	ldd	r25, Y+10	; 0x0a
     fa8:	20 e0       	ldi	r18, 0x00	; 0
     faa:	3f ef       	ldi	r19, 0xFF	; 255
     fac:	4f e7       	ldi	r20, 0x7F	; 127
     fae:	57 e4       	ldi	r21, 0x47	; 71
     fb0:	0e 94 3e 04 	call	0x87c	; 0x87c <__gtsf2>
     fb4:	18 16       	cp	r1, r24
     fb6:	4c f5       	brge	.+82     	; 0x100a <main+0x120>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fb8:	6b 85       	ldd	r22, Y+11	; 0x0b
     fba:	7c 85       	ldd	r23, Y+12	; 0x0c
     fbc:	8d 85       	ldd	r24, Y+13	; 0x0d
     fbe:	9e 85       	ldd	r25, Y+14	; 0x0e
     fc0:	20 e0       	ldi	r18, 0x00	; 0
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	40 e2       	ldi	r20, 0x20	; 32
     fc6:	51 e4       	ldi	r21, 0x41	; 65
     fc8:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
     fcc:	dc 01       	movw	r26, r24
     fce:	cb 01       	movw	r24, r22
     fd0:	bc 01       	movw	r22, r24
     fd2:	cd 01       	movw	r24, r26
     fd4:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
     fd8:	dc 01       	movw	r26, r24
     fda:	cb 01       	movw	r24, r22
     fdc:	9e 83       	std	Y+6, r25	; 0x06
     fde:	8d 83       	std	Y+5, r24	; 0x05
     fe0:	0f c0       	rjmp	.+30     	; 0x1000 <main+0x116>
     fe2:	89 e1       	ldi	r24, 0x19	; 25
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	9c 83       	std	Y+4, r25	; 0x04
     fe8:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     fea:	8b 81       	ldd	r24, Y+3	; 0x03
     fec:	9c 81       	ldd	r25, Y+4	; 0x04
     fee:	01 97       	sbiw	r24, 0x01	; 1
     ff0:	f1 f7       	brne	.-4      	; 0xfee <main+0x104>
     ff2:	9c 83       	std	Y+4, r25	; 0x04
     ff4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ff6:	8d 81       	ldd	r24, Y+5	; 0x05
     ff8:	9e 81       	ldd	r25, Y+6	; 0x06
     ffa:	01 97       	sbiw	r24, 0x01	; 1
     ffc:	9e 83       	std	Y+6, r25	; 0x06
     ffe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1000:	8d 81       	ldd	r24, Y+5	; 0x05
    1002:	9e 81       	ldd	r25, Y+6	; 0x06
    1004:	00 97       	sbiw	r24, 0x00	; 0
    1006:	69 f7       	brne	.-38     	; 0xfe2 <main+0xf8>
    1008:	14 c0       	rjmp	.+40     	; 0x1032 <main+0x148>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    100a:	6f 81       	ldd	r22, Y+7	; 0x07
    100c:	78 85       	ldd	r23, Y+8	; 0x08
    100e:	89 85       	ldd	r24, Y+9	; 0x09
    1010:	9a 85       	ldd	r25, Y+10	; 0x0a
    1012:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1016:	dc 01       	movw	r26, r24
    1018:	cb 01       	movw	r24, r22
    101a:	9e 83       	std	Y+6, r25	; 0x06
    101c:	8d 83       	std	Y+5, r24	; 0x05
    101e:	8d 81       	ldd	r24, Y+5	; 0x05
    1020:	9e 81       	ldd	r25, Y+6	; 0x06
    1022:	9a 83       	std	Y+2, r25	; 0x02
    1024:	89 83       	std	Y+1, r24	; 0x01
    1026:	89 81       	ldd	r24, Y+1	; 0x01
    1028:	9a 81       	ldd	r25, Y+2	; 0x02
    102a:	01 97       	sbiw	r24, 0x01	; 1
    102c:	f1 f7       	brne	.-4      	; 0x102a <main+0x140>
    102e:	9a 83       	std	Y+2, r25	; 0x02
    1030:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(200); 			   /* Press time */

		if( !( key >= 0 && key <= 9 ) )
    1032:	89 8d       	ldd	r24, Y+25	; 0x19
    1034:	8a 30       	cpi	r24, 0x0A	; 10
    1036:	d8 f1       	brcs	.+118    	; 0x10ae <main+0x1c4>
		{
			/* Check if the key pressed is operator (+ , -, *, /, =) */
			switch(key)
    1038:	89 8d       	ldd	r24, Y+25	; 0x19
    103a:	a8 2f       	mov	r26, r24
    103c:	b0 e0       	ldi	r27, 0x00	; 0
    103e:	bd a7       	std	Y+45, r27	; 0x2d
    1040:	ac a7       	std	Y+44, r26	; 0x2c
    1042:	2c a5       	ldd	r18, Y+44	; 0x2c
    1044:	3d a5       	ldd	r19, Y+45	; 0x2d
    1046:	2d 32       	cpi	r18, 0x2D	; 45
    1048:	31 05       	cpc	r19, r1
    104a:	01 f1       	breq	.+64     	; 0x108c <main+0x1a2>
    104c:	8c a5       	ldd	r24, Y+44	; 0x2c
    104e:	9d a5       	ldd	r25, Y+45	; 0x2d
    1050:	8e 32       	cpi	r24, 0x2E	; 46
    1052:	91 05       	cpc	r25, r1
    1054:	5c f4       	brge	.+22     	; 0x106c <main+0x182>
    1056:	ac a5       	ldd	r26, Y+44	; 0x2c
    1058:	bd a5       	ldd	r27, Y+45	; 0x2d
    105a:	aa 32       	cpi	r26, 0x2A	; 42
    105c:	b1 05       	cpc	r27, r1
    105e:	d9 f0       	breq	.+54     	; 0x1096 <main+0x1ac>
    1060:	2c a5       	ldd	r18, Y+44	; 0x2c
    1062:	3d a5       	ldd	r19, Y+45	; 0x2d
    1064:	2b 32       	cpi	r18, 0x2B	; 43
    1066:	31 05       	cpc	r19, r1
    1068:	61 f0       	breq	.+24     	; 0x1082 <main+0x198>
    106a:	21 c0       	rjmp	.+66     	; 0x10ae <main+0x1c4>
    106c:	8c a5       	ldd	r24, Y+44	; 0x2c
    106e:	9d a5       	ldd	r25, Y+45	; 0x2d
    1070:	8f 32       	cpi	r24, 0x2F	; 47
    1072:	91 05       	cpc	r25, r1
    1074:	a9 f0       	breq	.+42     	; 0x10a0 <main+0x1b6>
    1076:	ac a5       	ldd	r26, Y+44	; 0x2c
    1078:	bd a5       	ldd	r27, Y+45	; 0x2d
    107a:	ad 33       	cpi	r26, 0x3D	; 61
    107c:	b1 05       	cpc	r27, r1
    107e:	a9 f0       	breq	.+42     	; 0x10aa <main+0x1c0>
    1080:	16 c0       	rjmp	.+44     	; 0x10ae <main+0x1c4>
			{
			case '+': flage_op = ADD;
    1082:	81 e0       	ldi	r24, 0x01	; 1
    1084:	8f 8b       	std	Y+23, r24	; 0x17
					  operation = '+';
    1086:	8b e2       	ldi	r24, 0x2B	; 43
    1088:	88 8f       	std	Y+24, r24	; 0x18
    108a:	11 c0       	rjmp	.+34     	; 0x10ae <main+0x1c4>
					  break;

			case '-': flage_op = SUB;
    108c:	82 e0       	ldi	r24, 0x02	; 2
    108e:	8f 8b       	std	Y+23, r24	; 0x17
					  operation = '-';
    1090:	8d e2       	ldi	r24, 0x2D	; 45
    1092:	88 8f       	std	Y+24, r24	; 0x18
    1094:	0c c0       	rjmp	.+24     	; 0x10ae <main+0x1c4>
					  break;

			case '*': flage_op = MUL;
    1096:	83 e0       	ldi	r24, 0x03	; 3
    1098:	8f 8b       	std	Y+23, r24	; 0x17
				      operation = '*';
    109a:	8a e2       	ldi	r24, 0x2A	; 42
    109c:	88 8f       	std	Y+24, r24	; 0x18
    109e:	07 c0       	rjmp	.+14     	; 0x10ae <main+0x1c4>
				      break;

			case '/': flage_op = DIV;
    10a0:	84 e0       	ldi	r24, 0x04	; 4
    10a2:	8f 8b       	std	Y+23, r24	; 0x17
					  operation = '/';
    10a4:	8f e2       	ldi	r24, 0x2F	; 47
    10a6:	88 8f       	std	Y+24, r24	; 0x18
    10a8:	02 c0       	rjmp	.+4      	; 0x10ae <main+0x1c4>
					  break;

			case '=': flage_op = EQL;
    10aa:	85 e0       	ldi	r24, 0x05	; 5
    10ac:	8f 8b       	std	Y+23, r24	; 0x17
					  break;
			}
		}

			if(flage_op == NO_OP)	/* Check if the key pressed is the first operand */
    10ae:	8f 89       	ldd	r24, Y+23	; 0x17
    10b0:	88 23       	and	r24, r24
    10b2:	c9 f5       	brne	.+114    	; 0x1126 <main+0x23c>
			{
				var1 = var1*10 + key;
    10b4:	89 89       	ldd	r24, Y+17	; 0x11
    10b6:	9a 89       	ldd	r25, Y+18	; 0x12
    10b8:	9c 01       	movw	r18, r24
    10ba:	22 0f       	add	r18, r18
    10bc:	33 1f       	adc	r19, r19
    10be:	c9 01       	movw	r24, r18
    10c0:	88 0f       	add	r24, r24
    10c2:	99 1f       	adc	r25, r25
    10c4:	88 0f       	add	r24, r24
    10c6:	99 1f       	adc	r25, r25
    10c8:	28 0f       	add	r18, r24
    10ca:	39 1f       	adc	r19, r25
    10cc:	89 8d       	ldd	r24, Y+25	; 0x19
    10ce:	88 2f       	mov	r24, r24
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	82 0f       	add	r24, r18
    10d4:	93 1f       	adc	r25, r19
    10d6:	9a 8b       	std	Y+18, r25	; 0x12
    10d8:	89 8b       	std	Y+17, r24	; 0x11
				sprintf(buf,"%i",var1);
    10da:	00 d0       	rcall	.+0      	; 0x10dc <main+0x1f2>
    10dc:	00 d0       	rcall	.+0      	; 0x10de <main+0x1f4>
    10de:	00 d0       	rcall	.+0      	; 0x10e0 <main+0x1f6>
    10e0:	ed b7       	in	r30, 0x3d	; 61
    10e2:	fe b7       	in	r31, 0x3e	; 62
    10e4:	31 96       	adiw	r30, 0x01	; 1
    10e6:	ce 01       	movw	r24, r28
    10e8:	4a 96       	adiw	r24, 0x1a	; 26
    10ea:	91 83       	std	Z+1, r25	; 0x01
    10ec:	80 83       	st	Z, r24
    10ee:	80 e8       	ldi	r24, 0x80	; 128
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	93 83       	std	Z+3, r25	; 0x03
    10f4:	82 83       	std	Z+2, r24	; 0x02
    10f6:	89 89       	ldd	r24, Y+17	; 0x11
    10f8:	9a 89       	ldd	r25, Y+18	; 0x12
    10fa:	95 83       	std	Z+5, r25	; 0x05
    10fc:	84 83       	std	Z+4, r24	; 0x04
    10fe:	0e 94 df 14 	call	0x29be	; 0x29be <sprintf>
    1102:	2d b7       	in	r18, 0x3d	; 61
    1104:	3e b7       	in	r19, 0x3e	; 62
    1106:	2a 5f       	subi	r18, 0xFA	; 250
    1108:	3f 4f       	sbci	r19, 0xFF	; 255
    110a:	0f b6       	in	r0, 0x3f	; 63
    110c:	f8 94       	cli
    110e:	3e bf       	out	0x3e, r19	; 62
    1110:	0f be       	out	0x3f, r0	; 63
    1112:	2d bf       	out	0x3d, r18	; 61
				LCD_displayStringRowColumn(2, 0, buf);  	/* Display the pressed keypad switch */
    1114:	9e 01       	movw	r18, r28
    1116:	26 5e       	subi	r18, 0xE6	; 230
    1118:	3f 4f       	sbci	r19, 0xFF	; 255
    111a:	82 e0       	ldi	r24, 0x02	; 2
    111c:	60 e0       	ldi	r22, 0x00	; 0
    111e:	a9 01       	movw	r20, r18
    1120:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <LCD_displayStringRowColumn>
    1124:	6e c1       	rjmp	.+732    	; 0x1402 <main+0x518>
			}

			/* Check if the key pressed is the second operand */
			else if(flage_op == ADD || flage_op == SUB || flage_op == MUL || flage_op == DIV)
    1126:	8f 89       	ldd	r24, Y+23	; 0x17
    1128:	81 30       	cpi	r24, 0x01	; 1
    112a:	51 f0       	breq	.+20     	; 0x1140 <main+0x256>
    112c:	8f 89       	ldd	r24, Y+23	; 0x17
    112e:	82 30       	cpi	r24, 0x02	; 2
    1130:	39 f0       	breq	.+14     	; 0x1140 <main+0x256>
    1132:	8f 89       	ldd	r24, Y+23	; 0x17
    1134:	83 30       	cpi	r24, 0x03	; 3
    1136:	21 f0       	breq	.+8      	; 0x1140 <main+0x256>
    1138:	8f 89       	ldd	r24, Y+23	; 0x17
    113a:	84 30       	cpi	r24, 0x04	; 4
    113c:	09 f0       	breq	.+2      	; 0x1140 <main+0x256>
    113e:	78 c0       	rjmp	.+240    	; 0x1230 <main+0x346>
			{
				if( !(key >= 0 && key <= 9) )
    1140:	89 8d       	ldd	r24, Y+25	; 0x19
    1142:	8a 30       	cpi	r24, 0x0A	; 10
    1144:	78 f1       	brcs	.+94     	; 0x11a4 <main+0x2ba>
				{
					sprintf(buf,"%i%c",var1,operation);
    1146:	88 8d       	ldd	r24, Y+24	; 0x18
    1148:	28 2f       	mov	r18, r24
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	8d b7       	in	r24, 0x3d	; 61
    114e:	9e b7       	in	r25, 0x3e	; 62
    1150:	08 97       	sbiw	r24, 0x08	; 8
    1152:	0f b6       	in	r0, 0x3f	; 63
    1154:	f8 94       	cli
    1156:	9e bf       	out	0x3e, r25	; 62
    1158:	0f be       	out	0x3f, r0	; 63
    115a:	8d bf       	out	0x3d, r24	; 61
    115c:	ed b7       	in	r30, 0x3d	; 61
    115e:	fe b7       	in	r31, 0x3e	; 62
    1160:	31 96       	adiw	r30, 0x01	; 1
    1162:	ce 01       	movw	r24, r28
    1164:	4a 96       	adiw	r24, 0x1a	; 26
    1166:	91 83       	std	Z+1, r25	; 0x01
    1168:	80 83       	st	Z, r24
    116a:	83 e8       	ldi	r24, 0x83	; 131
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	93 83       	std	Z+3, r25	; 0x03
    1170:	82 83       	std	Z+2, r24	; 0x02
    1172:	89 89       	ldd	r24, Y+17	; 0x11
    1174:	9a 89       	ldd	r25, Y+18	; 0x12
    1176:	95 83       	std	Z+5, r25	; 0x05
    1178:	84 83       	std	Z+4, r24	; 0x04
    117a:	37 83       	std	Z+7, r19	; 0x07
    117c:	26 83       	std	Z+6, r18	; 0x06
    117e:	0e 94 df 14 	call	0x29be	; 0x29be <sprintf>
    1182:	ad b7       	in	r26, 0x3d	; 61
    1184:	be b7       	in	r27, 0x3e	; 62
    1186:	18 96       	adiw	r26, 0x08	; 8
    1188:	0f b6       	in	r0, 0x3f	; 63
    118a:	f8 94       	cli
    118c:	be bf       	out	0x3e, r27	; 62
    118e:	0f be       	out	0x3f, r0	; 63
    1190:	ad bf       	out	0x3d, r26	; 61
					LCD_displayStringRowColumn(2, 0, buf);  /* Display First operand and operator */
    1192:	9e 01       	movw	r18, r28
    1194:	26 5e       	subi	r18, 0xE6	; 230
    1196:	3f 4f       	sbci	r19, 0xFF	; 255
    1198:	82 e0       	ldi	r24, 0x02	; 2
    119a:	60 e0       	ldi	r22, 0x00	; 0
    119c:	a9 01       	movw	r20, r18
    119e:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <LCD_displayStringRowColumn>
    11a2:	2f c1       	rjmp	.+606    	; 0x1402 <main+0x518>
				}
				else
				{
					var2 = var2*10 + key;
    11a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    11a6:	98 89       	ldd	r25, Y+16	; 0x10
    11a8:	9c 01       	movw	r18, r24
    11aa:	22 0f       	add	r18, r18
    11ac:	33 1f       	adc	r19, r19
    11ae:	c9 01       	movw	r24, r18
    11b0:	88 0f       	add	r24, r24
    11b2:	99 1f       	adc	r25, r25
    11b4:	88 0f       	add	r24, r24
    11b6:	99 1f       	adc	r25, r25
    11b8:	28 0f       	add	r18, r24
    11ba:	39 1f       	adc	r19, r25
    11bc:	89 8d       	ldd	r24, Y+25	; 0x19
    11be:	88 2f       	mov	r24, r24
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	82 0f       	add	r24, r18
    11c4:	93 1f       	adc	r25, r19
    11c6:	98 8b       	std	Y+16, r25	; 0x10
    11c8:	8f 87       	std	Y+15, r24	; 0x0f
					sprintf(buf,"%i%c%i", var1, operation, var2);
    11ca:	88 8d       	ldd	r24, Y+24	; 0x18
    11cc:	28 2f       	mov	r18, r24
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	8d b7       	in	r24, 0x3d	; 61
    11d2:	9e b7       	in	r25, 0x3e	; 62
    11d4:	0a 97       	sbiw	r24, 0x0a	; 10
    11d6:	0f b6       	in	r0, 0x3f	; 63
    11d8:	f8 94       	cli
    11da:	9e bf       	out	0x3e, r25	; 62
    11dc:	0f be       	out	0x3f, r0	; 63
    11de:	8d bf       	out	0x3d, r24	; 61
    11e0:	ed b7       	in	r30, 0x3d	; 61
    11e2:	fe b7       	in	r31, 0x3e	; 62
    11e4:	31 96       	adiw	r30, 0x01	; 1
    11e6:	ce 01       	movw	r24, r28
    11e8:	4a 96       	adiw	r24, 0x1a	; 26
    11ea:	91 83       	std	Z+1, r25	; 0x01
    11ec:	80 83       	st	Z, r24
    11ee:	88 e8       	ldi	r24, 0x88	; 136
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	93 83       	std	Z+3, r25	; 0x03
    11f4:	82 83       	std	Z+2, r24	; 0x02
    11f6:	89 89       	ldd	r24, Y+17	; 0x11
    11f8:	9a 89       	ldd	r25, Y+18	; 0x12
    11fa:	95 83       	std	Z+5, r25	; 0x05
    11fc:	84 83       	std	Z+4, r24	; 0x04
    11fe:	37 83       	std	Z+7, r19	; 0x07
    1200:	26 83       	std	Z+6, r18	; 0x06
    1202:	8f 85       	ldd	r24, Y+15	; 0x0f
    1204:	98 89       	ldd	r25, Y+16	; 0x10
    1206:	91 87       	std	Z+9, r25	; 0x09
    1208:	80 87       	std	Z+8, r24	; 0x08
    120a:	0e 94 df 14 	call	0x29be	; 0x29be <sprintf>
    120e:	ad b7       	in	r26, 0x3d	; 61
    1210:	be b7       	in	r27, 0x3e	; 62
    1212:	1a 96       	adiw	r26, 0x0a	; 10
    1214:	0f b6       	in	r0, 0x3f	; 63
    1216:	f8 94       	cli
    1218:	be bf       	out	0x3e, r27	; 62
    121a:	0f be       	out	0x3f, r0	; 63
    121c:	ad bf       	out	0x3d, r26	; 61
					/* Display First, Second operand and operator */
					LCD_displayStringRowColumn(2, 0, buf);
    121e:	9e 01       	movw	r18, r28
    1220:	26 5e       	subi	r18, 0xE6	; 230
    1222:	3f 4f       	sbci	r19, 0xFF	; 255
    1224:	82 e0       	ldi	r24, 0x02	; 2
    1226:	60 e0       	ldi	r22, 0x00	; 0
    1228:	a9 01       	movw	r20, r18
    122a:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <LCD_displayStringRowColumn>
    122e:	e9 c0       	rjmp	.+466    	; 0x1402 <main+0x518>
				}
			}
			/* Check if the Equal Button is pressed or not to display the result */
			else if(flage_op == EQL)
    1230:	8f 89       	ldd	r24, Y+23	; 0x17
    1232:	85 30       	cpi	r24, 0x05	; 5
    1234:	09 f0       	breq	.+2      	; 0x1238 <main+0x34e>
    1236:	e5 c0       	rjmp	.+458    	; 0x1402 <main+0x518>
			{
				switch(operation)
    1238:	88 8d       	ldd	r24, Y+24	; 0x18
    123a:	28 2f       	mov	r18, r24
    123c:	30 e0       	ldi	r19, 0x00	; 0
    123e:	3b a7       	std	Y+43, r19	; 0x2b
    1240:	2a a7       	std	Y+42, r18	; 0x2a
    1242:	8a a5       	ldd	r24, Y+42	; 0x2a
    1244:	9b a5       	ldd	r25, Y+43	; 0x2b
    1246:	8b 32       	cpi	r24, 0x2B	; 43
    1248:	91 05       	cpc	r25, r1
    124a:	c1 f0       	breq	.+48     	; 0x127c <main+0x392>
    124c:	aa a5       	ldd	r26, Y+42	; 0x2a
    124e:	bb a5       	ldd	r27, Y+43	; 0x2b
    1250:	ac 32       	cpi	r26, 0x2C	; 44
    1252:	b1 05       	cpc	r27, r1
    1254:	3c f4       	brge	.+14     	; 0x1264 <main+0x37a>
    1256:	2a a5       	ldd	r18, Y+42	; 0x2a
    1258:	3b a5       	ldd	r19, Y+43	; 0x2b
    125a:	2a 32       	cpi	r18, 0x2A	; 42
    125c:	31 05       	cpc	r19, r1
    125e:	09 f4       	brne	.+2      	; 0x1262 <main+0x378>
    1260:	53 c0       	rjmp	.+166    	; 0x1308 <main+0x41e>
    1262:	97 c0       	rjmp	.+302    	; 0x1392 <main+0x4a8>
    1264:	8a a5       	ldd	r24, Y+42	; 0x2a
    1266:	9b a5       	ldd	r25, Y+43	; 0x2b
    1268:	8d 32       	cpi	r24, 0x2D	; 45
    126a:	91 05       	cpc	r25, r1
    126c:	51 f1       	breq	.+84     	; 0x12c2 <main+0x3d8>
    126e:	aa a5       	ldd	r26, Y+42	; 0x2a
    1270:	bb a5       	ldd	r27, Y+43	; 0x2b
    1272:	af 32       	cpi	r26, 0x2F	; 47
    1274:	b1 05       	cpc	r27, r1
    1276:	09 f4       	brne	.+2      	; 0x127a <main+0x390>
    1278:	6a c0       	rjmp	.+212    	; 0x134e <main+0x464>
    127a:	8b c0       	rjmp	.+278    	; 0x1392 <main+0x4a8>
				{
				case '+':	result = (float)var1+(float)var2;
    127c:	89 89       	ldd	r24, Y+17	; 0x11
    127e:	9a 89       	ldd	r25, Y+18	; 0x12
    1280:	aa 27       	eor	r26, r26
    1282:	97 fd       	sbrc	r25, 7
    1284:	a0 95       	com	r26
    1286:	ba 2f       	mov	r27, r26
    1288:	bc 01       	movw	r22, r24
    128a:	cd 01       	movw	r24, r26
    128c:	0e 94 ce 04 	call	0x99c	; 0x99c <__floatsisf>
    1290:	7b 01       	movw	r14, r22
    1292:	8c 01       	movw	r16, r24
    1294:	8f 85       	ldd	r24, Y+15	; 0x0f
    1296:	98 89       	ldd	r25, Y+16	; 0x10
    1298:	aa 27       	eor	r26, r26
    129a:	97 fd       	sbrc	r25, 7
    129c:	a0 95       	com	r26
    129e:	ba 2f       	mov	r27, r26
    12a0:	bc 01       	movw	r22, r24
    12a2:	cd 01       	movw	r24, r26
    12a4:	0e 94 ce 04 	call	0x99c	; 0x99c <__floatsisf>
    12a8:	9b 01       	movw	r18, r22
    12aa:	ac 01       	movw	r20, r24
    12ac:	c8 01       	movw	r24, r16
    12ae:	b7 01       	movw	r22, r14
    12b0:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__addsf3>
    12b4:	dc 01       	movw	r26, r24
    12b6:	cb 01       	movw	r24, r22
    12b8:	8b 8b       	std	Y+19, r24	; 0x13
    12ba:	9c 8b       	std	Y+20, r25	; 0x14
    12bc:	ad 8b       	std	Y+21, r26	; 0x15
    12be:	be 8b       	std	Y+22, r27	; 0x16
    12c0:	68 c0       	rjmp	.+208    	; 0x1392 <main+0x4a8>
				break;
				case '-':	result = (float)var1-(float)var2;
    12c2:	89 89       	ldd	r24, Y+17	; 0x11
    12c4:	9a 89       	ldd	r25, Y+18	; 0x12
    12c6:	aa 27       	eor	r26, r26
    12c8:	97 fd       	sbrc	r25, 7
    12ca:	a0 95       	com	r26
    12cc:	ba 2f       	mov	r27, r26
    12ce:	bc 01       	movw	r22, r24
    12d0:	cd 01       	movw	r24, r26
    12d2:	0e 94 ce 04 	call	0x99c	; 0x99c <__floatsisf>
    12d6:	7b 01       	movw	r14, r22
    12d8:	8c 01       	movw	r16, r24
    12da:	8f 85       	ldd	r24, Y+15	; 0x0f
    12dc:	98 89       	ldd	r25, Y+16	; 0x10
    12de:	aa 27       	eor	r26, r26
    12e0:	97 fd       	sbrc	r25, 7
    12e2:	a0 95       	com	r26
    12e4:	ba 2f       	mov	r27, r26
    12e6:	bc 01       	movw	r22, r24
    12e8:	cd 01       	movw	r24, r26
    12ea:	0e 94 ce 04 	call	0x99c	; 0x99c <__floatsisf>
    12ee:	9b 01       	movw	r18, r22
    12f0:	ac 01       	movw	r20, r24
    12f2:	c8 01       	movw	r24, r16
    12f4:	b7 01       	movw	r22, r14
    12f6:	0e 94 3a 02 	call	0x474	; 0x474 <__subsf3>
    12fa:	dc 01       	movw	r26, r24
    12fc:	cb 01       	movw	r24, r22
    12fe:	8b 8b       	std	Y+19, r24	; 0x13
    1300:	9c 8b       	std	Y+20, r25	; 0x14
    1302:	ad 8b       	std	Y+21, r26	; 0x15
    1304:	be 8b       	std	Y+22, r27	; 0x16
    1306:	45 c0       	rjmp	.+138    	; 0x1392 <main+0x4a8>
				break;
				case '*':	result = (float)var1*(float)var2;
    1308:	89 89       	ldd	r24, Y+17	; 0x11
    130a:	9a 89       	ldd	r25, Y+18	; 0x12
    130c:	aa 27       	eor	r26, r26
    130e:	97 fd       	sbrc	r25, 7
    1310:	a0 95       	com	r26
    1312:	ba 2f       	mov	r27, r26
    1314:	bc 01       	movw	r22, r24
    1316:	cd 01       	movw	r24, r26
    1318:	0e 94 ce 04 	call	0x99c	; 0x99c <__floatsisf>
    131c:	7b 01       	movw	r14, r22
    131e:	8c 01       	movw	r16, r24
    1320:	8f 85       	ldd	r24, Y+15	; 0x0f
    1322:	98 89       	ldd	r25, Y+16	; 0x10
    1324:	aa 27       	eor	r26, r26
    1326:	97 fd       	sbrc	r25, 7
    1328:	a0 95       	com	r26
    132a:	ba 2f       	mov	r27, r26
    132c:	bc 01       	movw	r22, r24
    132e:	cd 01       	movw	r24, r26
    1330:	0e 94 ce 04 	call	0x99c	; 0x99c <__floatsisf>
    1334:	9b 01       	movw	r18, r22
    1336:	ac 01       	movw	r20, r24
    1338:	c8 01       	movw	r24, r16
    133a:	b7 01       	movw	r22, r14
    133c:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    1340:	dc 01       	movw	r26, r24
    1342:	cb 01       	movw	r24, r22
    1344:	8b 8b       	std	Y+19, r24	; 0x13
    1346:	9c 8b       	std	Y+20, r25	; 0x14
    1348:	ad 8b       	std	Y+21, r26	; 0x15
    134a:	be 8b       	std	Y+22, r27	; 0x16
    134c:	22 c0       	rjmp	.+68     	; 0x1392 <main+0x4a8>
				break;
				case '/':	result =(float)var1/(float)var2;
    134e:	89 89       	ldd	r24, Y+17	; 0x11
    1350:	9a 89       	ldd	r25, Y+18	; 0x12
    1352:	aa 27       	eor	r26, r26
    1354:	97 fd       	sbrc	r25, 7
    1356:	a0 95       	com	r26
    1358:	ba 2f       	mov	r27, r26
    135a:	bc 01       	movw	r22, r24
    135c:	cd 01       	movw	r24, r26
    135e:	0e 94 ce 04 	call	0x99c	; 0x99c <__floatsisf>
    1362:	7b 01       	movw	r14, r22
    1364:	8c 01       	movw	r16, r24
    1366:	8f 85       	ldd	r24, Y+15	; 0x0f
    1368:	98 89       	ldd	r25, Y+16	; 0x10
    136a:	aa 27       	eor	r26, r26
    136c:	97 fd       	sbrc	r25, 7
    136e:	a0 95       	com	r26
    1370:	ba 2f       	mov	r27, r26
    1372:	bc 01       	movw	r22, r24
    1374:	cd 01       	movw	r24, r26
    1376:	0e 94 ce 04 	call	0x99c	; 0x99c <__floatsisf>
    137a:	9b 01       	movw	r18, r22
    137c:	ac 01       	movw	r20, r24
    137e:	c8 01       	movw	r24, r16
    1380:	b7 01       	movw	r22, r14
    1382:	0e 94 92 03 	call	0x724	; 0x724 <__divsf3>
    1386:	dc 01       	movw	r26, r24
    1388:	cb 01       	movw	r24, r22
    138a:	8b 8b       	std	Y+19, r24	; 0x13
    138c:	9c 8b       	std	Y+20, r25	; 0x14
    138e:	ad 8b       	std	Y+21, r26	; 0x15
    1390:	be 8b       	std	Y+22, r27	; 0x16
				break;
				}

				sprintf(buf, "=%.2f", result);
    1392:	2d b7       	in	r18, 0x3d	; 61
    1394:	3e b7       	in	r19, 0x3e	; 62
    1396:	28 50       	subi	r18, 0x08	; 8
    1398:	30 40       	sbci	r19, 0x00	; 0
    139a:	0f b6       	in	r0, 0x3f	; 63
    139c:	f8 94       	cli
    139e:	3e bf       	out	0x3e, r19	; 62
    13a0:	0f be       	out	0x3f, r0	; 63
    13a2:	2d bf       	out	0x3d, r18	; 61
    13a4:	ed b7       	in	r30, 0x3d	; 61
    13a6:	fe b7       	in	r31, 0x3e	; 62
    13a8:	31 96       	adiw	r30, 0x01	; 1
    13aa:	ce 01       	movw	r24, r28
    13ac:	4a 96       	adiw	r24, 0x1a	; 26
    13ae:	91 83       	std	Z+1, r25	; 0x01
    13b0:	80 83       	st	Z, r24
    13b2:	8f e8       	ldi	r24, 0x8F	; 143
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	93 83       	std	Z+3, r25	; 0x03
    13b8:	82 83       	std	Z+2, r24	; 0x02
    13ba:	8b 89       	ldd	r24, Y+19	; 0x13
    13bc:	9c 89       	ldd	r25, Y+20	; 0x14
    13be:	ad 89       	ldd	r26, Y+21	; 0x15
    13c0:	be 89       	ldd	r27, Y+22	; 0x16
    13c2:	84 83       	std	Z+4, r24	; 0x04
    13c4:	95 83       	std	Z+5, r25	; 0x05
    13c6:	a6 83       	std	Z+6, r26	; 0x06
    13c8:	b7 83       	std	Z+7, r27	; 0x07
    13ca:	0e 94 df 14 	call	0x29be	; 0x29be <sprintf>
    13ce:	8d b7       	in	r24, 0x3d	; 61
    13d0:	9e b7       	in	r25, 0x3e	; 62
    13d2:	08 96       	adiw	r24, 0x08	; 8
    13d4:	0f b6       	in	r0, 0x3f	; 63
    13d6:	f8 94       	cli
    13d8:	9e bf       	out	0x3e, r25	; 62
    13da:	0f be       	out	0x3f, r0	; 63
    13dc:	8d bf       	out	0x3d, r24	; 61
				LCD_displayString(buf);
    13de:	ce 01       	movw	r24, r28
    13e0:	4a 96       	adiw	r24, 0x1a	; 26
    13e2:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <LCD_displayString>
				flage_op = NO_OP;
    13e6:	1f 8a       	std	Y+23, r1	; 0x17
				key = var1 = var2 = operation = 0;
    13e8:	18 8e       	std	Y+24, r1	; 0x18
    13ea:	18 8a       	std	Y+16, r1	; 0x10
    13ec:	1f 86       	std	Y+15, r1	; 0x0f
    13ee:	8f 85       	ldd	r24, Y+15	; 0x0f
    13f0:	98 89       	ldd	r25, Y+16	; 0x10
    13f2:	9a 8b       	std	Y+18, r25	; 0x12
    13f4:	89 8b       	std	Y+17, r24	; 0x11
    13f6:	89 89       	ldd	r24, Y+17	; 0x11
    13f8:	89 8f       	std	Y+25, r24	; 0x19
				while(KeyPad_getPressedKey() == '='){};	/* If pressed key is equal to '=' do nothing */
    13fa:	0e 94 24 0a 	call	0x1448	; 0x1448 <KeyPad_getPressedKey>
    13fe:	8d 33       	cpi	r24, 0x3D	; 61
    1400:	e1 f3       	breq	.-8      	; 0x13fa <main+0x510>
			}

			if(key == CLS)	/* Check if the 'C' Button is pressed or not,if it pressed clear the screen */
    1402:	89 8d       	ldd	r24, Y+25	; 0x19
    1404:	8d 30       	cpi	r24, 0x0D	; 13
    1406:	f1 f4       	brne	.+60     	; 0x1444 <main+0x55a>
			{
				LCD_clearScreen();
    1408:	0e 94 dc 0f 	call	0x1fb8	; 0x1fb8 <LCD_clearScreen>
				LCD_displayStringRowColumn(0,0,"M.T Diploma 51");
    140c:	20 e6       	ldi	r18, 0x60	; 96
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	80 e0       	ldi	r24, 0x00	; 0
    1412:	60 e0       	ldi	r22, 0x00	; 0
    1414:	a9 01       	movw	r20, r18
    1416:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <LCD_displayStringRowColumn>
				LCD_displayStringRowColumn(1,0,"Enter operation:");
    141a:	2f e6       	ldi	r18, 0x6F	; 111
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	81 e0       	ldi	r24, 0x01	; 1
    1420:	60 e0       	ldi	r22, 0x00	; 0
    1422:	a9 01       	movw	r20, r18
    1424:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <LCD_displayStringRowColumn>
				LCD_goToRowColumn(2,0);
    1428:	82 e0       	ldi	r24, 0x02	; 2
    142a:	60 e0       	ldi	r22, 0x00	; 0
    142c:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <LCD_goToRowColumn>
				flage_op = 0;
    1430:	1f 8a       	std	Y+23, r1	; 0x17
				key = var1 = var2 = operation = 0;
    1432:	18 8e       	std	Y+24, r1	; 0x18
    1434:	18 8a       	std	Y+16, r1	; 0x10
    1436:	1f 86       	std	Y+15, r1	; 0x0f
    1438:	8f 85       	ldd	r24, Y+15	; 0x0f
    143a:	98 89       	ldd	r25, Y+16	; 0x10
    143c:	9a 8b       	std	Y+18, r25	; 0x12
    143e:	89 8b       	std	Y+17, r24	; 0x11
    1440:	89 89       	ldd	r24, Y+17	; 0x11
    1442:	89 8f       	std	Y+25, r24	; 0x19
			}

			key = 0;	/* Clear the key for Next round */
    1444:	19 8e       	std	Y+25, r1	; 0x19
    1446:	80 cd       	rjmp	.-1280   	; 0xf48 <main+0x5e>

00001448 <KeyPad_getPressedKey>:
#endif

/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/
uint8 KeyPad_getPressedKey(void){
    1448:	df 93       	push	r29
    144a:	cf 93       	push	r28
    144c:	00 d0       	rcall	.+0      	; 0x144e <KeyPad_getPressedKey+0x6>
    144e:	cd b7       	in	r28, 0x3d	; 61
    1450:	de b7       	in	r29, 0x3e	; 62
	uint8 col,row;
	while(1)
	{
		for(col=0;col<N_col;col++) /* Loop for columns */
    1452:	1a 82       	std	Y+2, r1	; 0x02
    1454:	4c c0       	rjmp	.+152    	; 0x14ee <KeyPad_getPressedKey+0xa6>
		{
			/* 
			 * Each time only one of the column pins will be output and
			 * the rest will be input pins include the row pins 
			 */ 
			KEYPAD_PORT_DIR = (0b00010000<<col); 
    1456:	ea e3       	ldi	r30, 0x3A	; 58
    1458:	f0 e0       	ldi	r31, 0x00	; 0
    145a:	8a 81       	ldd	r24, Y+2	; 0x02
    145c:	28 2f       	mov	r18, r24
    145e:	30 e0       	ldi	r19, 0x00	; 0
    1460:	80 e1       	ldi	r24, 0x10	; 16
    1462:	90 e0       	ldi	r25, 0x00	; 0
    1464:	02 c0       	rjmp	.+4      	; 0x146a <KeyPad_getPressedKey+0x22>
    1466:	88 0f       	add	r24, r24
    1468:	99 1f       	adc	r25, r25
    146a:	2a 95       	dec	r18
    146c:	e2 f7       	brpl	.-8      	; 0x1466 <KeyPad_getPressedKey+0x1e>
    146e:	80 83       	st	Z, r24
			
			/* 
			 * Clear the output pin column in this trace and enable the internal
			 * pull up resistors for the rows pins
			 */ 
			KEYPAD_PORT_OUT = (~(0b00010000<<col)); 
    1470:	eb e3       	ldi	r30, 0x3B	; 59
    1472:	f0 e0       	ldi	r31, 0x00	; 0
    1474:	8a 81       	ldd	r24, Y+2	; 0x02
    1476:	28 2f       	mov	r18, r24
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	80 e1       	ldi	r24, 0x10	; 16
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	02 2e       	mov	r0, r18
    1480:	02 c0       	rjmp	.+4      	; 0x1486 <KeyPad_getPressedKey+0x3e>
    1482:	88 0f       	add	r24, r24
    1484:	99 1f       	adc	r25, r25
    1486:	0a 94       	dec	r0
    1488:	e2 f7       	brpl	.-8      	; 0x1482 <KeyPad_getPressedKey+0x3a>
    148a:	80 95       	com	r24
    148c:	80 83       	st	Z, r24
			for(row=0;row<N_row;row++) /* loop for rows */
    148e:	19 82       	std	Y+1, r1	; 0x01
    1490:	28 c0       	rjmp	.+80     	; 0x14e2 <KeyPad_getPressedKey+0x9a>
			{
				if(BIT_IS_CLEAR(KEYPAD_PORT_IN,row)) /* If the switch is press in this row */
    1492:	e9 e3       	ldi	r30, 0x39	; 57
    1494:	f0 e0       	ldi	r31, 0x00	; 0
    1496:	80 81       	ld	r24, Z
    1498:	28 2f       	mov	r18, r24
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	89 81       	ldd	r24, Y+1	; 0x01
    149e:	88 2f       	mov	r24, r24
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	a9 01       	movw	r20, r18
    14a4:	02 c0       	rjmp	.+4      	; 0x14aa <KeyPad_getPressedKey+0x62>
    14a6:	55 95       	asr	r21
    14a8:	47 95       	ror	r20
    14aa:	8a 95       	dec	r24
    14ac:	e2 f7       	brpl	.-8      	; 0x14a6 <KeyPad_getPressedKey+0x5e>
    14ae:	ca 01       	movw	r24, r20
    14b0:	81 70       	andi	r24, 0x01	; 1
    14b2:	90 70       	andi	r25, 0x00	; 0
    14b4:	00 97       	sbiw	r24, 0x00	; 0
    14b6:	91 f4       	brne	.+36     	; 0x14dc <KeyPad_getPressedKey+0x94>
				{
					#if (N_col == 3)  
						return KeyPad_4x3_adjustKeyNumber((row*N_col)+col+1); 
					#elif (N_col == 4)
						return KeyPad_4x4_adjustKeyNumber((row*N_col)+col+1);
    14b8:	89 81       	ldd	r24, Y+1	; 0x01
    14ba:	88 2f       	mov	r24, r24
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	88 0f       	add	r24, r24
    14c0:	99 1f       	adc	r25, r25
    14c2:	88 0f       	add	r24, r24
    14c4:	99 1f       	adc	r25, r25
    14c6:	98 2f       	mov	r25, r24
    14c8:	8a 81       	ldd	r24, Y+2	; 0x02
    14ca:	89 0f       	add	r24, r25
    14cc:	8f 5f       	subi	r24, 0xFF	; 255
    14ce:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <KeyPad_4x4_adjustKeyNumber>
					#endif				
				}
			}
		}
	}	
}
    14d2:	0f 90       	pop	r0
    14d4:	0f 90       	pop	r0
    14d6:	cf 91       	pop	r28
    14d8:	df 91       	pop	r29
    14da:	08 95       	ret
			/* 
			 * Clear the output pin column in this trace and enable the internal
			 * pull up resistors for the rows pins
			 */ 
			KEYPAD_PORT_OUT = (~(0b00010000<<col)); 
			for(row=0;row<N_row;row++) /* loop for rows */
    14dc:	89 81       	ldd	r24, Y+1	; 0x01
    14de:	8f 5f       	subi	r24, 0xFF	; 255
    14e0:	89 83       	std	Y+1, r24	; 0x01
    14e2:	89 81       	ldd	r24, Y+1	; 0x01
    14e4:	84 30       	cpi	r24, 0x04	; 4
    14e6:	a8 f2       	brcs	.-86     	; 0x1492 <KeyPad_getPressedKey+0x4a>
 *******************************************************************************/
uint8 KeyPad_getPressedKey(void){
	uint8 col,row;
	while(1)
	{
		for(col=0;col<N_col;col++) /* Loop for columns */
    14e8:	8a 81       	ldd	r24, Y+2	; 0x02
    14ea:	8f 5f       	subi	r24, 0xFF	; 255
    14ec:	8a 83       	std	Y+2, r24	; 0x02
    14ee:	8a 81       	ldd	r24, Y+2	; 0x02
    14f0:	84 30       	cpi	r24, 0x04	; 4
    14f2:	08 f4       	brcc	.+2      	; 0x14f6 <KeyPad_getPressedKey+0xae>
    14f4:	b0 cf       	rjmp	.-160    	; 0x1456 <KeyPad_getPressedKey+0xe>
    14f6:	ad cf       	rjmp	.-166    	; 0x1452 <KeyPad_getPressedKey+0xa>

000014f8 <KeyPad_4x4_adjustKeyNumber>:
} 

#elif (N_col == 4)
 
static uint8 KeyPad_4x4_adjustKeyNumber(uint8 button_number)
{
    14f8:	df 93       	push	r29
    14fa:	cf 93       	push	r28
    14fc:	00 d0       	rcall	.+0      	; 0x14fe <KeyPad_4x4_adjustKeyNumber+0x6>
    14fe:	00 d0       	rcall	.+0      	; 0x1500 <KeyPad_4x4_adjustKeyNumber+0x8>
    1500:	cd b7       	in	r28, 0x3d	; 61
    1502:	de b7       	in	r29, 0x3e	; 62
    1504:	89 83       	std	Y+1, r24	; 0x01
	switch(button_number)
    1506:	89 81       	ldd	r24, Y+1	; 0x01
    1508:	28 2f       	mov	r18, r24
    150a:	30 e0       	ldi	r19, 0x00	; 0
    150c:	3c 83       	std	Y+4, r19	; 0x04
    150e:	2b 83       	std	Y+3, r18	; 0x03
    1510:	8b 81       	ldd	r24, Y+3	; 0x03
    1512:	9c 81       	ldd	r25, Y+4	; 0x04
    1514:	88 30       	cpi	r24, 0x08	; 8
    1516:	91 05       	cpc	r25, r1
    1518:	09 f4       	brne	.+2      	; 0x151c <KeyPad_4x4_adjustKeyNumber+0x24>
    151a:	70 c0       	rjmp	.+224    	; 0x15fc <KeyPad_4x4_adjustKeyNumber+0x104>
    151c:	2b 81       	ldd	r18, Y+3	; 0x03
    151e:	3c 81       	ldd	r19, Y+4	; 0x04
    1520:	29 30       	cpi	r18, 0x09	; 9
    1522:	31 05       	cpc	r19, r1
    1524:	5c f5       	brge	.+86     	; 0x157c <KeyPad_4x4_adjustKeyNumber+0x84>
    1526:	8b 81       	ldd	r24, Y+3	; 0x03
    1528:	9c 81       	ldd	r25, Y+4	; 0x04
    152a:	84 30       	cpi	r24, 0x04	; 4
    152c:	91 05       	cpc	r25, r1
    152e:	09 f4       	brne	.+2      	; 0x1532 <KeyPad_4x4_adjustKeyNumber+0x3a>
    1530:	59 c0       	rjmp	.+178    	; 0x15e4 <KeyPad_4x4_adjustKeyNumber+0xec>
    1532:	2b 81       	ldd	r18, Y+3	; 0x03
    1534:	3c 81       	ldd	r19, Y+4	; 0x04
    1536:	25 30       	cpi	r18, 0x05	; 5
    1538:	31 05       	cpc	r19, r1
    153a:	9c f4       	brge	.+38     	; 0x1562 <KeyPad_4x4_adjustKeyNumber+0x6a>
    153c:	8b 81       	ldd	r24, Y+3	; 0x03
    153e:	9c 81       	ldd	r25, Y+4	; 0x04
    1540:	82 30       	cpi	r24, 0x02	; 2
    1542:	91 05       	cpc	r25, r1
    1544:	09 f4       	brne	.+2      	; 0x1548 <KeyPad_4x4_adjustKeyNumber+0x50>
    1546:	48 c0       	rjmp	.+144    	; 0x15d8 <KeyPad_4x4_adjustKeyNumber+0xe0>
    1548:	2b 81       	ldd	r18, Y+3	; 0x03
    154a:	3c 81       	ldd	r19, Y+4	; 0x04
    154c:	23 30       	cpi	r18, 0x03	; 3
    154e:	31 05       	cpc	r19, r1
    1550:	0c f0       	brlt	.+2      	; 0x1554 <KeyPad_4x4_adjustKeyNumber+0x5c>
    1552:	45 c0       	rjmp	.+138    	; 0x15de <KeyPad_4x4_adjustKeyNumber+0xe6>
    1554:	8b 81       	ldd	r24, Y+3	; 0x03
    1556:	9c 81       	ldd	r25, Y+4	; 0x04
    1558:	81 30       	cpi	r24, 0x01	; 1
    155a:	91 05       	cpc	r25, r1
    155c:	09 f4       	brne	.+2      	; 0x1560 <KeyPad_4x4_adjustKeyNumber+0x68>
    155e:	39 c0       	rjmp	.+114    	; 0x15d2 <KeyPad_4x4_adjustKeyNumber+0xda>
    1560:	67 c0       	rjmp	.+206    	; 0x1630 <KeyPad_4x4_adjustKeyNumber+0x138>
    1562:	2b 81       	ldd	r18, Y+3	; 0x03
    1564:	3c 81       	ldd	r19, Y+4	; 0x04
    1566:	26 30       	cpi	r18, 0x06	; 6
    1568:	31 05       	cpc	r19, r1
    156a:	09 f4       	brne	.+2      	; 0x156e <KeyPad_4x4_adjustKeyNumber+0x76>
    156c:	41 c0       	rjmp	.+130    	; 0x15f0 <KeyPad_4x4_adjustKeyNumber+0xf8>
    156e:	8b 81       	ldd	r24, Y+3	; 0x03
    1570:	9c 81       	ldd	r25, Y+4	; 0x04
    1572:	87 30       	cpi	r24, 0x07	; 7
    1574:	91 05       	cpc	r25, r1
    1576:	0c f0       	brlt	.+2      	; 0x157a <KeyPad_4x4_adjustKeyNumber+0x82>
    1578:	3e c0       	rjmp	.+124    	; 0x15f6 <KeyPad_4x4_adjustKeyNumber+0xfe>
    157a:	37 c0       	rjmp	.+110    	; 0x15ea <KeyPad_4x4_adjustKeyNumber+0xf2>
    157c:	2b 81       	ldd	r18, Y+3	; 0x03
    157e:	3c 81       	ldd	r19, Y+4	; 0x04
    1580:	2c 30       	cpi	r18, 0x0C	; 12
    1582:	31 05       	cpc	r19, r1
    1584:	09 f4       	brne	.+2      	; 0x1588 <KeyPad_4x4_adjustKeyNumber+0x90>
    1586:	46 c0       	rjmp	.+140    	; 0x1614 <KeyPad_4x4_adjustKeyNumber+0x11c>
    1588:	8b 81       	ldd	r24, Y+3	; 0x03
    158a:	9c 81       	ldd	r25, Y+4	; 0x04
    158c:	8d 30       	cpi	r24, 0x0D	; 13
    158e:	91 05       	cpc	r25, r1
    1590:	5c f4       	brge	.+22     	; 0x15a8 <KeyPad_4x4_adjustKeyNumber+0xb0>
    1592:	2b 81       	ldd	r18, Y+3	; 0x03
    1594:	3c 81       	ldd	r19, Y+4	; 0x04
    1596:	2a 30       	cpi	r18, 0x0A	; 10
    1598:	31 05       	cpc	r19, r1
    159a:	b1 f1       	breq	.+108    	; 0x1608 <KeyPad_4x4_adjustKeyNumber+0x110>
    159c:	8b 81       	ldd	r24, Y+3	; 0x03
    159e:	9c 81       	ldd	r25, Y+4	; 0x04
    15a0:	8b 30       	cpi	r24, 0x0B	; 11
    15a2:	91 05       	cpc	r25, r1
    15a4:	a4 f5       	brge	.+104    	; 0x160e <KeyPad_4x4_adjustKeyNumber+0x116>
    15a6:	2d c0       	rjmp	.+90     	; 0x1602 <KeyPad_4x4_adjustKeyNumber+0x10a>
    15a8:	2b 81       	ldd	r18, Y+3	; 0x03
    15aa:	3c 81       	ldd	r19, Y+4	; 0x04
    15ac:	2e 30       	cpi	r18, 0x0E	; 14
    15ae:	31 05       	cpc	r19, r1
    15b0:	b9 f1       	breq	.+110    	; 0x1620 <KeyPad_4x4_adjustKeyNumber+0x128>
    15b2:	8b 81       	ldd	r24, Y+3	; 0x03
    15b4:	9c 81       	ldd	r25, Y+4	; 0x04
    15b6:	8e 30       	cpi	r24, 0x0E	; 14
    15b8:	91 05       	cpc	r25, r1
    15ba:	7c f1       	brlt	.+94     	; 0x161a <KeyPad_4x4_adjustKeyNumber+0x122>
    15bc:	2b 81       	ldd	r18, Y+3	; 0x03
    15be:	3c 81       	ldd	r19, Y+4	; 0x04
    15c0:	2f 30       	cpi	r18, 0x0F	; 15
    15c2:	31 05       	cpc	r19, r1
    15c4:	79 f1       	breq	.+94     	; 0x1624 <KeyPad_4x4_adjustKeyNumber+0x12c>
    15c6:	8b 81       	ldd	r24, Y+3	; 0x03
    15c8:	9c 81       	ldd	r25, Y+4	; 0x04
    15ca:	80 31       	cpi	r24, 0x10	; 16
    15cc:	91 05       	cpc	r25, r1
    15ce:	69 f1       	breq	.+90     	; 0x162a <KeyPad_4x4_adjustKeyNumber+0x132>
    15d0:	2f c0       	rjmp	.+94     	; 0x1630 <KeyPad_4x4_adjustKeyNumber+0x138>
	{
		case 1: return 7; 
    15d2:	97 e0       	ldi	r25, 0x07	; 7
    15d4:	9a 83       	std	Y+2, r25	; 0x02
    15d6:	2e c0       	rjmp	.+92     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 2: return 8; 
    15d8:	28 e0       	ldi	r18, 0x08	; 8
    15da:	2a 83       	std	Y+2, r18	; 0x02
    15dc:	2b c0       	rjmp	.+86     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 3: return 9; 
    15de:	39 e0       	ldi	r19, 0x09	; 9
    15e0:	3a 83       	std	Y+2, r19	; 0x02
    15e2:	28 c0       	rjmp	.+80     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 4: return '/'; /* ASCII Code of '/' */
    15e4:	8f e2       	ldi	r24, 0x2F	; 47
    15e6:	8a 83       	std	Y+2, r24	; 0x02
    15e8:	25 c0       	rjmp	.+74     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 5: return 4; 
    15ea:	94 e0       	ldi	r25, 0x04	; 4
    15ec:	9a 83       	std	Y+2, r25	; 0x02
    15ee:	22 c0       	rjmp	.+68     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 6: return 5;
    15f0:	25 e0       	ldi	r18, 0x05	; 5
    15f2:	2a 83       	std	Y+2, r18	; 0x02
    15f4:	1f c0       	rjmp	.+62     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 7: return 6; 
    15f6:	36 e0       	ldi	r19, 0x06	; 6
    15f8:	3a 83       	std	Y+2, r19	; 0x02
    15fa:	1c c0       	rjmp	.+56     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 8: return '*'; /* ASCII Code of '*' */
    15fc:	8a e2       	ldi	r24, 0x2A	; 42
    15fe:	8a 83       	std	Y+2, r24	; 0x02
    1600:	19 c0       	rjmp	.+50     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;		
		case 9: return 1; 
    1602:	91 e0       	ldi	r25, 0x01	; 1
    1604:	9a 83       	std	Y+2, r25	; 0x02
    1606:	16 c0       	rjmp	.+44     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 10: return 2; 
    1608:	22 e0       	ldi	r18, 0x02	; 2
    160a:	2a 83       	std	Y+2, r18	; 0x02
    160c:	13 c0       	rjmp	.+38     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 11: return 3; 
    160e:	33 e0       	ldi	r19, 0x03	; 3
    1610:	3a 83       	std	Y+2, r19	; 0x02
    1612:	10 c0       	rjmp	.+32     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 12: return '-'; /* ASCII Code of '-' */
    1614:	8d e2       	ldi	r24, 0x2D	; 45
    1616:	8a 83       	std	Y+2, r24	; 0x02
    1618:	0d c0       	rjmp	.+26     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 13: return 13;  /* ASCII of Enter */
    161a:	9d e0       	ldi	r25, 0x0D	; 13
    161c:	9a 83       	std	Y+2, r25	; 0x02
    161e:	0a c0       	rjmp	.+20     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;			
		case 14: return 0; 
    1620:	1a 82       	std	Y+2, r1	; 0x02
    1622:	08 c0       	rjmp	.+16     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 15: return '='; /* ASCII Code of '=' */
    1624:	2d e3       	ldi	r18, 0x3D	; 61
    1626:	2a 83       	std	Y+2, r18	; 0x02
    1628:	05 c0       	rjmp	.+10     	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		case 16: return '+'; /* ASCII Code of '+' */
    162a:	3b e2       	ldi	r19, 0x2B	; 43
    162c:	3a 83       	std	Y+2, r19	; 0x02
    162e:	02 c0       	rjmp	.+4      	; 0x1634 <KeyPad_4x4_adjustKeyNumber+0x13c>
				break;
		default: return button_number;								 						
    1630:	89 81       	ldd	r24, Y+1	; 0x01
    1632:	8a 83       	std	Y+2, r24	; 0x02
    1634:	8a 81       	ldd	r24, Y+2	; 0x02
	}
} 
    1636:	0f 90       	pop	r0
    1638:	0f 90       	pop	r0
    163a:	0f 90       	pop	r0
    163c:	0f 90       	pop	r0
    163e:	cf 91       	pop	r28
    1640:	df 91       	pop	r29
    1642:	08 95       	ret

00001644 <LCD_init>:

/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/
void LCD_init(void)
{
    1644:	df 93       	push	r29
    1646:	cf 93       	push	r28
    1648:	cd b7       	in	r28, 0x3d	; 61
    164a:	de b7       	in	r29, 0x3e	; 62
	LCD_CTRL_PORT_DIR |= (1<<E) | (1<<RS) | (1<<RW); /* Configure the control pins(E,RS,RW) as output pins */
    164c:	a7 e3       	ldi	r26, 0x37	; 55
    164e:	b0 e0       	ldi	r27, 0x00	; 0
    1650:	e7 e3       	ldi	r30, 0x37	; 55
    1652:	f0 e0       	ldi	r31, 0x00	; 0
    1654:	80 81       	ld	r24, Z
    1656:	8e 60       	ori	r24, 0x0E	; 14
    1658:	8c 93       	st	X, r24
			LCD_DATA_PORT_DIR |= 0x0F; /* Configure the lowest 4 bits of the data port as output pins */
		#endif		 
		LCD_sendCommand(FOUR_BITS_DATA_MODE); /* Initialize LCD in 4-bit mode */
		LCD_sendCommand(TWO_LINE_LCD_Four_BIT_MODE); /* Use 2-line lcd + 4-bit Data Mode + 5*7 dot display Mode */
	#elif (DATA_BITS_MODE == 8)
		LCD_DATA_PORT_DIR = 0xFF; /* Configure the data port as output port */ 
    165a:	e1 e3       	ldi	r30, 0x31	; 49
    165c:	f0 e0       	ldi	r31, 0x00	; 0
    165e:	8f ef       	ldi	r24, 0xFF	; 255
    1660:	80 83       	st	Z, r24
		LCD_sendCommand(TWO_LINE_LCD_Eight_BIT_MODE); /* Use 2-line lcd + 8-bit Data Mode + 5*7 dot display Mode */
    1662:	88 e3       	ldi	r24, 0x38	; 56
    1664:	0e 94 3d 0b 	call	0x167a	; 0x167a <LCD_sendCommand>
	#endif
	
	LCD_sendCommand(CURSOR_OFF); /* Cursor off */
    1668:	8c e0       	ldi	r24, 0x0C	; 12
    166a:	0e 94 3d 0b 	call	0x167a	; 0x167a <LCD_sendCommand>
	LCD_sendCommand(CLEAR_COMMAND); /* Clear LCD at the beginning */
    166e:	81 e0       	ldi	r24, 0x01	; 1
    1670:	0e 94 3d 0b 	call	0x167a	; 0x167a <LCD_sendCommand>
}
    1674:	cf 91       	pop	r28
    1676:	df 91       	pop	r29
    1678:	08 95       	ret

0000167a <LCD_sendCommand>:

void LCD_sendCommand(uint8 command)
{
    167a:	df 93       	push	r29
    167c:	cf 93       	push	r28
    167e:	cd b7       	in	r28, 0x3d	; 61
    1680:	de b7       	in	r29, 0x3e	; 62
    1682:	e9 97       	sbiw	r28, 0x39	; 57
    1684:	0f b6       	in	r0, 0x3f	; 63
    1686:	f8 94       	cli
    1688:	de bf       	out	0x3e, r29	; 62
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	cd bf       	out	0x3d, r28	; 61
    168e:	89 af       	std	Y+57, r24	; 0x39
	CLEAR_BIT(LCD_CTRL_PORT,RS); /* Instruction Mode RS=0 */
    1690:	a8 e3       	ldi	r26, 0x38	; 56
    1692:	b0 e0       	ldi	r27, 0x00	; 0
    1694:	e8 e3       	ldi	r30, 0x38	; 56
    1696:	f0 e0       	ldi	r31, 0x00	; 0
    1698:	80 81       	ld	r24, Z
    169a:	8d 7f       	andi	r24, 0xFD	; 253
    169c:	8c 93       	st	X, r24
	CLEAR_BIT(LCD_CTRL_PORT,RW); /* Write data to LCD so RW=0 */
    169e:	a8 e3       	ldi	r26, 0x38	; 56
    16a0:	b0 e0       	ldi	r27, 0x00	; 0
    16a2:	e8 e3       	ldi	r30, 0x38	; 56
    16a4:	f0 e0       	ldi	r31, 0x00	; 0
    16a6:	80 81       	ld	r24, Z
    16a8:	8b 7f       	andi	r24, 0xFB	; 251
    16aa:	8c 93       	st	X, r24
    16ac:	80 e0       	ldi	r24, 0x00	; 0
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	a0 e8       	ldi	r26, 0x80	; 128
    16b2:	bf e3       	ldi	r27, 0x3F	; 63
    16b4:	8d ab       	std	Y+53, r24	; 0x35
    16b6:	9e ab       	std	Y+54, r25	; 0x36
    16b8:	af ab       	std	Y+55, r26	; 0x37
    16ba:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16bc:	6d a9       	ldd	r22, Y+53	; 0x35
    16be:	7e a9       	ldd	r23, Y+54	; 0x36
    16c0:	8f a9       	ldd	r24, Y+55	; 0x37
    16c2:	98 ad       	ldd	r25, Y+56	; 0x38
    16c4:	20 e0       	ldi	r18, 0x00	; 0
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	4a e7       	ldi	r20, 0x7A	; 122
    16ca:	53 e4       	ldi	r21, 0x43	; 67
    16cc:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    16d0:	dc 01       	movw	r26, r24
    16d2:	cb 01       	movw	r24, r22
    16d4:	89 ab       	std	Y+49, r24	; 0x31
    16d6:	9a ab       	std	Y+50, r25	; 0x32
    16d8:	ab ab       	std	Y+51, r26	; 0x33
    16da:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    16dc:	69 a9       	ldd	r22, Y+49	; 0x31
    16de:	7a a9       	ldd	r23, Y+50	; 0x32
    16e0:	8b a9       	ldd	r24, Y+51	; 0x33
    16e2:	9c a9       	ldd	r25, Y+52	; 0x34
    16e4:	20 e0       	ldi	r18, 0x00	; 0
    16e6:	30 e0       	ldi	r19, 0x00	; 0
    16e8:	40 e8       	ldi	r20, 0x80	; 128
    16ea:	5f e3       	ldi	r21, 0x3F	; 63
    16ec:	0e 94 9e 04 	call	0x93c	; 0x93c <__ltsf2>
    16f0:	88 23       	and	r24, r24
    16f2:	2c f4       	brge	.+10     	; 0x16fe <LCD_sendCommand+0x84>
		__ticks = 1;
    16f4:	81 e0       	ldi	r24, 0x01	; 1
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	98 ab       	std	Y+48, r25	; 0x30
    16fa:	8f a7       	std	Y+47, r24	; 0x2f
    16fc:	3f c0       	rjmp	.+126    	; 0x177c <LCD_sendCommand+0x102>
	else if (__tmp > 65535)
    16fe:	69 a9       	ldd	r22, Y+49	; 0x31
    1700:	7a a9       	ldd	r23, Y+50	; 0x32
    1702:	8b a9       	ldd	r24, Y+51	; 0x33
    1704:	9c a9       	ldd	r25, Y+52	; 0x34
    1706:	20 e0       	ldi	r18, 0x00	; 0
    1708:	3f ef       	ldi	r19, 0xFF	; 255
    170a:	4f e7       	ldi	r20, 0x7F	; 127
    170c:	57 e4       	ldi	r21, 0x47	; 71
    170e:	0e 94 3e 04 	call	0x87c	; 0x87c <__gtsf2>
    1712:	18 16       	cp	r1, r24
    1714:	4c f5       	brge	.+82     	; 0x1768 <LCD_sendCommand+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1716:	6d a9       	ldd	r22, Y+53	; 0x35
    1718:	7e a9       	ldd	r23, Y+54	; 0x36
    171a:	8f a9       	ldd	r24, Y+55	; 0x37
    171c:	98 ad       	ldd	r25, Y+56	; 0x38
    171e:	20 e0       	ldi	r18, 0x00	; 0
    1720:	30 e0       	ldi	r19, 0x00	; 0
    1722:	40 e2       	ldi	r20, 0x20	; 32
    1724:	51 e4       	ldi	r21, 0x41	; 65
    1726:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    172a:	dc 01       	movw	r26, r24
    172c:	cb 01       	movw	r24, r22
    172e:	bc 01       	movw	r22, r24
    1730:	cd 01       	movw	r24, r26
    1732:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1736:	dc 01       	movw	r26, r24
    1738:	cb 01       	movw	r24, r22
    173a:	98 ab       	std	Y+48, r25	; 0x30
    173c:	8f a7       	std	Y+47, r24	; 0x2f
    173e:	0f c0       	rjmp	.+30     	; 0x175e <LCD_sendCommand+0xe4>
    1740:	89 e1       	ldi	r24, 0x19	; 25
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	9e a7       	std	Y+46, r25	; 0x2e
    1746:	8d a7       	std	Y+45, r24	; 0x2d
    1748:	8d a5       	ldd	r24, Y+45	; 0x2d
    174a:	9e a5       	ldd	r25, Y+46	; 0x2e
    174c:	01 97       	sbiw	r24, 0x01	; 1
    174e:	f1 f7       	brne	.-4      	; 0x174c <LCD_sendCommand+0xd2>
    1750:	9e a7       	std	Y+46, r25	; 0x2e
    1752:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1754:	8f a5       	ldd	r24, Y+47	; 0x2f
    1756:	98 a9       	ldd	r25, Y+48	; 0x30
    1758:	01 97       	sbiw	r24, 0x01	; 1
    175a:	98 ab       	std	Y+48, r25	; 0x30
    175c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    175e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1760:	98 a9       	ldd	r25, Y+48	; 0x30
    1762:	00 97       	sbiw	r24, 0x00	; 0
    1764:	69 f7       	brne	.-38     	; 0x1740 <LCD_sendCommand+0xc6>
    1766:	14 c0       	rjmp	.+40     	; 0x1790 <LCD_sendCommand+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1768:	69 a9       	ldd	r22, Y+49	; 0x31
    176a:	7a a9       	ldd	r23, Y+50	; 0x32
    176c:	8b a9       	ldd	r24, Y+51	; 0x33
    176e:	9c a9       	ldd	r25, Y+52	; 0x34
    1770:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1774:	dc 01       	movw	r26, r24
    1776:	cb 01       	movw	r24, r22
    1778:	98 ab       	std	Y+48, r25	; 0x30
    177a:	8f a7       	std	Y+47, r24	; 0x2f
    177c:	8f a5       	ldd	r24, Y+47	; 0x2f
    177e:	98 a9       	ldd	r25, Y+48	; 0x30
    1780:	9c a7       	std	Y+44, r25	; 0x2c
    1782:	8b a7       	std	Y+43, r24	; 0x2b
    1784:	8b a5       	ldd	r24, Y+43	; 0x2b
    1786:	9c a5       	ldd	r25, Y+44	; 0x2c
    1788:	01 97       	sbiw	r24, 0x01	; 1
    178a:	f1 f7       	brne	.-4      	; 0x1788 <LCD_sendCommand+0x10e>
    178c:	9c a7       	std	Y+44, r25	; 0x2c
    178e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* Delay for processing Tas = 50ns */
	SET_BIT(LCD_CTRL_PORT,E); /* Enable LCD E=1 */
    1790:	a8 e3       	ldi	r26, 0x38	; 56
    1792:	b0 e0       	ldi	r27, 0x00	; 0
    1794:	e8 e3       	ldi	r30, 0x38	; 56
    1796:	f0 e0       	ldi	r31, 0x00	; 0
    1798:	80 81       	ld	r24, Z
    179a:	88 60       	ori	r24, 0x08	; 8
    179c:	8c 93       	st	X, r24
    179e:	80 e0       	ldi	r24, 0x00	; 0
    17a0:	90 e0       	ldi	r25, 0x00	; 0
    17a2:	a0 e8       	ldi	r26, 0x80	; 128
    17a4:	bf e3       	ldi	r27, 0x3F	; 63
    17a6:	8f a3       	std	Y+39, r24	; 0x27
    17a8:	98 a7       	std	Y+40, r25	; 0x28
    17aa:	a9 a7       	std	Y+41, r26	; 0x29
    17ac:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17ae:	6f a1       	ldd	r22, Y+39	; 0x27
    17b0:	78 a5       	ldd	r23, Y+40	; 0x28
    17b2:	89 a5       	ldd	r24, Y+41	; 0x29
    17b4:	9a a5       	ldd	r25, Y+42	; 0x2a
    17b6:	20 e0       	ldi	r18, 0x00	; 0
    17b8:	30 e0       	ldi	r19, 0x00	; 0
    17ba:	4a e7       	ldi	r20, 0x7A	; 122
    17bc:	53 e4       	ldi	r21, 0x43	; 67
    17be:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    17c2:	dc 01       	movw	r26, r24
    17c4:	cb 01       	movw	r24, r22
    17c6:	8b a3       	std	Y+35, r24	; 0x23
    17c8:	9c a3       	std	Y+36, r25	; 0x24
    17ca:	ad a3       	std	Y+37, r26	; 0x25
    17cc:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    17ce:	6b a1       	ldd	r22, Y+35	; 0x23
    17d0:	7c a1       	ldd	r23, Y+36	; 0x24
    17d2:	8d a1       	ldd	r24, Y+37	; 0x25
    17d4:	9e a1       	ldd	r25, Y+38	; 0x26
    17d6:	20 e0       	ldi	r18, 0x00	; 0
    17d8:	30 e0       	ldi	r19, 0x00	; 0
    17da:	40 e8       	ldi	r20, 0x80	; 128
    17dc:	5f e3       	ldi	r21, 0x3F	; 63
    17de:	0e 94 9e 04 	call	0x93c	; 0x93c <__ltsf2>
    17e2:	88 23       	and	r24, r24
    17e4:	2c f4       	brge	.+10     	; 0x17f0 <LCD_sendCommand+0x176>
		__ticks = 1;
    17e6:	81 e0       	ldi	r24, 0x01	; 1
    17e8:	90 e0       	ldi	r25, 0x00	; 0
    17ea:	9a a3       	std	Y+34, r25	; 0x22
    17ec:	89 a3       	std	Y+33, r24	; 0x21
    17ee:	3f c0       	rjmp	.+126    	; 0x186e <LCD_sendCommand+0x1f4>
	else if (__tmp > 65535)
    17f0:	6b a1       	ldd	r22, Y+35	; 0x23
    17f2:	7c a1       	ldd	r23, Y+36	; 0x24
    17f4:	8d a1       	ldd	r24, Y+37	; 0x25
    17f6:	9e a1       	ldd	r25, Y+38	; 0x26
    17f8:	20 e0       	ldi	r18, 0x00	; 0
    17fa:	3f ef       	ldi	r19, 0xFF	; 255
    17fc:	4f e7       	ldi	r20, 0x7F	; 127
    17fe:	57 e4       	ldi	r21, 0x47	; 71
    1800:	0e 94 3e 04 	call	0x87c	; 0x87c <__gtsf2>
    1804:	18 16       	cp	r1, r24
    1806:	4c f5       	brge	.+82     	; 0x185a <LCD_sendCommand+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1808:	6f a1       	ldd	r22, Y+39	; 0x27
    180a:	78 a5       	ldd	r23, Y+40	; 0x28
    180c:	89 a5       	ldd	r24, Y+41	; 0x29
    180e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1810:	20 e0       	ldi	r18, 0x00	; 0
    1812:	30 e0       	ldi	r19, 0x00	; 0
    1814:	40 e2       	ldi	r20, 0x20	; 32
    1816:	51 e4       	ldi	r21, 0x41	; 65
    1818:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    181c:	dc 01       	movw	r26, r24
    181e:	cb 01       	movw	r24, r22
    1820:	bc 01       	movw	r22, r24
    1822:	cd 01       	movw	r24, r26
    1824:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1828:	dc 01       	movw	r26, r24
    182a:	cb 01       	movw	r24, r22
    182c:	9a a3       	std	Y+34, r25	; 0x22
    182e:	89 a3       	std	Y+33, r24	; 0x21
    1830:	0f c0       	rjmp	.+30     	; 0x1850 <LCD_sendCommand+0x1d6>
    1832:	89 e1       	ldi	r24, 0x19	; 25
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	98 a3       	std	Y+32, r25	; 0x20
    1838:	8f 8f       	std	Y+31, r24	; 0x1f
    183a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    183c:	98 a1       	ldd	r25, Y+32	; 0x20
    183e:	01 97       	sbiw	r24, 0x01	; 1
    1840:	f1 f7       	brne	.-4      	; 0x183e <LCD_sendCommand+0x1c4>
    1842:	98 a3       	std	Y+32, r25	; 0x20
    1844:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1846:	89 a1       	ldd	r24, Y+33	; 0x21
    1848:	9a a1       	ldd	r25, Y+34	; 0x22
    184a:	01 97       	sbiw	r24, 0x01	; 1
    184c:	9a a3       	std	Y+34, r25	; 0x22
    184e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1850:	89 a1       	ldd	r24, Y+33	; 0x21
    1852:	9a a1       	ldd	r25, Y+34	; 0x22
    1854:	00 97       	sbiw	r24, 0x00	; 0
    1856:	69 f7       	brne	.-38     	; 0x1832 <LCD_sendCommand+0x1b8>
    1858:	14 c0       	rjmp	.+40     	; 0x1882 <LCD_sendCommand+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    185a:	6b a1       	ldd	r22, Y+35	; 0x23
    185c:	7c a1       	ldd	r23, Y+36	; 0x24
    185e:	8d a1       	ldd	r24, Y+37	; 0x25
    1860:	9e a1       	ldd	r25, Y+38	; 0x26
    1862:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1866:	dc 01       	movw	r26, r24
    1868:	cb 01       	movw	r24, r22
    186a:	9a a3       	std	Y+34, r25	; 0x22
    186c:	89 a3       	std	Y+33, r24	; 0x21
    186e:	89 a1       	ldd	r24, Y+33	; 0x21
    1870:	9a a1       	ldd	r25, Y+34	; 0x22
    1872:	9e 8f       	std	Y+30, r25	; 0x1e
    1874:	8d 8f       	std	Y+29, r24	; 0x1d
    1876:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1878:	9e 8d       	ldd	r25, Y+30	; 0x1e
    187a:	01 97       	sbiw	r24, 0x01	; 1
    187c:	f1 f7       	brne	.-4      	; 0x187a <LCD_sendCommand+0x200>
    187e:	9e 8f       	std	Y+30, r25	; 0x1e
    1880:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(1); /* Delay for processing Tdsw = 100ns */
	CLEAR_BIT(LCD_CTRL_PORT,E); /* Disable LCD E=0 */
	_delay_ms(1); /* Delay for processing Th = 13ns */
#elif (DATA_BITS_MODE == 8)
	LCD_DATA_PORT = command; /* Out the required command to the data bus D0 --> D7 */
    1882:	e2 e3       	ldi	r30, 0x32	; 50
    1884:	f0 e0       	ldi	r31, 0x00	; 0
    1886:	89 ad       	ldd	r24, Y+57	; 0x39
    1888:	80 83       	st	Z, r24
    188a:	80 e0       	ldi	r24, 0x00	; 0
    188c:	90 e0       	ldi	r25, 0x00	; 0
    188e:	a0 e8       	ldi	r26, 0x80	; 128
    1890:	bf e3       	ldi	r27, 0x3F	; 63
    1892:	89 8f       	std	Y+25, r24	; 0x19
    1894:	9a 8f       	std	Y+26, r25	; 0x1a
    1896:	ab 8f       	std	Y+27, r26	; 0x1b
    1898:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    189a:	69 8d       	ldd	r22, Y+25	; 0x19
    189c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    189e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18a2:	20 e0       	ldi	r18, 0x00	; 0
    18a4:	30 e0       	ldi	r19, 0x00	; 0
    18a6:	4a e7       	ldi	r20, 0x7A	; 122
    18a8:	53 e4       	ldi	r21, 0x43	; 67
    18aa:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    18ae:	dc 01       	movw	r26, r24
    18b0:	cb 01       	movw	r24, r22
    18b2:	8d 8b       	std	Y+21, r24	; 0x15
    18b4:	9e 8b       	std	Y+22, r25	; 0x16
    18b6:	af 8b       	std	Y+23, r26	; 0x17
    18b8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    18ba:	6d 89       	ldd	r22, Y+21	; 0x15
    18bc:	7e 89       	ldd	r23, Y+22	; 0x16
    18be:	8f 89       	ldd	r24, Y+23	; 0x17
    18c0:	98 8d       	ldd	r25, Y+24	; 0x18
    18c2:	20 e0       	ldi	r18, 0x00	; 0
    18c4:	30 e0       	ldi	r19, 0x00	; 0
    18c6:	40 e8       	ldi	r20, 0x80	; 128
    18c8:	5f e3       	ldi	r21, 0x3F	; 63
    18ca:	0e 94 9e 04 	call	0x93c	; 0x93c <__ltsf2>
    18ce:	88 23       	and	r24, r24
    18d0:	2c f4       	brge	.+10     	; 0x18dc <LCD_sendCommand+0x262>
		__ticks = 1;
    18d2:	81 e0       	ldi	r24, 0x01	; 1
    18d4:	90 e0       	ldi	r25, 0x00	; 0
    18d6:	9c 8b       	std	Y+20, r25	; 0x14
    18d8:	8b 8b       	std	Y+19, r24	; 0x13
    18da:	3f c0       	rjmp	.+126    	; 0x195a <LCD_sendCommand+0x2e0>
	else if (__tmp > 65535)
    18dc:	6d 89       	ldd	r22, Y+21	; 0x15
    18de:	7e 89       	ldd	r23, Y+22	; 0x16
    18e0:	8f 89       	ldd	r24, Y+23	; 0x17
    18e2:	98 8d       	ldd	r25, Y+24	; 0x18
    18e4:	20 e0       	ldi	r18, 0x00	; 0
    18e6:	3f ef       	ldi	r19, 0xFF	; 255
    18e8:	4f e7       	ldi	r20, 0x7F	; 127
    18ea:	57 e4       	ldi	r21, 0x47	; 71
    18ec:	0e 94 3e 04 	call	0x87c	; 0x87c <__gtsf2>
    18f0:	18 16       	cp	r1, r24
    18f2:	4c f5       	brge	.+82     	; 0x1946 <LCD_sendCommand+0x2cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18f4:	69 8d       	ldd	r22, Y+25	; 0x19
    18f6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    18f8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18fa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18fc:	20 e0       	ldi	r18, 0x00	; 0
    18fe:	30 e0       	ldi	r19, 0x00	; 0
    1900:	40 e2       	ldi	r20, 0x20	; 32
    1902:	51 e4       	ldi	r21, 0x41	; 65
    1904:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    1908:	dc 01       	movw	r26, r24
    190a:	cb 01       	movw	r24, r22
    190c:	bc 01       	movw	r22, r24
    190e:	cd 01       	movw	r24, r26
    1910:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1914:	dc 01       	movw	r26, r24
    1916:	cb 01       	movw	r24, r22
    1918:	9c 8b       	std	Y+20, r25	; 0x14
    191a:	8b 8b       	std	Y+19, r24	; 0x13
    191c:	0f c0       	rjmp	.+30     	; 0x193c <LCD_sendCommand+0x2c2>
    191e:	89 e1       	ldi	r24, 0x19	; 25
    1920:	90 e0       	ldi	r25, 0x00	; 0
    1922:	9a 8b       	std	Y+18, r25	; 0x12
    1924:	89 8b       	std	Y+17, r24	; 0x11
    1926:	89 89       	ldd	r24, Y+17	; 0x11
    1928:	9a 89       	ldd	r25, Y+18	; 0x12
    192a:	01 97       	sbiw	r24, 0x01	; 1
    192c:	f1 f7       	brne	.-4      	; 0x192a <LCD_sendCommand+0x2b0>
    192e:	9a 8b       	std	Y+18, r25	; 0x12
    1930:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1932:	8b 89       	ldd	r24, Y+19	; 0x13
    1934:	9c 89       	ldd	r25, Y+20	; 0x14
    1936:	01 97       	sbiw	r24, 0x01	; 1
    1938:	9c 8b       	std	Y+20, r25	; 0x14
    193a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    193c:	8b 89       	ldd	r24, Y+19	; 0x13
    193e:	9c 89       	ldd	r25, Y+20	; 0x14
    1940:	00 97       	sbiw	r24, 0x00	; 0
    1942:	69 f7       	brne	.-38     	; 0x191e <LCD_sendCommand+0x2a4>
    1944:	14 c0       	rjmp	.+40     	; 0x196e <LCD_sendCommand+0x2f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1946:	6d 89       	ldd	r22, Y+21	; 0x15
    1948:	7e 89       	ldd	r23, Y+22	; 0x16
    194a:	8f 89       	ldd	r24, Y+23	; 0x17
    194c:	98 8d       	ldd	r25, Y+24	; 0x18
    194e:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1952:	dc 01       	movw	r26, r24
    1954:	cb 01       	movw	r24, r22
    1956:	9c 8b       	std	Y+20, r25	; 0x14
    1958:	8b 8b       	std	Y+19, r24	; 0x13
    195a:	8b 89       	ldd	r24, Y+19	; 0x13
    195c:	9c 89       	ldd	r25, Y+20	; 0x14
    195e:	98 8b       	std	Y+16, r25	; 0x10
    1960:	8f 87       	std	Y+15, r24	; 0x0f
    1962:	8f 85       	ldd	r24, Y+15	; 0x0f
    1964:	98 89       	ldd	r25, Y+16	; 0x10
    1966:	01 97       	sbiw	r24, 0x01	; 1
    1968:	f1 f7       	brne	.-4      	; 0x1966 <LCD_sendCommand+0x2ec>
    196a:	98 8b       	std	Y+16, r25	; 0x10
    196c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1); /* Delay for processing Tdsw = 100ns */
	CLEAR_BIT(LCD_CTRL_PORT,E); /* Disable LCD E=0 */
    196e:	a8 e3       	ldi	r26, 0x38	; 56
    1970:	b0 e0       	ldi	r27, 0x00	; 0
    1972:	e8 e3       	ldi	r30, 0x38	; 56
    1974:	f0 e0       	ldi	r31, 0x00	; 0
    1976:	80 81       	ld	r24, Z
    1978:	87 7f       	andi	r24, 0xF7	; 247
    197a:	8c 93       	st	X, r24
    197c:	80 e0       	ldi	r24, 0x00	; 0
    197e:	90 e0       	ldi	r25, 0x00	; 0
    1980:	a0 e8       	ldi	r26, 0x80	; 128
    1982:	bf e3       	ldi	r27, 0x3F	; 63
    1984:	8b 87       	std	Y+11, r24	; 0x0b
    1986:	9c 87       	std	Y+12, r25	; 0x0c
    1988:	ad 87       	std	Y+13, r26	; 0x0d
    198a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    198c:	6b 85       	ldd	r22, Y+11	; 0x0b
    198e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1990:	8d 85       	ldd	r24, Y+13	; 0x0d
    1992:	9e 85       	ldd	r25, Y+14	; 0x0e
    1994:	20 e0       	ldi	r18, 0x00	; 0
    1996:	30 e0       	ldi	r19, 0x00	; 0
    1998:	4a e7       	ldi	r20, 0x7A	; 122
    199a:	53 e4       	ldi	r21, 0x43	; 67
    199c:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    19a0:	dc 01       	movw	r26, r24
    19a2:	cb 01       	movw	r24, r22
    19a4:	8f 83       	std	Y+7, r24	; 0x07
    19a6:	98 87       	std	Y+8, r25	; 0x08
    19a8:	a9 87       	std	Y+9, r26	; 0x09
    19aa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    19ac:	6f 81       	ldd	r22, Y+7	; 0x07
    19ae:	78 85       	ldd	r23, Y+8	; 0x08
    19b0:	89 85       	ldd	r24, Y+9	; 0x09
    19b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    19b4:	20 e0       	ldi	r18, 0x00	; 0
    19b6:	30 e0       	ldi	r19, 0x00	; 0
    19b8:	40 e8       	ldi	r20, 0x80	; 128
    19ba:	5f e3       	ldi	r21, 0x3F	; 63
    19bc:	0e 94 9e 04 	call	0x93c	; 0x93c <__ltsf2>
    19c0:	88 23       	and	r24, r24
    19c2:	2c f4       	brge	.+10     	; 0x19ce <LCD_sendCommand+0x354>
		__ticks = 1;
    19c4:	81 e0       	ldi	r24, 0x01	; 1
    19c6:	90 e0       	ldi	r25, 0x00	; 0
    19c8:	9e 83       	std	Y+6, r25	; 0x06
    19ca:	8d 83       	std	Y+5, r24	; 0x05
    19cc:	3f c0       	rjmp	.+126    	; 0x1a4c <LCD_sendCommand+0x3d2>
	else if (__tmp > 65535)
    19ce:	6f 81       	ldd	r22, Y+7	; 0x07
    19d0:	78 85       	ldd	r23, Y+8	; 0x08
    19d2:	89 85       	ldd	r24, Y+9	; 0x09
    19d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    19d6:	20 e0       	ldi	r18, 0x00	; 0
    19d8:	3f ef       	ldi	r19, 0xFF	; 255
    19da:	4f e7       	ldi	r20, 0x7F	; 127
    19dc:	57 e4       	ldi	r21, 0x47	; 71
    19de:	0e 94 3e 04 	call	0x87c	; 0x87c <__gtsf2>
    19e2:	18 16       	cp	r1, r24
    19e4:	4c f5       	brge	.+82     	; 0x1a38 <LCD_sendCommand+0x3be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19e6:	6b 85       	ldd	r22, Y+11	; 0x0b
    19e8:	7c 85       	ldd	r23, Y+12	; 0x0c
    19ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    19ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    19ee:	20 e0       	ldi	r18, 0x00	; 0
    19f0:	30 e0       	ldi	r19, 0x00	; 0
    19f2:	40 e2       	ldi	r20, 0x20	; 32
    19f4:	51 e4       	ldi	r21, 0x41	; 65
    19f6:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    19fa:	dc 01       	movw	r26, r24
    19fc:	cb 01       	movw	r24, r22
    19fe:	bc 01       	movw	r22, r24
    1a00:	cd 01       	movw	r24, r26
    1a02:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1a06:	dc 01       	movw	r26, r24
    1a08:	cb 01       	movw	r24, r22
    1a0a:	9e 83       	std	Y+6, r25	; 0x06
    1a0c:	8d 83       	std	Y+5, r24	; 0x05
    1a0e:	0f c0       	rjmp	.+30     	; 0x1a2e <LCD_sendCommand+0x3b4>
    1a10:	89 e1       	ldi	r24, 0x19	; 25
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	9c 83       	std	Y+4, r25	; 0x04
    1a16:	8b 83       	std	Y+3, r24	; 0x03
    1a18:	8b 81       	ldd	r24, Y+3	; 0x03
    1a1a:	9c 81       	ldd	r25, Y+4	; 0x04
    1a1c:	01 97       	sbiw	r24, 0x01	; 1
    1a1e:	f1 f7       	brne	.-4      	; 0x1a1c <LCD_sendCommand+0x3a2>
    1a20:	9c 83       	std	Y+4, r25	; 0x04
    1a22:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a24:	8d 81       	ldd	r24, Y+5	; 0x05
    1a26:	9e 81       	ldd	r25, Y+6	; 0x06
    1a28:	01 97       	sbiw	r24, 0x01	; 1
    1a2a:	9e 83       	std	Y+6, r25	; 0x06
    1a2c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a2e:	8d 81       	ldd	r24, Y+5	; 0x05
    1a30:	9e 81       	ldd	r25, Y+6	; 0x06
    1a32:	00 97       	sbiw	r24, 0x00	; 0
    1a34:	69 f7       	brne	.-38     	; 0x1a10 <LCD_sendCommand+0x396>
    1a36:	14 c0       	rjmp	.+40     	; 0x1a60 <LCD_sendCommand+0x3e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a38:	6f 81       	ldd	r22, Y+7	; 0x07
    1a3a:	78 85       	ldd	r23, Y+8	; 0x08
    1a3c:	89 85       	ldd	r24, Y+9	; 0x09
    1a3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a40:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1a44:	dc 01       	movw	r26, r24
    1a46:	cb 01       	movw	r24, r22
    1a48:	9e 83       	std	Y+6, r25	; 0x06
    1a4a:	8d 83       	std	Y+5, r24	; 0x05
    1a4c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a4e:	9e 81       	ldd	r25, Y+6	; 0x06
    1a50:	9a 83       	std	Y+2, r25	; 0x02
    1a52:	89 83       	std	Y+1, r24	; 0x01
    1a54:	89 81       	ldd	r24, Y+1	; 0x01
    1a56:	9a 81       	ldd	r25, Y+2	; 0x02
    1a58:	01 97       	sbiw	r24, 0x01	; 1
    1a5a:	f1 f7       	brne	.-4      	; 0x1a58 <LCD_sendCommand+0x3de>
    1a5c:	9a 83       	std	Y+2, r25	; 0x02
    1a5e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1); /* Delay for processing Th = 13ns */
#endif
}
    1a60:	e9 96       	adiw	r28, 0x39	; 57
    1a62:	0f b6       	in	r0, 0x3f	; 63
    1a64:	f8 94       	cli
    1a66:	de bf       	out	0x3e, r29	; 62
    1a68:	0f be       	out	0x3f, r0	; 63
    1a6a:	cd bf       	out	0x3d, r28	; 61
    1a6c:	cf 91       	pop	r28
    1a6e:	df 91       	pop	r29
    1a70:	08 95       	ret

00001a72 <LCD_displayCharacter>:

void LCD_displayCharacter(uint8 data)
{
    1a72:	df 93       	push	r29
    1a74:	cf 93       	push	r28
    1a76:	cd b7       	in	r28, 0x3d	; 61
    1a78:	de b7       	in	r29, 0x3e	; 62
    1a7a:	e9 97       	sbiw	r28, 0x39	; 57
    1a7c:	0f b6       	in	r0, 0x3f	; 63
    1a7e:	f8 94       	cli
    1a80:	de bf       	out	0x3e, r29	; 62
    1a82:	0f be       	out	0x3f, r0	; 63
    1a84:	cd bf       	out	0x3d, r28	; 61
    1a86:	89 af       	std	Y+57, r24	; 0x39
	SET_BIT(LCD_CTRL_PORT,RS); /* Data Mode RS=1 */
    1a88:	a8 e3       	ldi	r26, 0x38	; 56
    1a8a:	b0 e0       	ldi	r27, 0x00	; 0
    1a8c:	e8 e3       	ldi	r30, 0x38	; 56
    1a8e:	f0 e0       	ldi	r31, 0x00	; 0
    1a90:	80 81       	ld	r24, Z
    1a92:	82 60       	ori	r24, 0x02	; 2
    1a94:	8c 93       	st	X, r24
	CLEAR_BIT(LCD_CTRL_PORT,RW); /* Write data to LCD so RW=0 */
    1a96:	a8 e3       	ldi	r26, 0x38	; 56
    1a98:	b0 e0       	ldi	r27, 0x00	; 0
    1a9a:	e8 e3       	ldi	r30, 0x38	; 56
    1a9c:	f0 e0       	ldi	r31, 0x00	; 0
    1a9e:	80 81       	ld	r24, Z
    1aa0:	8b 7f       	andi	r24, 0xFB	; 251
    1aa2:	8c 93       	st	X, r24
    1aa4:	80 e0       	ldi	r24, 0x00	; 0
    1aa6:	90 e0       	ldi	r25, 0x00	; 0
    1aa8:	a0 e8       	ldi	r26, 0x80	; 128
    1aaa:	bf e3       	ldi	r27, 0x3F	; 63
    1aac:	8d ab       	std	Y+53, r24	; 0x35
    1aae:	9e ab       	std	Y+54, r25	; 0x36
    1ab0:	af ab       	std	Y+55, r26	; 0x37
    1ab2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ab4:	6d a9       	ldd	r22, Y+53	; 0x35
    1ab6:	7e a9       	ldd	r23, Y+54	; 0x36
    1ab8:	8f a9       	ldd	r24, Y+55	; 0x37
    1aba:	98 ad       	ldd	r25, Y+56	; 0x38
    1abc:	20 e0       	ldi	r18, 0x00	; 0
    1abe:	30 e0       	ldi	r19, 0x00	; 0
    1ac0:	4a e7       	ldi	r20, 0x7A	; 122
    1ac2:	53 e4       	ldi	r21, 0x43	; 67
    1ac4:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    1ac8:	dc 01       	movw	r26, r24
    1aca:	cb 01       	movw	r24, r22
    1acc:	89 ab       	std	Y+49, r24	; 0x31
    1ace:	9a ab       	std	Y+50, r25	; 0x32
    1ad0:	ab ab       	std	Y+51, r26	; 0x33
    1ad2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1ad4:	69 a9       	ldd	r22, Y+49	; 0x31
    1ad6:	7a a9       	ldd	r23, Y+50	; 0x32
    1ad8:	8b a9       	ldd	r24, Y+51	; 0x33
    1ada:	9c a9       	ldd	r25, Y+52	; 0x34
    1adc:	20 e0       	ldi	r18, 0x00	; 0
    1ade:	30 e0       	ldi	r19, 0x00	; 0
    1ae0:	40 e8       	ldi	r20, 0x80	; 128
    1ae2:	5f e3       	ldi	r21, 0x3F	; 63
    1ae4:	0e 94 9e 04 	call	0x93c	; 0x93c <__ltsf2>
    1ae8:	88 23       	and	r24, r24
    1aea:	2c f4       	brge	.+10     	; 0x1af6 <LCD_displayCharacter+0x84>
		__ticks = 1;
    1aec:	81 e0       	ldi	r24, 0x01	; 1
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	98 ab       	std	Y+48, r25	; 0x30
    1af2:	8f a7       	std	Y+47, r24	; 0x2f
    1af4:	3f c0       	rjmp	.+126    	; 0x1b74 <LCD_displayCharacter+0x102>
	else if (__tmp > 65535)
    1af6:	69 a9       	ldd	r22, Y+49	; 0x31
    1af8:	7a a9       	ldd	r23, Y+50	; 0x32
    1afa:	8b a9       	ldd	r24, Y+51	; 0x33
    1afc:	9c a9       	ldd	r25, Y+52	; 0x34
    1afe:	20 e0       	ldi	r18, 0x00	; 0
    1b00:	3f ef       	ldi	r19, 0xFF	; 255
    1b02:	4f e7       	ldi	r20, 0x7F	; 127
    1b04:	57 e4       	ldi	r21, 0x47	; 71
    1b06:	0e 94 3e 04 	call	0x87c	; 0x87c <__gtsf2>
    1b0a:	18 16       	cp	r1, r24
    1b0c:	4c f5       	brge	.+82     	; 0x1b60 <LCD_displayCharacter+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b0e:	6d a9       	ldd	r22, Y+53	; 0x35
    1b10:	7e a9       	ldd	r23, Y+54	; 0x36
    1b12:	8f a9       	ldd	r24, Y+55	; 0x37
    1b14:	98 ad       	ldd	r25, Y+56	; 0x38
    1b16:	20 e0       	ldi	r18, 0x00	; 0
    1b18:	30 e0       	ldi	r19, 0x00	; 0
    1b1a:	40 e2       	ldi	r20, 0x20	; 32
    1b1c:	51 e4       	ldi	r21, 0x41	; 65
    1b1e:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    1b22:	dc 01       	movw	r26, r24
    1b24:	cb 01       	movw	r24, r22
    1b26:	bc 01       	movw	r22, r24
    1b28:	cd 01       	movw	r24, r26
    1b2a:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1b2e:	dc 01       	movw	r26, r24
    1b30:	cb 01       	movw	r24, r22
    1b32:	98 ab       	std	Y+48, r25	; 0x30
    1b34:	8f a7       	std	Y+47, r24	; 0x2f
    1b36:	0f c0       	rjmp	.+30     	; 0x1b56 <LCD_displayCharacter+0xe4>
    1b38:	89 e1       	ldi	r24, 0x19	; 25
    1b3a:	90 e0       	ldi	r25, 0x00	; 0
    1b3c:	9e a7       	std	Y+46, r25	; 0x2e
    1b3e:	8d a7       	std	Y+45, r24	; 0x2d
    1b40:	8d a5       	ldd	r24, Y+45	; 0x2d
    1b42:	9e a5       	ldd	r25, Y+46	; 0x2e
    1b44:	01 97       	sbiw	r24, 0x01	; 1
    1b46:	f1 f7       	brne	.-4      	; 0x1b44 <LCD_displayCharacter+0xd2>
    1b48:	9e a7       	std	Y+46, r25	; 0x2e
    1b4a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b4c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b4e:	98 a9       	ldd	r25, Y+48	; 0x30
    1b50:	01 97       	sbiw	r24, 0x01	; 1
    1b52:	98 ab       	std	Y+48, r25	; 0x30
    1b54:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b56:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b58:	98 a9       	ldd	r25, Y+48	; 0x30
    1b5a:	00 97       	sbiw	r24, 0x00	; 0
    1b5c:	69 f7       	brne	.-38     	; 0x1b38 <LCD_displayCharacter+0xc6>
    1b5e:	14 c0       	rjmp	.+40     	; 0x1b88 <LCD_displayCharacter+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b60:	69 a9       	ldd	r22, Y+49	; 0x31
    1b62:	7a a9       	ldd	r23, Y+50	; 0x32
    1b64:	8b a9       	ldd	r24, Y+51	; 0x33
    1b66:	9c a9       	ldd	r25, Y+52	; 0x34
    1b68:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1b6c:	dc 01       	movw	r26, r24
    1b6e:	cb 01       	movw	r24, r22
    1b70:	98 ab       	std	Y+48, r25	; 0x30
    1b72:	8f a7       	std	Y+47, r24	; 0x2f
    1b74:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b76:	98 a9       	ldd	r25, Y+48	; 0x30
    1b78:	9c a7       	std	Y+44, r25	; 0x2c
    1b7a:	8b a7       	std	Y+43, r24	; 0x2b
    1b7c:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b7e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b80:	01 97       	sbiw	r24, 0x01	; 1
    1b82:	f1 f7       	brne	.-4      	; 0x1b80 <LCD_displayCharacter+0x10e>
    1b84:	9c a7       	std	Y+44, r25	; 0x2c
    1b86:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* Delay for processing Tas = 50ns */
	SET_BIT(LCD_CTRL_PORT,E); /* Enable LCD E=1 */
    1b88:	a8 e3       	ldi	r26, 0x38	; 56
    1b8a:	b0 e0       	ldi	r27, 0x00	; 0
    1b8c:	e8 e3       	ldi	r30, 0x38	; 56
    1b8e:	f0 e0       	ldi	r31, 0x00	; 0
    1b90:	80 81       	ld	r24, Z
    1b92:	88 60       	ori	r24, 0x08	; 8
    1b94:	8c 93       	st	X, r24
    1b96:	80 e0       	ldi	r24, 0x00	; 0
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	a0 e8       	ldi	r26, 0x80	; 128
    1b9c:	bf e3       	ldi	r27, 0x3F	; 63
    1b9e:	8f a3       	std	Y+39, r24	; 0x27
    1ba0:	98 a7       	std	Y+40, r25	; 0x28
    1ba2:	a9 a7       	std	Y+41, r26	; 0x29
    1ba4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ba6:	6f a1       	ldd	r22, Y+39	; 0x27
    1ba8:	78 a5       	ldd	r23, Y+40	; 0x28
    1baa:	89 a5       	ldd	r24, Y+41	; 0x29
    1bac:	9a a5       	ldd	r25, Y+42	; 0x2a
    1bae:	20 e0       	ldi	r18, 0x00	; 0
    1bb0:	30 e0       	ldi	r19, 0x00	; 0
    1bb2:	4a e7       	ldi	r20, 0x7A	; 122
    1bb4:	53 e4       	ldi	r21, 0x43	; 67
    1bb6:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    1bba:	dc 01       	movw	r26, r24
    1bbc:	cb 01       	movw	r24, r22
    1bbe:	8b a3       	std	Y+35, r24	; 0x23
    1bc0:	9c a3       	std	Y+36, r25	; 0x24
    1bc2:	ad a3       	std	Y+37, r26	; 0x25
    1bc4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1bc6:	6b a1       	ldd	r22, Y+35	; 0x23
    1bc8:	7c a1       	ldd	r23, Y+36	; 0x24
    1bca:	8d a1       	ldd	r24, Y+37	; 0x25
    1bcc:	9e a1       	ldd	r25, Y+38	; 0x26
    1bce:	20 e0       	ldi	r18, 0x00	; 0
    1bd0:	30 e0       	ldi	r19, 0x00	; 0
    1bd2:	40 e8       	ldi	r20, 0x80	; 128
    1bd4:	5f e3       	ldi	r21, 0x3F	; 63
    1bd6:	0e 94 9e 04 	call	0x93c	; 0x93c <__ltsf2>
    1bda:	88 23       	and	r24, r24
    1bdc:	2c f4       	brge	.+10     	; 0x1be8 <LCD_displayCharacter+0x176>
		__ticks = 1;
    1bde:	81 e0       	ldi	r24, 0x01	; 1
    1be0:	90 e0       	ldi	r25, 0x00	; 0
    1be2:	9a a3       	std	Y+34, r25	; 0x22
    1be4:	89 a3       	std	Y+33, r24	; 0x21
    1be6:	3f c0       	rjmp	.+126    	; 0x1c66 <LCD_displayCharacter+0x1f4>
	else if (__tmp > 65535)
    1be8:	6b a1       	ldd	r22, Y+35	; 0x23
    1bea:	7c a1       	ldd	r23, Y+36	; 0x24
    1bec:	8d a1       	ldd	r24, Y+37	; 0x25
    1bee:	9e a1       	ldd	r25, Y+38	; 0x26
    1bf0:	20 e0       	ldi	r18, 0x00	; 0
    1bf2:	3f ef       	ldi	r19, 0xFF	; 255
    1bf4:	4f e7       	ldi	r20, 0x7F	; 127
    1bf6:	57 e4       	ldi	r21, 0x47	; 71
    1bf8:	0e 94 3e 04 	call	0x87c	; 0x87c <__gtsf2>
    1bfc:	18 16       	cp	r1, r24
    1bfe:	4c f5       	brge	.+82     	; 0x1c52 <LCD_displayCharacter+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c00:	6f a1       	ldd	r22, Y+39	; 0x27
    1c02:	78 a5       	ldd	r23, Y+40	; 0x28
    1c04:	89 a5       	ldd	r24, Y+41	; 0x29
    1c06:	9a a5       	ldd	r25, Y+42	; 0x2a
    1c08:	20 e0       	ldi	r18, 0x00	; 0
    1c0a:	30 e0       	ldi	r19, 0x00	; 0
    1c0c:	40 e2       	ldi	r20, 0x20	; 32
    1c0e:	51 e4       	ldi	r21, 0x41	; 65
    1c10:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    1c14:	dc 01       	movw	r26, r24
    1c16:	cb 01       	movw	r24, r22
    1c18:	bc 01       	movw	r22, r24
    1c1a:	cd 01       	movw	r24, r26
    1c1c:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1c20:	dc 01       	movw	r26, r24
    1c22:	cb 01       	movw	r24, r22
    1c24:	9a a3       	std	Y+34, r25	; 0x22
    1c26:	89 a3       	std	Y+33, r24	; 0x21
    1c28:	0f c0       	rjmp	.+30     	; 0x1c48 <LCD_displayCharacter+0x1d6>
    1c2a:	89 e1       	ldi	r24, 0x19	; 25
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	98 a3       	std	Y+32, r25	; 0x20
    1c30:	8f 8f       	std	Y+31, r24	; 0x1f
    1c32:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c34:	98 a1       	ldd	r25, Y+32	; 0x20
    1c36:	01 97       	sbiw	r24, 0x01	; 1
    1c38:	f1 f7       	brne	.-4      	; 0x1c36 <LCD_displayCharacter+0x1c4>
    1c3a:	98 a3       	std	Y+32, r25	; 0x20
    1c3c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c3e:	89 a1       	ldd	r24, Y+33	; 0x21
    1c40:	9a a1       	ldd	r25, Y+34	; 0x22
    1c42:	01 97       	sbiw	r24, 0x01	; 1
    1c44:	9a a3       	std	Y+34, r25	; 0x22
    1c46:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c48:	89 a1       	ldd	r24, Y+33	; 0x21
    1c4a:	9a a1       	ldd	r25, Y+34	; 0x22
    1c4c:	00 97       	sbiw	r24, 0x00	; 0
    1c4e:	69 f7       	brne	.-38     	; 0x1c2a <LCD_displayCharacter+0x1b8>
    1c50:	14 c0       	rjmp	.+40     	; 0x1c7a <LCD_displayCharacter+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c52:	6b a1       	ldd	r22, Y+35	; 0x23
    1c54:	7c a1       	ldd	r23, Y+36	; 0x24
    1c56:	8d a1       	ldd	r24, Y+37	; 0x25
    1c58:	9e a1       	ldd	r25, Y+38	; 0x26
    1c5a:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1c5e:	dc 01       	movw	r26, r24
    1c60:	cb 01       	movw	r24, r22
    1c62:	9a a3       	std	Y+34, r25	; 0x22
    1c64:	89 a3       	std	Y+33, r24	; 0x21
    1c66:	89 a1       	ldd	r24, Y+33	; 0x21
    1c68:	9a a1       	ldd	r25, Y+34	; 0x22
    1c6a:	9e 8f       	std	Y+30, r25	; 0x1e
    1c6c:	8d 8f       	std	Y+29, r24	; 0x1d
    1c6e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1c70:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1c72:	01 97       	sbiw	r24, 0x01	; 1
    1c74:	f1 f7       	brne	.-4      	; 0x1c72 <LCD_displayCharacter+0x200>
    1c76:	9e 8f       	std	Y+30, r25	; 0x1e
    1c78:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(1); /* Delay for processing Tdsw = 100ns */
	CLEAR_BIT(LCD_CTRL_PORT,E); /* Disable LCD E=0 */
	_delay_ms(1); /* Delay for processing Th = 13ns */
#elif (DATA_BITS_MODE == 8)
	LCD_DATA_PORT = data; /* Out the required command to the data bus D0 --> D7 */
    1c7a:	e2 e3       	ldi	r30, 0x32	; 50
    1c7c:	f0 e0       	ldi	r31, 0x00	; 0
    1c7e:	89 ad       	ldd	r24, Y+57	; 0x39
    1c80:	80 83       	st	Z, r24
    1c82:	80 e0       	ldi	r24, 0x00	; 0
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	a0 e8       	ldi	r26, 0x80	; 128
    1c88:	bf e3       	ldi	r27, 0x3F	; 63
    1c8a:	89 8f       	std	Y+25, r24	; 0x19
    1c8c:	9a 8f       	std	Y+26, r25	; 0x1a
    1c8e:	ab 8f       	std	Y+27, r26	; 0x1b
    1c90:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c92:	69 8d       	ldd	r22, Y+25	; 0x19
    1c94:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c96:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c98:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c9a:	20 e0       	ldi	r18, 0x00	; 0
    1c9c:	30 e0       	ldi	r19, 0x00	; 0
    1c9e:	4a e7       	ldi	r20, 0x7A	; 122
    1ca0:	53 e4       	ldi	r21, 0x43	; 67
    1ca2:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    1ca6:	dc 01       	movw	r26, r24
    1ca8:	cb 01       	movw	r24, r22
    1caa:	8d 8b       	std	Y+21, r24	; 0x15
    1cac:	9e 8b       	std	Y+22, r25	; 0x16
    1cae:	af 8b       	std	Y+23, r26	; 0x17
    1cb0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1cb2:	6d 89       	ldd	r22, Y+21	; 0x15
    1cb4:	7e 89       	ldd	r23, Y+22	; 0x16
    1cb6:	8f 89       	ldd	r24, Y+23	; 0x17
    1cb8:	98 8d       	ldd	r25, Y+24	; 0x18
    1cba:	20 e0       	ldi	r18, 0x00	; 0
    1cbc:	30 e0       	ldi	r19, 0x00	; 0
    1cbe:	40 e8       	ldi	r20, 0x80	; 128
    1cc0:	5f e3       	ldi	r21, 0x3F	; 63
    1cc2:	0e 94 9e 04 	call	0x93c	; 0x93c <__ltsf2>
    1cc6:	88 23       	and	r24, r24
    1cc8:	2c f4       	brge	.+10     	; 0x1cd4 <LCD_displayCharacter+0x262>
		__ticks = 1;
    1cca:	81 e0       	ldi	r24, 0x01	; 1
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	9c 8b       	std	Y+20, r25	; 0x14
    1cd0:	8b 8b       	std	Y+19, r24	; 0x13
    1cd2:	3f c0       	rjmp	.+126    	; 0x1d52 <LCD_displayCharacter+0x2e0>
	else if (__tmp > 65535)
    1cd4:	6d 89       	ldd	r22, Y+21	; 0x15
    1cd6:	7e 89       	ldd	r23, Y+22	; 0x16
    1cd8:	8f 89       	ldd	r24, Y+23	; 0x17
    1cda:	98 8d       	ldd	r25, Y+24	; 0x18
    1cdc:	20 e0       	ldi	r18, 0x00	; 0
    1cde:	3f ef       	ldi	r19, 0xFF	; 255
    1ce0:	4f e7       	ldi	r20, 0x7F	; 127
    1ce2:	57 e4       	ldi	r21, 0x47	; 71
    1ce4:	0e 94 3e 04 	call	0x87c	; 0x87c <__gtsf2>
    1ce8:	18 16       	cp	r1, r24
    1cea:	4c f5       	brge	.+82     	; 0x1d3e <LCD_displayCharacter+0x2cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cec:	69 8d       	ldd	r22, Y+25	; 0x19
    1cee:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1cf0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1cf2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1cf4:	20 e0       	ldi	r18, 0x00	; 0
    1cf6:	30 e0       	ldi	r19, 0x00	; 0
    1cf8:	40 e2       	ldi	r20, 0x20	; 32
    1cfa:	51 e4       	ldi	r21, 0x41	; 65
    1cfc:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    1d00:	dc 01       	movw	r26, r24
    1d02:	cb 01       	movw	r24, r22
    1d04:	bc 01       	movw	r22, r24
    1d06:	cd 01       	movw	r24, r26
    1d08:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1d0c:	dc 01       	movw	r26, r24
    1d0e:	cb 01       	movw	r24, r22
    1d10:	9c 8b       	std	Y+20, r25	; 0x14
    1d12:	8b 8b       	std	Y+19, r24	; 0x13
    1d14:	0f c0       	rjmp	.+30     	; 0x1d34 <LCD_displayCharacter+0x2c2>
    1d16:	89 e1       	ldi	r24, 0x19	; 25
    1d18:	90 e0       	ldi	r25, 0x00	; 0
    1d1a:	9a 8b       	std	Y+18, r25	; 0x12
    1d1c:	89 8b       	std	Y+17, r24	; 0x11
    1d1e:	89 89       	ldd	r24, Y+17	; 0x11
    1d20:	9a 89       	ldd	r25, Y+18	; 0x12
    1d22:	01 97       	sbiw	r24, 0x01	; 1
    1d24:	f1 f7       	brne	.-4      	; 0x1d22 <LCD_displayCharacter+0x2b0>
    1d26:	9a 8b       	std	Y+18, r25	; 0x12
    1d28:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d2a:	8b 89       	ldd	r24, Y+19	; 0x13
    1d2c:	9c 89       	ldd	r25, Y+20	; 0x14
    1d2e:	01 97       	sbiw	r24, 0x01	; 1
    1d30:	9c 8b       	std	Y+20, r25	; 0x14
    1d32:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d34:	8b 89       	ldd	r24, Y+19	; 0x13
    1d36:	9c 89       	ldd	r25, Y+20	; 0x14
    1d38:	00 97       	sbiw	r24, 0x00	; 0
    1d3a:	69 f7       	brne	.-38     	; 0x1d16 <LCD_displayCharacter+0x2a4>
    1d3c:	14 c0       	rjmp	.+40     	; 0x1d66 <LCD_displayCharacter+0x2f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d3e:	6d 89       	ldd	r22, Y+21	; 0x15
    1d40:	7e 89       	ldd	r23, Y+22	; 0x16
    1d42:	8f 89       	ldd	r24, Y+23	; 0x17
    1d44:	98 8d       	ldd	r25, Y+24	; 0x18
    1d46:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1d4a:	dc 01       	movw	r26, r24
    1d4c:	cb 01       	movw	r24, r22
    1d4e:	9c 8b       	std	Y+20, r25	; 0x14
    1d50:	8b 8b       	std	Y+19, r24	; 0x13
    1d52:	8b 89       	ldd	r24, Y+19	; 0x13
    1d54:	9c 89       	ldd	r25, Y+20	; 0x14
    1d56:	98 8b       	std	Y+16, r25	; 0x10
    1d58:	8f 87       	std	Y+15, r24	; 0x0f
    1d5a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d5c:	98 89       	ldd	r25, Y+16	; 0x10
    1d5e:	01 97       	sbiw	r24, 0x01	; 1
    1d60:	f1 f7       	brne	.-4      	; 0x1d5e <LCD_displayCharacter+0x2ec>
    1d62:	98 8b       	std	Y+16, r25	; 0x10
    1d64:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1); /* Delay for processing Tdsw = 100ns */
	CLEAR_BIT(LCD_CTRL_PORT,E); /* Disable LCD E=0 */
    1d66:	a8 e3       	ldi	r26, 0x38	; 56
    1d68:	b0 e0       	ldi	r27, 0x00	; 0
    1d6a:	e8 e3       	ldi	r30, 0x38	; 56
    1d6c:	f0 e0       	ldi	r31, 0x00	; 0
    1d6e:	80 81       	ld	r24, Z
    1d70:	87 7f       	andi	r24, 0xF7	; 247
    1d72:	8c 93       	st	X, r24
    1d74:	80 e0       	ldi	r24, 0x00	; 0
    1d76:	90 e0       	ldi	r25, 0x00	; 0
    1d78:	a0 e8       	ldi	r26, 0x80	; 128
    1d7a:	bf e3       	ldi	r27, 0x3F	; 63
    1d7c:	8b 87       	std	Y+11, r24	; 0x0b
    1d7e:	9c 87       	std	Y+12, r25	; 0x0c
    1d80:	ad 87       	std	Y+13, r26	; 0x0d
    1d82:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d84:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d86:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d88:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d8a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d8c:	20 e0       	ldi	r18, 0x00	; 0
    1d8e:	30 e0       	ldi	r19, 0x00	; 0
    1d90:	4a e7       	ldi	r20, 0x7A	; 122
    1d92:	53 e4       	ldi	r21, 0x43	; 67
    1d94:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    1d98:	dc 01       	movw	r26, r24
    1d9a:	cb 01       	movw	r24, r22
    1d9c:	8f 83       	std	Y+7, r24	; 0x07
    1d9e:	98 87       	std	Y+8, r25	; 0x08
    1da0:	a9 87       	std	Y+9, r26	; 0x09
    1da2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1da4:	6f 81       	ldd	r22, Y+7	; 0x07
    1da6:	78 85       	ldd	r23, Y+8	; 0x08
    1da8:	89 85       	ldd	r24, Y+9	; 0x09
    1daa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dac:	20 e0       	ldi	r18, 0x00	; 0
    1dae:	30 e0       	ldi	r19, 0x00	; 0
    1db0:	40 e8       	ldi	r20, 0x80	; 128
    1db2:	5f e3       	ldi	r21, 0x3F	; 63
    1db4:	0e 94 9e 04 	call	0x93c	; 0x93c <__ltsf2>
    1db8:	88 23       	and	r24, r24
    1dba:	2c f4       	brge	.+10     	; 0x1dc6 <LCD_displayCharacter+0x354>
		__ticks = 1;
    1dbc:	81 e0       	ldi	r24, 0x01	; 1
    1dbe:	90 e0       	ldi	r25, 0x00	; 0
    1dc0:	9e 83       	std	Y+6, r25	; 0x06
    1dc2:	8d 83       	std	Y+5, r24	; 0x05
    1dc4:	3f c0       	rjmp	.+126    	; 0x1e44 <LCD_displayCharacter+0x3d2>
	else if (__tmp > 65535)
    1dc6:	6f 81       	ldd	r22, Y+7	; 0x07
    1dc8:	78 85       	ldd	r23, Y+8	; 0x08
    1dca:	89 85       	ldd	r24, Y+9	; 0x09
    1dcc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dce:	20 e0       	ldi	r18, 0x00	; 0
    1dd0:	3f ef       	ldi	r19, 0xFF	; 255
    1dd2:	4f e7       	ldi	r20, 0x7F	; 127
    1dd4:	57 e4       	ldi	r21, 0x47	; 71
    1dd6:	0e 94 3e 04 	call	0x87c	; 0x87c <__gtsf2>
    1dda:	18 16       	cp	r1, r24
    1ddc:	4c f5       	brge	.+82     	; 0x1e30 <LCD_displayCharacter+0x3be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dde:	6b 85       	ldd	r22, Y+11	; 0x0b
    1de0:	7c 85       	ldd	r23, Y+12	; 0x0c
    1de2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1de4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1de6:	20 e0       	ldi	r18, 0x00	; 0
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	40 e2       	ldi	r20, 0x20	; 32
    1dec:	51 e4       	ldi	r21, 0x41	; 65
    1dee:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
    1df2:	dc 01       	movw	r26, r24
    1df4:	cb 01       	movw	r24, r22
    1df6:	bc 01       	movw	r22, r24
    1df8:	cd 01       	movw	r24, r26
    1dfa:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1dfe:	dc 01       	movw	r26, r24
    1e00:	cb 01       	movw	r24, r22
    1e02:	9e 83       	std	Y+6, r25	; 0x06
    1e04:	8d 83       	std	Y+5, r24	; 0x05
    1e06:	0f c0       	rjmp	.+30     	; 0x1e26 <LCD_displayCharacter+0x3b4>
    1e08:	89 e1       	ldi	r24, 0x19	; 25
    1e0a:	90 e0       	ldi	r25, 0x00	; 0
    1e0c:	9c 83       	std	Y+4, r25	; 0x04
    1e0e:	8b 83       	std	Y+3, r24	; 0x03
    1e10:	8b 81       	ldd	r24, Y+3	; 0x03
    1e12:	9c 81       	ldd	r25, Y+4	; 0x04
    1e14:	01 97       	sbiw	r24, 0x01	; 1
    1e16:	f1 f7       	brne	.-4      	; 0x1e14 <LCD_displayCharacter+0x3a2>
    1e18:	9c 83       	std	Y+4, r25	; 0x04
    1e1a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e1c:	8d 81       	ldd	r24, Y+5	; 0x05
    1e1e:	9e 81       	ldd	r25, Y+6	; 0x06
    1e20:	01 97       	sbiw	r24, 0x01	; 1
    1e22:	9e 83       	std	Y+6, r25	; 0x06
    1e24:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e26:	8d 81       	ldd	r24, Y+5	; 0x05
    1e28:	9e 81       	ldd	r25, Y+6	; 0x06
    1e2a:	00 97       	sbiw	r24, 0x00	; 0
    1e2c:	69 f7       	brne	.-38     	; 0x1e08 <LCD_displayCharacter+0x396>
    1e2e:	14 c0       	rjmp	.+40     	; 0x1e58 <LCD_displayCharacter+0x3e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e30:	6f 81       	ldd	r22, Y+7	; 0x07
    1e32:	78 85       	ldd	r23, Y+8	; 0x08
    1e34:	89 85       	ldd	r24, Y+9	; 0x09
    1e36:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e38:	0e 94 c2 00 	call	0x184	; 0x184 <__fixunssfsi>
    1e3c:	dc 01       	movw	r26, r24
    1e3e:	cb 01       	movw	r24, r22
    1e40:	9e 83       	std	Y+6, r25	; 0x06
    1e42:	8d 83       	std	Y+5, r24	; 0x05
    1e44:	8d 81       	ldd	r24, Y+5	; 0x05
    1e46:	9e 81       	ldd	r25, Y+6	; 0x06
    1e48:	9a 83       	std	Y+2, r25	; 0x02
    1e4a:	89 83       	std	Y+1, r24	; 0x01
    1e4c:	89 81       	ldd	r24, Y+1	; 0x01
    1e4e:	9a 81       	ldd	r25, Y+2	; 0x02
    1e50:	01 97       	sbiw	r24, 0x01	; 1
    1e52:	f1 f7       	brne	.-4      	; 0x1e50 <LCD_displayCharacter+0x3de>
    1e54:	9a 83       	std	Y+2, r25	; 0x02
    1e56:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1); /* Delay for processing Th = 13ns */
#endif
}
    1e58:	e9 96       	adiw	r28, 0x39	; 57
    1e5a:	0f b6       	in	r0, 0x3f	; 63
    1e5c:	f8 94       	cli
    1e5e:	de bf       	out	0x3e, r29	; 62
    1e60:	0f be       	out	0x3f, r0	; 63
    1e62:	cd bf       	out	0x3d, r28	; 61
    1e64:	cf 91       	pop	r28
    1e66:	df 91       	pop	r29
    1e68:	08 95       	ret

00001e6a <LCD_displayString>:

void LCD_displayString(const char *Str)
{
    1e6a:	df 93       	push	r29
    1e6c:	cf 93       	push	r28
    1e6e:	00 d0       	rcall	.+0      	; 0x1e70 <LCD_displayString+0x6>
    1e70:	0f 92       	push	r0
    1e72:	cd b7       	in	r28, 0x3d	; 61
    1e74:	de b7       	in	r29, 0x3e	; 62
    1e76:	9b 83       	std	Y+3, r25	; 0x03
    1e78:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i = 0;
    1e7a:	19 82       	std	Y+1, r1	; 0x01
    1e7c:	0e c0       	rjmp	.+28     	; 0x1e9a <LCD_displayString+0x30>
	while(Str[i] != '\0')
	{
		LCD_displayCharacter(Str[i]);
    1e7e:	89 81       	ldd	r24, Y+1	; 0x01
    1e80:	28 2f       	mov	r18, r24
    1e82:	30 e0       	ldi	r19, 0x00	; 0
    1e84:	8a 81       	ldd	r24, Y+2	; 0x02
    1e86:	9b 81       	ldd	r25, Y+3	; 0x03
    1e88:	fc 01       	movw	r30, r24
    1e8a:	e2 0f       	add	r30, r18
    1e8c:	f3 1f       	adc	r31, r19
    1e8e:	80 81       	ld	r24, Z
    1e90:	0e 94 39 0d 	call	0x1a72	; 0x1a72 <LCD_displayCharacter>
		i++;
    1e94:	89 81       	ldd	r24, Y+1	; 0x01
    1e96:	8f 5f       	subi	r24, 0xFF	; 255
    1e98:	89 83       	std	Y+1, r24	; 0x01
}

void LCD_displayString(const char *Str)
{
	uint8 i = 0;
	while(Str[i] != '\0')
    1e9a:	89 81       	ldd	r24, Y+1	; 0x01
    1e9c:	28 2f       	mov	r18, r24
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ea2:	9b 81       	ldd	r25, Y+3	; 0x03
    1ea4:	fc 01       	movw	r30, r24
    1ea6:	e2 0f       	add	r30, r18
    1ea8:	f3 1f       	adc	r31, r19
    1eaa:	80 81       	ld	r24, Z
    1eac:	88 23       	and	r24, r24
    1eae:	39 f7       	brne	.-50     	; 0x1e7e <LCD_displayString+0x14>
	{
		LCD_displayCharacter(Str[i]);
		i++;
	}
}
    1eb0:	0f 90       	pop	r0
    1eb2:	0f 90       	pop	r0
    1eb4:	0f 90       	pop	r0
    1eb6:	cf 91       	pop	r28
    1eb8:	df 91       	pop	r29
    1eba:	08 95       	ret

00001ebc <LCD_goToRowColumn>:

void LCD_goToRowColumn(uint8 row,uint8 col)
{
    1ebc:	df 93       	push	r29
    1ebe:	cf 93       	push	r28
    1ec0:	00 d0       	rcall	.+0      	; 0x1ec2 <LCD_goToRowColumn+0x6>
    1ec2:	00 d0       	rcall	.+0      	; 0x1ec4 <LCD_goToRowColumn+0x8>
    1ec4:	0f 92       	push	r0
    1ec6:	cd b7       	in	r28, 0x3d	; 61
    1ec8:	de b7       	in	r29, 0x3e	; 62
    1eca:	8a 83       	std	Y+2, r24	; 0x02
    1ecc:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Address;
	
	/* First of all calculate the required address */
	switch(row)
    1ece:	8a 81       	ldd	r24, Y+2	; 0x02
    1ed0:	28 2f       	mov	r18, r24
    1ed2:	30 e0       	ldi	r19, 0x00	; 0
    1ed4:	3d 83       	std	Y+5, r19	; 0x05
    1ed6:	2c 83       	std	Y+4, r18	; 0x04
    1ed8:	8c 81       	ldd	r24, Y+4	; 0x04
    1eda:	9d 81       	ldd	r25, Y+5	; 0x05
    1edc:	81 30       	cpi	r24, 0x01	; 1
    1ede:	91 05       	cpc	r25, r1
    1ee0:	c1 f0       	breq	.+48     	; 0x1f12 <LCD_goToRowColumn+0x56>
    1ee2:	2c 81       	ldd	r18, Y+4	; 0x04
    1ee4:	3d 81       	ldd	r19, Y+5	; 0x05
    1ee6:	22 30       	cpi	r18, 0x02	; 2
    1ee8:	31 05       	cpc	r19, r1
    1eea:	2c f4       	brge	.+10     	; 0x1ef6 <LCD_goToRowColumn+0x3a>
    1eec:	8c 81       	ldd	r24, Y+4	; 0x04
    1eee:	9d 81       	ldd	r25, Y+5	; 0x05
    1ef0:	00 97       	sbiw	r24, 0x00	; 0
    1ef2:	61 f0       	breq	.+24     	; 0x1f0c <LCD_goToRowColumn+0x50>
    1ef4:	19 c0       	rjmp	.+50     	; 0x1f28 <LCD_goToRowColumn+0x6c>
    1ef6:	2c 81       	ldd	r18, Y+4	; 0x04
    1ef8:	3d 81       	ldd	r19, Y+5	; 0x05
    1efa:	22 30       	cpi	r18, 0x02	; 2
    1efc:	31 05       	cpc	r19, r1
    1efe:	69 f0       	breq	.+26     	; 0x1f1a <LCD_goToRowColumn+0x5e>
    1f00:	8c 81       	ldd	r24, Y+4	; 0x04
    1f02:	9d 81       	ldd	r25, Y+5	; 0x05
    1f04:	83 30       	cpi	r24, 0x03	; 3
    1f06:	91 05       	cpc	r25, r1
    1f08:	61 f0       	breq	.+24     	; 0x1f22 <LCD_goToRowColumn+0x66>
    1f0a:	0e c0       	rjmp	.+28     	; 0x1f28 <LCD_goToRowColumn+0x6c>
	{
		case 0:
				Address=col;
    1f0c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f0e:	89 83       	std	Y+1, r24	; 0x01
    1f10:	0b c0       	rjmp	.+22     	; 0x1f28 <LCD_goToRowColumn+0x6c>
				break;
		case 1:
				Address=col+0x40;
    1f12:	8b 81       	ldd	r24, Y+3	; 0x03
    1f14:	80 5c       	subi	r24, 0xC0	; 192
    1f16:	89 83       	std	Y+1, r24	; 0x01
    1f18:	07 c0       	rjmp	.+14     	; 0x1f28 <LCD_goToRowColumn+0x6c>
				break;
		case 2:
				Address=col+0x10;
    1f1a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f1c:	80 5f       	subi	r24, 0xF0	; 240
    1f1e:	89 83       	std	Y+1, r24	; 0x01
    1f20:	03 c0       	rjmp	.+6      	; 0x1f28 <LCD_goToRowColumn+0x6c>
				break;
		case 3:
				Address=col+0x50;
    1f22:	8b 81       	ldd	r24, Y+3	; 0x03
    1f24:	80 5b       	subi	r24, 0xB0	; 176
    1f26:	89 83       	std	Y+1, r24	; 0x01
				break;
	}					
	/* To write to a specific address in the LCD
	 * we need to apply the corresponding command 0b10000000+Address */
	LCD_sendCommand(Address | SET_CURSOR_LOCATION); 
    1f28:	89 81       	ldd	r24, Y+1	; 0x01
    1f2a:	80 68       	ori	r24, 0x80	; 128
    1f2c:	0e 94 3d 0b 	call	0x167a	; 0x167a <LCD_sendCommand>
}
    1f30:	0f 90       	pop	r0
    1f32:	0f 90       	pop	r0
    1f34:	0f 90       	pop	r0
    1f36:	0f 90       	pop	r0
    1f38:	0f 90       	pop	r0
    1f3a:	cf 91       	pop	r28
    1f3c:	df 91       	pop	r29
    1f3e:	08 95       	ret

00001f40 <LCD_displayStringRowColumn>:

void LCD_displayStringRowColumn(uint8 row,uint8 col,const char *Str)
{
    1f40:	df 93       	push	r29
    1f42:	cf 93       	push	r28
    1f44:	00 d0       	rcall	.+0      	; 0x1f46 <LCD_displayStringRowColumn+0x6>
    1f46:	00 d0       	rcall	.+0      	; 0x1f48 <LCD_displayStringRowColumn+0x8>
    1f48:	cd b7       	in	r28, 0x3d	; 61
    1f4a:	de b7       	in	r29, 0x3e	; 62
    1f4c:	89 83       	std	Y+1, r24	; 0x01
    1f4e:	6a 83       	std	Y+2, r22	; 0x02
    1f50:	5c 83       	std	Y+4, r21	; 0x04
    1f52:	4b 83       	std	Y+3, r20	; 0x03
	LCD_goToRowColumn(row,col); /* Go to to the required LCD position */
    1f54:	89 81       	ldd	r24, Y+1	; 0x01
    1f56:	6a 81       	ldd	r22, Y+2	; 0x02
    1f58:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <LCD_goToRowColumn>
	LCD_displayString(Str); /* Display the string */
    1f5c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f5e:	9c 81       	ldd	r25, Y+4	; 0x04
    1f60:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <LCD_displayString>
}
    1f64:	0f 90       	pop	r0
    1f66:	0f 90       	pop	r0
    1f68:	0f 90       	pop	r0
    1f6a:	0f 90       	pop	r0
    1f6c:	cf 91       	pop	r28
    1f6e:	df 91       	pop	r29
    1f70:	08 95       	ret

00001f72 <LCD_intgerToString>:

void LCD_intgerToString(int data)
{
    1f72:	df 93       	push	r29
    1f74:	cf 93       	push	r28
    1f76:	cd b7       	in	r28, 0x3d	; 61
    1f78:	de b7       	in	r29, 0x3e	; 62
    1f7a:	62 97       	sbiw	r28, 0x12	; 18
    1f7c:	0f b6       	in	r0, 0x3f	; 63
    1f7e:	f8 94       	cli
    1f80:	de bf       	out	0x3e, r29	; 62
    1f82:	0f be       	out	0x3f, r0	; 63
    1f84:	cd bf       	out	0x3d, r28	; 61
    1f86:	9a 8b       	std	Y+18, r25	; 0x12
    1f88:	89 8b       	std	Y+17, r24	; 0x11
   char buff[16]; /* String to hold the ASCII result */
   itoa(data,buff,10); /* 10 for decimal */
    1f8a:	89 89       	ldd	r24, Y+17	; 0x11
    1f8c:	9a 89       	ldd	r25, Y+18	; 0x12
    1f8e:	9e 01       	movw	r18, r28
    1f90:	2f 5f       	subi	r18, 0xFF	; 255
    1f92:	3f 4f       	sbci	r19, 0xFF	; 255
    1f94:	b9 01       	movw	r22, r18
    1f96:	4a e0       	ldi	r20, 0x0A	; 10
    1f98:	50 e0       	ldi	r21, 0x00	; 0
    1f9a:	0e 94 92 14 	call	0x2924	; 0x2924 <itoa>
   LCD_displayString(buff);
    1f9e:	ce 01       	movw	r24, r28
    1fa0:	01 96       	adiw	r24, 0x01	; 1
    1fa2:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <LCD_displayString>
}
    1fa6:	62 96       	adiw	r28, 0x12	; 18
    1fa8:	0f b6       	in	r0, 0x3f	; 63
    1faa:	f8 94       	cli
    1fac:	de bf       	out	0x3e, r29	; 62
    1fae:	0f be       	out	0x3f, r0	; 63
    1fb0:	cd bf       	out	0x3d, r28	; 61
    1fb2:	cf 91       	pop	r28
    1fb4:	df 91       	pop	r29
    1fb6:	08 95       	ret

00001fb8 <LCD_clearScreen>:

void LCD_clearScreen(void)
{
    1fb8:	df 93       	push	r29
    1fba:	cf 93       	push	r28
    1fbc:	cd b7       	in	r28, 0x3d	; 61
    1fbe:	de b7       	in	r29, 0x3e	; 62
	LCD_sendCommand(CLEAR_COMMAND); /* Clear display */
    1fc0:	81 e0       	ldi	r24, 0x01	; 1
    1fc2:	0e 94 3d 0b 	call	0x167a	; 0x167a <LCD_sendCommand>
}
    1fc6:	cf 91       	pop	r28
    1fc8:	df 91       	pop	r29
    1fca:	08 95       	ret

00001fcc <vfprintf>:
    1fcc:	a1 e1       	ldi	r26, 0x11	; 17
    1fce:	b0 e0       	ldi	r27, 0x00	; 0
    1fd0:	ec ee       	ldi	r30, 0xEC	; 236
    1fd2:	ff e0       	ldi	r31, 0x0F	; 15
    1fd4:	0c 94 6d 13 	jmp	0x26da	; 0x26da <__prologue_saves__>
    1fd8:	3c 01       	movw	r6, r24
    1fda:	7f 87       	std	Y+15, r23	; 0x0f
    1fdc:	6e 87       	std	Y+14, r22	; 0x0e
    1fde:	6a 01       	movw	r12, r20
    1fe0:	fc 01       	movw	r30, r24
    1fe2:	17 82       	std	Z+7, r1	; 0x07
    1fe4:	16 82       	std	Z+6, r1	; 0x06
    1fe6:	83 81       	ldd	r24, Z+3	; 0x03
    1fe8:	81 fd       	sbrc	r24, 1
    1fea:	03 c0       	rjmp	.+6      	; 0x1ff2 <vfprintf+0x26>
    1fec:	6f ef       	ldi	r22, 0xFF	; 255
    1fee:	7f ef       	ldi	r23, 0xFF	; 255
    1ff0:	6f c3       	rjmp	.+1758   	; 0x26d0 <vfprintf+0x704>
    1ff2:	9e 01       	movw	r18, r28
    1ff4:	2f 5f       	subi	r18, 0xFF	; 255
    1ff6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ff8:	39 8b       	std	Y+17, r19	; 0x11
    1ffa:	28 8b       	std	Y+16, r18	; 0x10
    1ffc:	f3 01       	movw	r30, r6
    1ffe:	23 81       	ldd	r18, Z+3	; 0x03
    2000:	ee 85       	ldd	r30, Y+14	; 0x0e
    2002:	ff 85       	ldd	r31, Y+15	; 0x0f
    2004:	23 fd       	sbrc	r18, 3
    2006:	85 91       	lpm	r24, Z+
    2008:	23 ff       	sbrs	r18, 3
    200a:	81 91       	ld	r24, Z+
    200c:	ff 87       	std	Y+15, r31	; 0x0f
    200e:	ee 87       	std	Y+14, r30	; 0x0e
    2010:	88 23       	and	r24, r24
    2012:	09 f4       	brne	.+2      	; 0x2016 <vfprintf+0x4a>
    2014:	5a c3       	rjmp	.+1716   	; 0x26ca <vfprintf+0x6fe>
    2016:	85 32       	cpi	r24, 0x25	; 37
    2018:	51 f4       	brne	.+20     	; 0x202e <vfprintf+0x62>
    201a:	ee 85       	ldd	r30, Y+14	; 0x0e
    201c:	ff 85       	ldd	r31, Y+15	; 0x0f
    201e:	23 fd       	sbrc	r18, 3
    2020:	85 91       	lpm	r24, Z+
    2022:	23 ff       	sbrs	r18, 3
    2024:	81 91       	ld	r24, Z+
    2026:	ff 87       	std	Y+15, r31	; 0x0f
    2028:	ee 87       	std	Y+14, r30	; 0x0e
    202a:	85 32       	cpi	r24, 0x25	; 37
    202c:	29 f4       	brne	.+10     	; 0x2038 <vfprintf+0x6c>
    202e:	90 e0       	ldi	r25, 0x00	; 0
    2030:	b3 01       	movw	r22, r6
    2032:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    2036:	e2 cf       	rjmp	.-60     	; 0x1ffc <vfprintf+0x30>
    2038:	98 2f       	mov	r25, r24
    203a:	10 e0       	ldi	r17, 0x00	; 0
    203c:	88 24       	eor	r8, r8
    203e:	99 24       	eor	r9, r9
    2040:	10 32       	cpi	r17, 0x20	; 32
    2042:	b0 f4       	brcc	.+44     	; 0x2070 <vfprintf+0xa4>
    2044:	9b 32       	cpi	r25, 0x2B	; 43
    2046:	69 f0       	breq	.+26     	; 0x2062 <vfprintf+0x96>
    2048:	9c 32       	cpi	r25, 0x2C	; 44
    204a:	28 f4       	brcc	.+10     	; 0x2056 <vfprintf+0x8a>
    204c:	90 32       	cpi	r25, 0x20	; 32
    204e:	51 f0       	breq	.+20     	; 0x2064 <vfprintf+0x98>
    2050:	93 32       	cpi	r25, 0x23	; 35
    2052:	71 f4       	brne	.+28     	; 0x2070 <vfprintf+0xa4>
    2054:	0b c0       	rjmp	.+22     	; 0x206c <vfprintf+0xa0>
    2056:	9d 32       	cpi	r25, 0x2D	; 45
    2058:	39 f0       	breq	.+14     	; 0x2068 <vfprintf+0x9c>
    205a:	90 33       	cpi	r25, 0x30	; 48
    205c:	49 f4       	brne	.+18     	; 0x2070 <vfprintf+0xa4>
    205e:	11 60       	ori	r17, 0x01	; 1
    2060:	28 c0       	rjmp	.+80     	; 0x20b2 <vfprintf+0xe6>
    2062:	12 60       	ori	r17, 0x02	; 2
    2064:	14 60       	ori	r17, 0x04	; 4
    2066:	25 c0       	rjmp	.+74     	; 0x20b2 <vfprintf+0xe6>
    2068:	18 60       	ori	r17, 0x08	; 8
    206a:	23 c0       	rjmp	.+70     	; 0x20b2 <vfprintf+0xe6>
    206c:	10 61       	ori	r17, 0x10	; 16
    206e:	21 c0       	rjmp	.+66     	; 0x20b2 <vfprintf+0xe6>
    2070:	17 fd       	sbrc	r17, 7
    2072:	2a c0       	rjmp	.+84     	; 0x20c8 <vfprintf+0xfc>
    2074:	89 2f       	mov	r24, r25
    2076:	80 53       	subi	r24, 0x30	; 48
    2078:	8a 30       	cpi	r24, 0x0A	; 10
    207a:	78 f4       	brcc	.+30     	; 0x209a <vfprintf+0xce>
    207c:	16 ff       	sbrs	r17, 6
    207e:	06 c0       	rjmp	.+12     	; 0x208c <vfprintf+0xc0>
    2080:	fa e0       	ldi	r31, 0x0A	; 10
    2082:	9f 9e       	mul	r9, r31
    2084:	90 2c       	mov	r9, r0
    2086:	11 24       	eor	r1, r1
    2088:	98 0e       	add	r9, r24
    208a:	13 c0       	rjmp	.+38     	; 0x20b2 <vfprintf+0xe6>
    208c:	3a e0       	ldi	r19, 0x0A	; 10
    208e:	83 9e       	mul	r8, r19
    2090:	80 2c       	mov	r8, r0
    2092:	11 24       	eor	r1, r1
    2094:	88 0e       	add	r8, r24
    2096:	10 62       	ori	r17, 0x20	; 32
    2098:	0c c0       	rjmp	.+24     	; 0x20b2 <vfprintf+0xe6>
    209a:	9e 32       	cpi	r25, 0x2E	; 46
    209c:	21 f4       	brne	.+8      	; 0x20a6 <vfprintf+0xda>
    209e:	16 fd       	sbrc	r17, 6
    20a0:	14 c3       	rjmp	.+1576   	; 0x26ca <vfprintf+0x6fe>
    20a2:	10 64       	ori	r17, 0x40	; 64
    20a4:	06 c0       	rjmp	.+12     	; 0x20b2 <vfprintf+0xe6>
    20a6:	9c 36       	cpi	r25, 0x6C	; 108
    20a8:	11 f4       	brne	.+4      	; 0x20ae <vfprintf+0xe2>
    20aa:	10 68       	ori	r17, 0x80	; 128
    20ac:	02 c0       	rjmp	.+4      	; 0x20b2 <vfprintf+0xe6>
    20ae:	98 36       	cpi	r25, 0x68	; 104
    20b0:	59 f4       	brne	.+22     	; 0x20c8 <vfprintf+0xfc>
    20b2:	ee 85       	ldd	r30, Y+14	; 0x0e
    20b4:	ff 85       	ldd	r31, Y+15	; 0x0f
    20b6:	23 fd       	sbrc	r18, 3
    20b8:	95 91       	lpm	r25, Z+
    20ba:	23 ff       	sbrs	r18, 3
    20bc:	91 91       	ld	r25, Z+
    20be:	ff 87       	std	Y+15, r31	; 0x0f
    20c0:	ee 87       	std	Y+14, r30	; 0x0e
    20c2:	99 23       	and	r25, r25
    20c4:	09 f0       	breq	.+2      	; 0x20c8 <vfprintf+0xfc>
    20c6:	bc cf       	rjmp	.-136    	; 0x2040 <vfprintf+0x74>
    20c8:	89 2f       	mov	r24, r25
    20ca:	85 54       	subi	r24, 0x45	; 69
    20cc:	83 30       	cpi	r24, 0x03	; 3
    20ce:	20 f4       	brcc	.+8      	; 0x20d8 <vfprintf+0x10c>
    20d0:	81 2f       	mov	r24, r17
    20d2:	80 61       	ori	r24, 0x10	; 16
    20d4:	90 5e       	subi	r25, 0xE0	; 224
    20d6:	07 c0       	rjmp	.+14     	; 0x20e6 <vfprintf+0x11a>
    20d8:	89 2f       	mov	r24, r25
    20da:	85 56       	subi	r24, 0x65	; 101
    20dc:	83 30       	cpi	r24, 0x03	; 3
    20de:	08 f0       	brcs	.+2      	; 0x20e2 <vfprintf+0x116>
    20e0:	9f c1       	rjmp	.+830    	; 0x2420 <vfprintf+0x454>
    20e2:	81 2f       	mov	r24, r17
    20e4:	8f 7e       	andi	r24, 0xEF	; 239
    20e6:	86 fd       	sbrc	r24, 6
    20e8:	02 c0       	rjmp	.+4      	; 0x20ee <vfprintf+0x122>
    20ea:	76 e0       	ldi	r23, 0x06	; 6
    20ec:	97 2e       	mov	r9, r23
    20ee:	6f e3       	ldi	r22, 0x3F	; 63
    20f0:	f6 2e       	mov	r15, r22
    20f2:	f8 22       	and	r15, r24
    20f4:	95 36       	cpi	r25, 0x65	; 101
    20f6:	19 f4       	brne	.+6      	; 0x20fe <vfprintf+0x132>
    20f8:	f0 e4       	ldi	r31, 0x40	; 64
    20fa:	ff 2a       	or	r15, r31
    20fc:	07 c0       	rjmp	.+14     	; 0x210c <vfprintf+0x140>
    20fe:	96 36       	cpi	r25, 0x66	; 102
    2100:	19 f4       	brne	.+6      	; 0x2108 <vfprintf+0x13c>
    2102:	20 e8       	ldi	r18, 0x80	; 128
    2104:	f2 2a       	or	r15, r18
    2106:	02 c0       	rjmp	.+4      	; 0x210c <vfprintf+0x140>
    2108:	91 10       	cpse	r9, r1
    210a:	9a 94       	dec	r9
    210c:	f7 fe       	sbrs	r15, 7
    210e:	0a c0       	rjmp	.+20     	; 0x2124 <vfprintf+0x158>
    2110:	3b e3       	ldi	r19, 0x3B	; 59
    2112:	39 15       	cp	r19, r9
    2114:	18 f4       	brcc	.+6      	; 0x211c <vfprintf+0x150>
    2116:	5c e3       	ldi	r21, 0x3C	; 60
    2118:	b5 2e       	mov	r11, r21
    211a:	02 c0       	rjmp	.+4      	; 0x2120 <vfprintf+0x154>
    211c:	b9 2c       	mov	r11, r9
    211e:	b3 94       	inc	r11
    2120:	27 e0       	ldi	r18, 0x07	; 7
    2122:	09 c0       	rjmp	.+18     	; 0x2136 <vfprintf+0x16a>
    2124:	47 e0       	ldi	r20, 0x07	; 7
    2126:	49 15       	cp	r20, r9
    2128:	20 f4       	brcc	.+8      	; 0x2132 <vfprintf+0x166>
    212a:	bb 24       	eor	r11, r11
    212c:	47 e0       	ldi	r20, 0x07	; 7
    212e:	94 2e       	mov	r9, r20
    2130:	f7 cf       	rjmp	.-18     	; 0x2120 <vfprintf+0x154>
    2132:	29 2d       	mov	r18, r9
    2134:	bb 24       	eor	r11, r11
    2136:	c6 01       	movw	r24, r12
    2138:	04 96       	adiw	r24, 0x04	; 4
    213a:	9d 87       	std	Y+13, r25	; 0x0d
    213c:	8c 87       	std	Y+12, r24	; 0x0c
    213e:	f6 01       	movw	r30, r12
    2140:	60 81       	ld	r22, Z
    2142:	71 81       	ldd	r23, Z+1	; 0x01
    2144:	82 81       	ldd	r24, Z+2	; 0x02
    2146:	93 81       	ldd	r25, Z+3	; 0x03
    2148:	ae 01       	movw	r20, r28
    214a:	4f 5f       	subi	r20, 0xFF	; 255
    214c:	5f 4f       	sbci	r21, 0xFF	; 255
    214e:	0b 2d       	mov	r16, r11
    2150:	0e 94 a4 13 	call	0x2748	; 0x2748 <__ftoa_engine>
    2154:	6c 01       	movw	r12, r24
    2156:	09 81       	ldd	r16, Y+1	; 0x01
    2158:	20 2e       	mov	r2, r16
    215a:	33 24       	eor	r3, r3
    215c:	00 ff       	sbrs	r16, 0
    215e:	04 c0       	rjmp	.+8      	; 0x2168 <vfprintf+0x19c>
    2160:	03 fd       	sbrc	r16, 3
    2162:	02 c0       	rjmp	.+4      	; 0x2168 <vfprintf+0x19c>
    2164:	1d e2       	ldi	r17, 0x2D	; 45
    2166:	09 c0       	rjmp	.+18     	; 0x217a <vfprintf+0x1ae>
    2168:	f1 fe       	sbrs	r15, 1
    216a:	02 c0       	rjmp	.+4      	; 0x2170 <vfprintf+0x1a4>
    216c:	1b e2       	ldi	r17, 0x2B	; 43
    216e:	05 c0       	rjmp	.+10     	; 0x217a <vfprintf+0x1ae>
    2170:	f2 fc       	sbrc	r15, 2
    2172:	02 c0       	rjmp	.+4      	; 0x2178 <vfprintf+0x1ac>
    2174:	10 e0       	ldi	r17, 0x00	; 0
    2176:	01 c0       	rjmp	.+2      	; 0x217a <vfprintf+0x1ae>
    2178:	10 e2       	ldi	r17, 0x20	; 32
    217a:	c1 01       	movw	r24, r2
    217c:	8c 70       	andi	r24, 0x0C	; 12
    217e:	90 70       	andi	r25, 0x00	; 0
    2180:	89 2b       	or	r24, r25
    2182:	b9 f1       	breq	.+110    	; 0x21f2 <vfprintf+0x226>
    2184:	11 23       	and	r17, r17
    2186:	11 f4       	brne	.+4      	; 0x218c <vfprintf+0x1c0>
    2188:	83 e0       	ldi	r24, 0x03	; 3
    218a:	01 c0       	rjmp	.+2      	; 0x218e <vfprintf+0x1c2>
    218c:	84 e0       	ldi	r24, 0x04	; 4
    218e:	88 15       	cp	r24, r8
    2190:	10 f0       	brcs	.+4      	; 0x2196 <vfprintf+0x1ca>
    2192:	88 24       	eor	r8, r8
    2194:	0a c0       	rjmp	.+20     	; 0x21aa <vfprintf+0x1de>
    2196:	88 1a       	sub	r8, r24
    2198:	f3 fc       	sbrc	r15, 3
    219a:	07 c0       	rjmp	.+14     	; 0x21aa <vfprintf+0x1de>
    219c:	80 e2       	ldi	r24, 0x20	; 32
    219e:	90 e0       	ldi	r25, 0x00	; 0
    21a0:	b3 01       	movw	r22, r6
    21a2:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    21a6:	8a 94       	dec	r8
    21a8:	c9 f7       	brne	.-14     	; 0x219c <vfprintf+0x1d0>
    21aa:	11 23       	and	r17, r17
    21ac:	29 f0       	breq	.+10     	; 0x21b8 <vfprintf+0x1ec>
    21ae:	81 2f       	mov	r24, r17
    21b0:	90 e0       	ldi	r25, 0x00	; 0
    21b2:	b3 01       	movw	r22, r6
    21b4:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    21b8:	23 fe       	sbrs	r2, 3
    21ba:	03 c0       	rjmp	.+6      	; 0x21c2 <vfprintf+0x1f6>
    21bc:	04 e5       	ldi	r16, 0x54	; 84
    21be:	10 e0       	ldi	r17, 0x00	; 0
    21c0:	0e c0       	rjmp	.+28     	; 0x21de <vfprintf+0x212>
    21c2:	08 e5       	ldi	r16, 0x58	; 88
    21c4:	10 e0       	ldi	r17, 0x00	; 0
    21c6:	0b c0       	rjmp	.+22     	; 0x21de <vfprintf+0x212>
    21c8:	e1 14       	cp	r14, r1
    21ca:	f1 04       	cpc	r15, r1
    21cc:	09 f0       	breq	.+2      	; 0x21d0 <vfprintf+0x204>
    21ce:	80 52       	subi	r24, 0x20	; 32
    21d0:	90 e0       	ldi	r25, 0x00	; 0
    21d2:	b3 01       	movw	r22, r6
    21d4:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    21d8:	0f 5f       	subi	r16, 0xFF	; 255
    21da:	1f 4f       	sbci	r17, 0xFF	; 255
    21dc:	05 c0       	rjmp	.+10     	; 0x21e8 <vfprintf+0x21c>
    21de:	ef 2c       	mov	r14, r15
    21e0:	ff 24       	eor	r15, r15
    21e2:	f0 e1       	ldi	r31, 0x10	; 16
    21e4:	ef 22       	and	r14, r31
    21e6:	ff 24       	eor	r15, r15
    21e8:	f8 01       	movw	r30, r16
    21ea:	84 91       	lpm	r24, Z+
    21ec:	88 23       	and	r24, r24
    21ee:	61 f7       	brne	.-40     	; 0x21c8 <vfprintf+0x1fc>
    21f0:	14 c1       	rjmp	.+552    	; 0x241a <vfprintf+0x44e>
    21f2:	f7 fe       	sbrs	r15, 7
    21f4:	12 c0       	rjmp	.+36     	; 0x221a <vfprintf+0x24e>
    21f6:	bc 0c       	add	r11, r12
    21f8:	24 fe       	sbrs	r2, 4
    21fa:	04 c0       	rjmp	.+8      	; 0x2204 <vfprintf+0x238>
    21fc:	8a 81       	ldd	r24, Y+2	; 0x02
    21fe:	81 33       	cpi	r24, 0x31	; 49
    2200:	09 f4       	brne	.+2      	; 0x2204 <vfprintf+0x238>
    2202:	ba 94       	dec	r11
    2204:	1b 14       	cp	r1, r11
    2206:	1c f0       	brlt	.+6      	; 0x220e <vfprintf+0x242>
    2208:	bb 24       	eor	r11, r11
    220a:	b3 94       	inc	r11
    220c:	2d c0       	rjmp	.+90     	; 0x2268 <vfprintf+0x29c>
    220e:	f8 e0       	ldi	r31, 0x08	; 8
    2210:	fb 15       	cp	r31, r11
    2212:	50 f5       	brcc	.+84     	; 0x2268 <vfprintf+0x29c>
    2214:	38 e0       	ldi	r19, 0x08	; 8
    2216:	b3 2e       	mov	r11, r19
    2218:	27 c0       	rjmp	.+78     	; 0x2268 <vfprintf+0x29c>
    221a:	f6 fc       	sbrc	r15, 6
    221c:	25 c0       	rjmp	.+74     	; 0x2268 <vfprintf+0x29c>
    221e:	89 2d       	mov	r24, r9
    2220:	90 e0       	ldi	r25, 0x00	; 0
    2222:	8c 15       	cp	r24, r12
    2224:	9d 05       	cpc	r25, r13
    2226:	4c f0       	brlt	.+18     	; 0x223a <vfprintf+0x26e>
    2228:	2c ef       	ldi	r18, 0xFC	; 252
    222a:	c2 16       	cp	r12, r18
    222c:	2f ef       	ldi	r18, 0xFF	; 255
    222e:	d2 06       	cpc	r13, r18
    2230:	24 f0       	brlt	.+8      	; 0x223a <vfprintf+0x26e>
    2232:	30 e8       	ldi	r19, 0x80	; 128
    2234:	f3 2a       	or	r15, r19
    2236:	01 c0       	rjmp	.+2      	; 0x223a <vfprintf+0x26e>
    2238:	9a 94       	dec	r9
    223a:	99 20       	and	r9, r9
    223c:	49 f0       	breq	.+18     	; 0x2250 <vfprintf+0x284>
    223e:	e2 e0       	ldi	r30, 0x02	; 2
    2240:	f0 e0       	ldi	r31, 0x00	; 0
    2242:	ec 0f       	add	r30, r28
    2244:	fd 1f       	adc	r31, r29
    2246:	e9 0d       	add	r30, r9
    2248:	f1 1d       	adc	r31, r1
    224a:	80 81       	ld	r24, Z
    224c:	80 33       	cpi	r24, 0x30	; 48
    224e:	a1 f3       	breq	.-24     	; 0x2238 <vfprintf+0x26c>
    2250:	f7 fe       	sbrs	r15, 7
    2252:	0a c0       	rjmp	.+20     	; 0x2268 <vfprintf+0x29c>
    2254:	b9 2c       	mov	r11, r9
    2256:	b3 94       	inc	r11
    2258:	89 2d       	mov	r24, r9
    225a:	90 e0       	ldi	r25, 0x00	; 0
    225c:	c8 16       	cp	r12, r24
    225e:	d9 06       	cpc	r13, r25
    2260:	14 f0       	brlt	.+4      	; 0x2266 <vfprintf+0x29a>
    2262:	99 24       	eor	r9, r9
    2264:	01 c0       	rjmp	.+2      	; 0x2268 <vfprintf+0x29c>
    2266:	9c 18       	sub	r9, r12
    2268:	f7 fc       	sbrc	r15, 7
    226a:	03 c0       	rjmp	.+6      	; 0x2272 <vfprintf+0x2a6>
    226c:	25 e0       	ldi	r18, 0x05	; 5
    226e:	30 e0       	ldi	r19, 0x00	; 0
    2270:	09 c0       	rjmp	.+18     	; 0x2284 <vfprintf+0x2b8>
    2272:	1c 14       	cp	r1, r12
    2274:	1d 04       	cpc	r1, r13
    2276:	1c f0       	brlt	.+6      	; 0x227e <vfprintf+0x2b2>
    2278:	21 e0       	ldi	r18, 0x01	; 1
    227a:	30 e0       	ldi	r19, 0x00	; 0
    227c:	03 c0       	rjmp	.+6      	; 0x2284 <vfprintf+0x2b8>
    227e:	96 01       	movw	r18, r12
    2280:	2f 5f       	subi	r18, 0xFF	; 255
    2282:	3f 4f       	sbci	r19, 0xFF	; 255
    2284:	11 23       	and	r17, r17
    2286:	11 f0       	breq	.+4      	; 0x228c <vfprintf+0x2c0>
    2288:	2f 5f       	subi	r18, 0xFF	; 255
    228a:	3f 4f       	sbci	r19, 0xFF	; 255
    228c:	99 20       	and	r9, r9
    228e:	29 f0       	breq	.+10     	; 0x229a <vfprintf+0x2ce>
    2290:	89 2d       	mov	r24, r9
    2292:	90 e0       	ldi	r25, 0x00	; 0
    2294:	01 96       	adiw	r24, 0x01	; 1
    2296:	28 0f       	add	r18, r24
    2298:	39 1f       	adc	r19, r25
    229a:	88 2d       	mov	r24, r8
    229c:	90 e0       	ldi	r25, 0x00	; 0
    229e:	28 17       	cp	r18, r24
    22a0:	39 07       	cpc	r19, r25
    22a2:	14 f0       	brlt	.+4      	; 0x22a8 <vfprintf+0x2dc>
    22a4:	88 24       	eor	r8, r8
    22a6:	01 c0       	rjmp	.+2      	; 0x22aa <vfprintf+0x2de>
    22a8:	82 1a       	sub	r8, r18
    22aa:	4f 2c       	mov	r4, r15
    22ac:	55 24       	eor	r5, r5
    22ae:	c2 01       	movw	r24, r4
    22b0:	89 70       	andi	r24, 0x09	; 9
    22b2:	90 70       	andi	r25, 0x00	; 0
    22b4:	89 2b       	or	r24, r25
    22b6:	39 f0       	breq	.+14     	; 0x22c6 <vfprintf+0x2fa>
    22b8:	08 c0       	rjmp	.+16     	; 0x22ca <vfprintf+0x2fe>
    22ba:	80 e2       	ldi	r24, 0x20	; 32
    22bc:	90 e0       	ldi	r25, 0x00	; 0
    22be:	b3 01       	movw	r22, r6
    22c0:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    22c4:	8a 94       	dec	r8
    22c6:	88 20       	and	r8, r8
    22c8:	c1 f7       	brne	.-16     	; 0x22ba <vfprintf+0x2ee>
    22ca:	11 23       	and	r17, r17
    22cc:	29 f0       	breq	.+10     	; 0x22d8 <vfprintf+0x30c>
    22ce:	81 2f       	mov	r24, r17
    22d0:	90 e0       	ldi	r25, 0x00	; 0
    22d2:	b3 01       	movw	r22, r6
    22d4:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    22d8:	43 fe       	sbrs	r4, 3
    22da:	07 c0       	rjmp	.+14     	; 0x22ea <vfprintf+0x31e>
    22dc:	08 c0       	rjmp	.+16     	; 0x22ee <vfprintf+0x322>
    22de:	80 e3       	ldi	r24, 0x30	; 48
    22e0:	90 e0       	ldi	r25, 0x00	; 0
    22e2:	b3 01       	movw	r22, r6
    22e4:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    22e8:	8a 94       	dec	r8
    22ea:	88 20       	and	r8, r8
    22ec:	c1 f7       	brne	.-16     	; 0x22de <vfprintf+0x312>
    22ee:	f7 fe       	sbrs	r15, 7
    22f0:	46 c0       	rjmp	.+140    	; 0x237e <vfprintf+0x3b2>
    22f2:	86 01       	movw	r16, r12
    22f4:	d7 fe       	sbrs	r13, 7
    22f6:	02 c0       	rjmp	.+4      	; 0x22fc <vfprintf+0x330>
    22f8:	00 e0       	ldi	r16, 0x00	; 0
    22fa:	10 e0       	ldi	r17, 0x00	; 0
    22fc:	76 01       	movw	r14, r12
    22fe:	08 94       	sec
    2300:	e1 1c       	adc	r14, r1
    2302:	f1 1c       	adc	r15, r1
    2304:	e0 1a       	sub	r14, r16
    2306:	f1 0a       	sbc	r15, r17
    2308:	41 e0       	ldi	r20, 0x01	; 1
    230a:	50 e0       	ldi	r21, 0x00	; 0
    230c:	4c 0f       	add	r20, r28
    230e:	5d 1f       	adc	r21, r29
    2310:	e4 0e       	add	r14, r20
    2312:	f5 1e       	adc	r15, r21
    2314:	26 01       	movw	r4, r12
    2316:	4b 18       	sub	r4, r11
    2318:	51 08       	sbc	r5, r1
    231a:	89 2d       	mov	r24, r9
    231c:	90 e0       	ldi	r25, 0x00	; 0
    231e:	aa 24       	eor	r10, r10
    2320:	bb 24       	eor	r11, r11
    2322:	a8 1a       	sub	r10, r24
    2324:	b9 0a       	sbc	r11, r25
    2326:	5f ef       	ldi	r21, 0xFF	; 255
    2328:	0f 3f       	cpi	r16, 0xFF	; 255
    232a:	15 07       	cpc	r17, r21
    232c:	29 f4       	brne	.+10     	; 0x2338 <vfprintf+0x36c>
    232e:	8e e2       	ldi	r24, 0x2E	; 46
    2330:	90 e0       	ldi	r25, 0x00	; 0
    2332:	b3 01       	movw	r22, r6
    2334:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    2338:	c0 16       	cp	r12, r16
    233a:	d1 06       	cpc	r13, r17
    233c:	34 f0       	brlt	.+12     	; 0x234a <vfprintf+0x37e>
    233e:	40 16       	cp	r4, r16
    2340:	51 06       	cpc	r5, r17
    2342:	1c f4       	brge	.+6      	; 0x234a <vfprintf+0x37e>
    2344:	f7 01       	movw	r30, r14
    2346:	80 81       	ld	r24, Z
    2348:	01 c0       	rjmp	.+2      	; 0x234c <vfprintf+0x380>
    234a:	80 e3       	ldi	r24, 0x30	; 48
    234c:	01 50       	subi	r16, 0x01	; 1
    234e:	10 40       	sbci	r17, 0x00	; 0
    2350:	08 94       	sec
    2352:	e1 1c       	adc	r14, r1
    2354:	f1 1c       	adc	r15, r1
    2356:	0a 15       	cp	r16, r10
    2358:	1b 05       	cpc	r17, r11
    235a:	2c f0       	brlt	.+10     	; 0x2366 <vfprintf+0x39a>
    235c:	90 e0       	ldi	r25, 0x00	; 0
    235e:	b3 01       	movw	r22, r6
    2360:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    2364:	e0 cf       	rjmp	.-64     	; 0x2326 <vfprintf+0x35a>
    2366:	0c 15       	cp	r16, r12
    2368:	1d 05       	cpc	r17, r13
    236a:	39 f4       	brne	.+14     	; 0x237a <vfprintf+0x3ae>
    236c:	9a 81       	ldd	r25, Y+2	; 0x02
    236e:	96 33       	cpi	r25, 0x36	; 54
    2370:	18 f4       	brcc	.+6      	; 0x2378 <vfprintf+0x3ac>
    2372:	95 33       	cpi	r25, 0x35	; 53
    2374:	11 f4       	brne	.+4      	; 0x237a <vfprintf+0x3ae>
    2376:	24 fe       	sbrs	r2, 4
    2378:	81 e3       	ldi	r24, 0x31	; 49
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	4b c0       	rjmp	.+150    	; 0x2414 <vfprintf+0x448>
    237e:	8a 81       	ldd	r24, Y+2	; 0x02
    2380:	81 33       	cpi	r24, 0x31	; 49
    2382:	09 f0       	breq	.+2      	; 0x2386 <vfprintf+0x3ba>
    2384:	0f 7e       	andi	r16, 0xEF	; 239
    2386:	90 e0       	ldi	r25, 0x00	; 0
    2388:	b3 01       	movw	r22, r6
    238a:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    238e:	99 20       	and	r9, r9
    2390:	a1 f0       	breq	.+40     	; 0x23ba <vfprintf+0x3ee>
    2392:	8e e2       	ldi	r24, 0x2E	; 46
    2394:	90 e0       	ldi	r25, 0x00	; 0
    2396:	b3 01       	movw	r22, r6
    2398:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    239c:	12 e0       	ldi	r17, 0x02	; 2
    239e:	e1 e0       	ldi	r30, 0x01	; 1
    23a0:	f0 e0       	ldi	r31, 0x00	; 0
    23a2:	ec 0f       	add	r30, r28
    23a4:	fd 1f       	adc	r31, r29
    23a6:	e1 0f       	add	r30, r17
    23a8:	f1 1d       	adc	r31, r1
    23aa:	1f 5f       	subi	r17, 0xFF	; 255
    23ac:	80 81       	ld	r24, Z
    23ae:	90 e0       	ldi	r25, 0x00	; 0
    23b0:	b3 01       	movw	r22, r6
    23b2:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    23b6:	9a 94       	dec	r9
    23b8:	91 f7       	brne	.-28     	; 0x239e <vfprintf+0x3d2>
    23ba:	44 fc       	sbrc	r4, 4
    23bc:	03 c0       	rjmp	.+6      	; 0x23c4 <vfprintf+0x3f8>
    23be:	85 e6       	ldi	r24, 0x65	; 101
    23c0:	90 e0       	ldi	r25, 0x00	; 0
    23c2:	02 c0       	rjmp	.+4      	; 0x23c8 <vfprintf+0x3fc>
    23c4:	85 e4       	ldi	r24, 0x45	; 69
    23c6:	90 e0       	ldi	r25, 0x00	; 0
    23c8:	b3 01       	movw	r22, r6
    23ca:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    23ce:	d7 fc       	sbrc	r13, 7
    23d0:	05 c0       	rjmp	.+10     	; 0x23dc <vfprintf+0x410>
    23d2:	c1 14       	cp	r12, r1
    23d4:	d1 04       	cpc	r13, r1
    23d6:	41 f4       	brne	.+16     	; 0x23e8 <vfprintf+0x41c>
    23d8:	04 ff       	sbrs	r16, 4
    23da:	06 c0       	rjmp	.+12     	; 0x23e8 <vfprintf+0x41c>
    23dc:	d0 94       	com	r13
    23de:	c1 94       	neg	r12
    23e0:	d1 08       	sbc	r13, r1
    23e2:	d3 94       	inc	r13
    23e4:	8d e2       	ldi	r24, 0x2D	; 45
    23e6:	01 c0       	rjmp	.+2      	; 0x23ea <vfprintf+0x41e>
    23e8:	8b e2       	ldi	r24, 0x2B	; 43
    23ea:	90 e0       	ldi	r25, 0x00	; 0
    23ec:	b3 01       	movw	r22, r6
    23ee:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    23f2:	80 e3       	ldi	r24, 0x30	; 48
    23f4:	05 c0       	rjmp	.+10     	; 0x2400 <vfprintf+0x434>
    23f6:	8f 5f       	subi	r24, 0xFF	; 255
    23f8:	26 ef       	ldi	r18, 0xF6	; 246
    23fa:	3f ef       	ldi	r19, 0xFF	; 255
    23fc:	c2 0e       	add	r12, r18
    23fe:	d3 1e       	adc	r13, r19
    2400:	3a e0       	ldi	r19, 0x0A	; 10
    2402:	c3 16       	cp	r12, r19
    2404:	d1 04       	cpc	r13, r1
    2406:	bc f7       	brge	.-18     	; 0x23f6 <vfprintf+0x42a>
    2408:	90 e0       	ldi	r25, 0x00	; 0
    240a:	b3 01       	movw	r22, r6
    240c:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    2410:	c6 01       	movw	r24, r12
    2412:	c0 96       	adiw	r24, 0x30	; 48
    2414:	b3 01       	movw	r22, r6
    2416:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    241a:	cc 84       	ldd	r12, Y+12	; 0x0c
    241c:	dd 84       	ldd	r13, Y+13	; 0x0d
    241e:	52 c1       	rjmp	.+676    	; 0x26c4 <vfprintf+0x6f8>
    2420:	93 36       	cpi	r25, 0x63	; 99
    2422:	31 f0       	breq	.+12     	; 0x2430 <vfprintf+0x464>
    2424:	93 37       	cpi	r25, 0x73	; 115
    2426:	99 f0       	breq	.+38     	; 0x244e <vfprintf+0x482>
    2428:	93 35       	cpi	r25, 0x53	; 83
    242a:	09 f0       	breq	.+2      	; 0x242e <vfprintf+0x462>
    242c:	59 c0       	rjmp	.+178    	; 0x24e0 <vfprintf+0x514>
    242e:	23 c0       	rjmp	.+70     	; 0x2476 <vfprintf+0x4aa>
    2430:	f6 01       	movw	r30, r12
    2432:	80 81       	ld	r24, Z
    2434:	89 83       	std	Y+1, r24	; 0x01
    2436:	5e 01       	movw	r10, r28
    2438:	08 94       	sec
    243a:	a1 1c       	adc	r10, r1
    243c:	b1 1c       	adc	r11, r1
    243e:	22 e0       	ldi	r18, 0x02	; 2
    2440:	30 e0       	ldi	r19, 0x00	; 0
    2442:	c2 0e       	add	r12, r18
    2444:	d3 1e       	adc	r13, r19
    2446:	21 e0       	ldi	r18, 0x01	; 1
    2448:	e2 2e       	mov	r14, r18
    244a:	f1 2c       	mov	r15, r1
    244c:	12 c0       	rjmp	.+36     	; 0x2472 <vfprintf+0x4a6>
    244e:	f6 01       	movw	r30, r12
    2450:	a0 80       	ld	r10, Z
    2452:	b1 80       	ldd	r11, Z+1	; 0x01
    2454:	16 fd       	sbrc	r17, 6
    2456:	03 c0       	rjmp	.+6      	; 0x245e <vfprintf+0x492>
    2458:	6f ef       	ldi	r22, 0xFF	; 255
    245a:	7f ef       	ldi	r23, 0xFF	; 255
    245c:	02 c0       	rjmp	.+4      	; 0x2462 <vfprintf+0x496>
    245e:	69 2d       	mov	r22, r9
    2460:	70 e0       	ldi	r23, 0x00	; 0
    2462:	22 e0       	ldi	r18, 0x02	; 2
    2464:	30 e0       	ldi	r19, 0x00	; 0
    2466:	c2 0e       	add	r12, r18
    2468:	d3 1e       	adc	r13, r19
    246a:	c5 01       	movw	r24, r10
    246c:	0e 94 87 14 	call	0x290e	; 0x290e <strnlen>
    2470:	7c 01       	movw	r14, r24
    2472:	1f 77       	andi	r17, 0x7F	; 127
    2474:	13 c0       	rjmp	.+38     	; 0x249c <vfprintf+0x4d0>
    2476:	f6 01       	movw	r30, r12
    2478:	a0 80       	ld	r10, Z
    247a:	b1 80       	ldd	r11, Z+1	; 0x01
    247c:	16 fd       	sbrc	r17, 6
    247e:	03 c0       	rjmp	.+6      	; 0x2486 <vfprintf+0x4ba>
    2480:	6f ef       	ldi	r22, 0xFF	; 255
    2482:	7f ef       	ldi	r23, 0xFF	; 255
    2484:	02 c0       	rjmp	.+4      	; 0x248a <vfprintf+0x4be>
    2486:	69 2d       	mov	r22, r9
    2488:	70 e0       	ldi	r23, 0x00	; 0
    248a:	22 e0       	ldi	r18, 0x02	; 2
    248c:	30 e0       	ldi	r19, 0x00	; 0
    248e:	c2 0e       	add	r12, r18
    2490:	d3 1e       	adc	r13, r19
    2492:	c5 01       	movw	r24, r10
    2494:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <strnlen_P>
    2498:	7c 01       	movw	r14, r24
    249a:	10 68       	ori	r17, 0x80	; 128
    249c:	13 ff       	sbrs	r17, 3
    249e:	07 c0       	rjmp	.+14     	; 0x24ae <vfprintf+0x4e2>
    24a0:	1b c0       	rjmp	.+54     	; 0x24d8 <vfprintf+0x50c>
    24a2:	80 e2       	ldi	r24, 0x20	; 32
    24a4:	90 e0       	ldi	r25, 0x00	; 0
    24a6:	b3 01       	movw	r22, r6
    24a8:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    24ac:	8a 94       	dec	r8
    24ae:	88 2d       	mov	r24, r8
    24b0:	90 e0       	ldi	r25, 0x00	; 0
    24b2:	e8 16       	cp	r14, r24
    24b4:	f9 06       	cpc	r15, r25
    24b6:	a8 f3       	brcs	.-22     	; 0x24a2 <vfprintf+0x4d6>
    24b8:	0f c0       	rjmp	.+30     	; 0x24d8 <vfprintf+0x50c>
    24ba:	f5 01       	movw	r30, r10
    24bc:	17 fd       	sbrc	r17, 7
    24be:	85 91       	lpm	r24, Z+
    24c0:	17 ff       	sbrs	r17, 7
    24c2:	81 91       	ld	r24, Z+
    24c4:	5f 01       	movw	r10, r30
    24c6:	90 e0       	ldi	r25, 0x00	; 0
    24c8:	b3 01       	movw	r22, r6
    24ca:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    24ce:	81 10       	cpse	r8, r1
    24d0:	8a 94       	dec	r8
    24d2:	08 94       	sec
    24d4:	e1 08       	sbc	r14, r1
    24d6:	f1 08       	sbc	r15, r1
    24d8:	e1 14       	cp	r14, r1
    24da:	f1 04       	cpc	r15, r1
    24dc:	71 f7       	brne	.-36     	; 0x24ba <vfprintf+0x4ee>
    24de:	f2 c0       	rjmp	.+484    	; 0x26c4 <vfprintf+0x6f8>
    24e0:	94 36       	cpi	r25, 0x64	; 100
    24e2:	11 f0       	breq	.+4      	; 0x24e8 <vfprintf+0x51c>
    24e4:	99 36       	cpi	r25, 0x69	; 105
    24e6:	89 f5       	brne	.+98     	; 0x254a <vfprintf+0x57e>
    24e8:	17 ff       	sbrs	r17, 7
    24ea:	08 c0       	rjmp	.+16     	; 0x24fc <vfprintf+0x530>
    24ec:	f6 01       	movw	r30, r12
    24ee:	20 81       	ld	r18, Z
    24f0:	31 81       	ldd	r19, Z+1	; 0x01
    24f2:	42 81       	ldd	r20, Z+2	; 0x02
    24f4:	53 81       	ldd	r21, Z+3	; 0x03
    24f6:	84 e0       	ldi	r24, 0x04	; 4
    24f8:	90 e0       	ldi	r25, 0x00	; 0
    24fa:	0a c0       	rjmp	.+20     	; 0x2510 <vfprintf+0x544>
    24fc:	f6 01       	movw	r30, r12
    24fe:	80 81       	ld	r24, Z
    2500:	91 81       	ldd	r25, Z+1	; 0x01
    2502:	9c 01       	movw	r18, r24
    2504:	44 27       	eor	r20, r20
    2506:	37 fd       	sbrc	r19, 7
    2508:	40 95       	com	r20
    250a:	54 2f       	mov	r21, r20
    250c:	82 e0       	ldi	r24, 0x02	; 2
    250e:	90 e0       	ldi	r25, 0x00	; 0
    2510:	c8 0e       	add	r12, r24
    2512:	d9 1e       	adc	r13, r25
    2514:	9f e6       	ldi	r25, 0x6F	; 111
    2516:	f9 2e       	mov	r15, r25
    2518:	f1 22       	and	r15, r17
    251a:	57 ff       	sbrs	r21, 7
    251c:	09 c0       	rjmp	.+18     	; 0x2530 <vfprintf+0x564>
    251e:	50 95       	com	r21
    2520:	40 95       	com	r20
    2522:	30 95       	com	r19
    2524:	21 95       	neg	r18
    2526:	3f 4f       	sbci	r19, 0xFF	; 255
    2528:	4f 4f       	sbci	r20, 0xFF	; 255
    252a:	5f 4f       	sbci	r21, 0xFF	; 255
    252c:	90 e8       	ldi	r25, 0x80	; 128
    252e:	f9 2a       	or	r15, r25
    2530:	ca 01       	movw	r24, r20
    2532:	b9 01       	movw	r22, r18
    2534:	ae 01       	movw	r20, r28
    2536:	4f 5f       	subi	r20, 0xFF	; 255
    2538:	5f 4f       	sbci	r21, 0xFF	; 255
    253a:	2a e0       	ldi	r18, 0x0A	; 10
    253c:	30 e0       	ldi	r19, 0x00	; 0
    253e:	0e 94 03 15 	call	0x2a06	; 0x2a06 <__ultoa_invert>
    2542:	e8 2e       	mov	r14, r24
    2544:	e8 89       	ldd	r30, Y+16	; 0x10
    2546:	ee 1a       	sub	r14, r30
    2548:	41 c0       	rjmp	.+130    	; 0x25cc <vfprintf+0x600>
    254a:	95 37       	cpi	r25, 0x75	; 117
    254c:	21 f4       	brne	.+8      	; 0x2556 <vfprintf+0x58a>
    254e:	1f 7e       	andi	r17, 0xEF	; 239
    2550:	2a e0       	ldi	r18, 0x0A	; 10
    2552:	30 e0       	ldi	r19, 0x00	; 0
    2554:	1c c0       	rjmp	.+56     	; 0x258e <vfprintf+0x5c2>
    2556:	19 7f       	andi	r17, 0xF9	; 249
    2558:	9f 36       	cpi	r25, 0x6F	; 111
    255a:	61 f0       	breq	.+24     	; 0x2574 <vfprintf+0x5a8>
    255c:	90 37       	cpi	r25, 0x70	; 112
    255e:	20 f4       	brcc	.+8      	; 0x2568 <vfprintf+0x59c>
    2560:	98 35       	cpi	r25, 0x58	; 88
    2562:	09 f0       	breq	.+2      	; 0x2566 <vfprintf+0x59a>
    2564:	b2 c0       	rjmp	.+356    	; 0x26ca <vfprintf+0x6fe>
    2566:	0f c0       	rjmp	.+30     	; 0x2586 <vfprintf+0x5ba>
    2568:	90 37       	cpi	r25, 0x70	; 112
    256a:	39 f0       	breq	.+14     	; 0x257a <vfprintf+0x5ae>
    256c:	98 37       	cpi	r25, 0x78	; 120
    256e:	09 f0       	breq	.+2      	; 0x2572 <vfprintf+0x5a6>
    2570:	ac c0       	rjmp	.+344    	; 0x26ca <vfprintf+0x6fe>
    2572:	04 c0       	rjmp	.+8      	; 0x257c <vfprintf+0x5b0>
    2574:	28 e0       	ldi	r18, 0x08	; 8
    2576:	30 e0       	ldi	r19, 0x00	; 0
    2578:	0a c0       	rjmp	.+20     	; 0x258e <vfprintf+0x5c2>
    257a:	10 61       	ori	r17, 0x10	; 16
    257c:	14 fd       	sbrc	r17, 4
    257e:	14 60       	ori	r17, 0x04	; 4
    2580:	20 e1       	ldi	r18, 0x10	; 16
    2582:	30 e0       	ldi	r19, 0x00	; 0
    2584:	04 c0       	rjmp	.+8      	; 0x258e <vfprintf+0x5c2>
    2586:	14 fd       	sbrc	r17, 4
    2588:	16 60       	ori	r17, 0x06	; 6
    258a:	20 e1       	ldi	r18, 0x10	; 16
    258c:	32 e0       	ldi	r19, 0x02	; 2
    258e:	17 ff       	sbrs	r17, 7
    2590:	08 c0       	rjmp	.+16     	; 0x25a2 <vfprintf+0x5d6>
    2592:	f6 01       	movw	r30, r12
    2594:	60 81       	ld	r22, Z
    2596:	71 81       	ldd	r23, Z+1	; 0x01
    2598:	82 81       	ldd	r24, Z+2	; 0x02
    259a:	93 81       	ldd	r25, Z+3	; 0x03
    259c:	44 e0       	ldi	r20, 0x04	; 4
    259e:	50 e0       	ldi	r21, 0x00	; 0
    25a0:	08 c0       	rjmp	.+16     	; 0x25b2 <vfprintf+0x5e6>
    25a2:	f6 01       	movw	r30, r12
    25a4:	80 81       	ld	r24, Z
    25a6:	91 81       	ldd	r25, Z+1	; 0x01
    25a8:	bc 01       	movw	r22, r24
    25aa:	80 e0       	ldi	r24, 0x00	; 0
    25ac:	90 e0       	ldi	r25, 0x00	; 0
    25ae:	42 e0       	ldi	r20, 0x02	; 2
    25b0:	50 e0       	ldi	r21, 0x00	; 0
    25b2:	c4 0e       	add	r12, r20
    25b4:	d5 1e       	adc	r13, r21
    25b6:	ae 01       	movw	r20, r28
    25b8:	4f 5f       	subi	r20, 0xFF	; 255
    25ba:	5f 4f       	sbci	r21, 0xFF	; 255
    25bc:	0e 94 03 15 	call	0x2a06	; 0x2a06 <__ultoa_invert>
    25c0:	e8 2e       	mov	r14, r24
    25c2:	58 89       	ldd	r21, Y+16	; 0x10
    25c4:	e5 1a       	sub	r14, r21
    25c6:	8f e7       	ldi	r24, 0x7F	; 127
    25c8:	f8 2e       	mov	r15, r24
    25ca:	f1 22       	and	r15, r17
    25cc:	f6 fe       	sbrs	r15, 6
    25ce:	0b c0       	rjmp	.+22     	; 0x25e6 <vfprintf+0x61a>
    25d0:	8e ef       	ldi	r24, 0xFE	; 254
    25d2:	f8 22       	and	r15, r24
    25d4:	e9 14       	cp	r14, r9
    25d6:	38 f4       	brcc	.+14     	; 0x25e6 <vfprintf+0x61a>
    25d8:	f4 fe       	sbrs	r15, 4
    25da:	07 c0       	rjmp	.+14     	; 0x25ea <vfprintf+0x61e>
    25dc:	f2 fc       	sbrc	r15, 2
    25de:	05 c0       	rjmp	.+10     	; 0x25ea <vfprintf+0x61e>
    25e0:	9f ee       	ldi	r25, 0xEF	; 239
    25e2:	f9 22       	and	r15, r25
    25e4:	02 c0       	rjmp	.+4      	; 0x25ea <vfprintf+0x61e>
    25e6:	1e 2d       	mov	r17, r14
    25e8:	01 c0       	rjmp	.+2      	; 0x25ec <vfprintf+0x620>
    25ea:	19 2d       	mov	r17, r9
    25ec:	f4 fe       	sbrs	r15, 4
    25ee:	0d c0       	rjmp	.+26     	; 0x260a <vfprintf+0x63e>
    25f0:	fe 01       	movw	r30, r28
    25f2:	ee 0d       	add	r30, r14
    25f4:	f1 1d       	adc	r31, r1
    25f6:	80 81       	ld	r24, Z
    25f8:	80 33       	cpi	r24, 0x30	; 48
    25fa:	19 f4       	brne	.+6      	; 0x2602 <vfprintf+0x636>
    25fc:	e9 ee       	ldi	r30, 0xE9	; 233
    25fe:	fe 22       	and	r15, r30
    2600:	08 c0       	rjmp	.+16     	; 0x2612 <vfprintf+0x646>
    2602:	1f 5f       	subi	r17, 0xFF	; 255
    2604:	f2 fe       	sbrs	r15, 2
    2606:	05 c0       	rjmp	.+10     	; 0x2612 <vfprintf+0x646>
    2608:	03 c0       	rjmp	.+6      	; 0x2610 <vfprintf+0x644>
    260a:	8f 2d       	mov	r24, r15
    260c:	86 78       	andi	r24, 0x86	; 134
    260e:	09 f0       	breq	.+2      	; 0x2612 <vfprintf+0x646>
    2610:	1f 5f       	subi	r17, 0xFF	; 255
    2612:	0f 2d       	mov	r16, r15
    2614:	f3 fc       	sbrc	r15, 3
    2616:	14 c0       	rjmp	.+40     	; 0x2640 <vfprintf+0x674>
    2618:	f0 fe       	sbrs	r15, 0
    261a:	0f c0       	rjmp	.+30     	; 0x263a <vfprintf+0x66e>
    261c:	18 15       	cp	r17, r8
    261e:	10 f0       	brcs	.+4      	; 0x2624 <vfprintf+0x658>
    2620:	9e 2c       	mov	r9, r14
    2622:	0b c0       	rjmp	.+22     	; 0x263a <vfprintf+0x66e>
    2624:	9e 2c       	mov	r9, r14
    2626:	98 0c       	add	r9, r8
    2628:	91 1a       	sub	r9, r17
    262a:	18 2d       	mov	r17, r8
    262c:	06 c0       	rjmp	.+12     	; 0x263a <vfprintf+0x66e>
    262e:	80 e2       	ldi	r24, 0x20	; 32
    2630:	90 e0       	ldi	r25, 0x00	; 0
    2632:	b3 01       	movw	r22, r6
    2634:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    2638:	1f 5f       	subi	r17, 0xFF	; 255
    263a:	18 15       	cp	r17, r8
    263c:	c0 f3       	brcs	.-16     	; 0x262e <vfprintf+0x662>
    263e:	04 c0       	rjmp	.+8      	; 0x2648 <vfprintf+0x67c>
    2640:	18 15       	cp	r17, r8
    2642:	10 f4       	brcc	.+4      	; 0x2648 <vfprintf+0x67c>
    2644:	81 1a       	sub	r8, r17
    2646:	01 c0       	rjmp	.+2      	; 0x264a <vfprintf+0x67e>
    2648:	88 24       	eor	r8, r8
    264a:	04 ff       	sbrs	r16, 4
    264c:	0f c0       	rjmp	.+30     	; 0x266c <vfprintf+0x6a0>
    264e:	80 e3       	ldi	r24, 0x30	; 48
    2650:	90 e0       	ldi	r25, 0x00	; 0
    2652:	b3 01       	movw	r22, r6
    2654:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    2658:	02 ff       	sbrs	r16, 2
    265a:	1d c0       	rjmp	.+58     	; 0x2696 <vfprintf+0x6ca>
    265c:	01 fd       	sbrc	r16, 1
    265e:	03 c0       	rjmp	.+6      	; 0x2666 <vfprintf+0x69a>
    2660:	88 e7       	ldi	r24, 0x78	; 120
    2662:	90 e0       	ldi	r25, 0x00	; 0
    2664:	0e c0       	rjmp	.+28     	; 0x2682 <vfprintf+0x6b6>
    2666:	88 e5       	ldi	r24, 0x58	; 88
    2668:	90 e0       	ldi	r25, 0x00	; 0
    266a:	0b c0       	rjmp	.+22     	; 0x2682 <vfprintf+0x6b6>
    266c:	80 2f       	mov	r24, r16
    266e:	86 78       	andi	r24, 0x86	; 134
    2670:	91 f0       	breq	.+36     	; 0x2696 <vfprintf+0x6ca>
    2672:	01 ff       	sbrs	r16, 1
    2674:	02 c0       	rjmp	.+4      	; 0x267a <vfprintf+0x6ae>
    2676:	8b e2       	ldi	r24, 0x2B	; 43
    2678:	01 c0       	rjmp	.+2      	; 0x267c <vfprintf+0x6b0>
    267a:	80 e2       	ldi	r24, 0x20	; 32
    267c:	f7 fc       	sbrc	r15, 7
    267e:	8d e2       	ldi	r24, 0x2D	; 45
    2680:	90 e0       	ldi	r25, 0x00	; 0
    2682:	b3 01       	movw	r22, r6
    2684:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    2688:	06 c0       	rjmp	.+12     	; 0x2696 <vfprintf+0x6ca>
    268a:	80 e3       	ldi	r24, 0x30	; 48
    268c:	90 e0       	ldi	r25, 0x00	; 0
    268e:	b3 01       	movw	r22, r6
    2690:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    2694:	9a 94       	dec	r9
    2696:	e9 14       	cp	r14, r9
    2698:	c0 f3       	brcs	.-16     	; 0x268a <vfprintf+0x6be>
    269a:	ea 94       	dec	r14
    269c:	e1 e0       	ldi	r30, 0x01	; 1
    269e:	f0 e0       	ldi	r31, 0x00	; 0
    26a0:	ec 0f       	add	r30, r28
    26a2:	fd 1f       	adc	r31, r29
    26a4:	ee 0d       	add	r30, r14
    26a6:	f1 1d       	adc	r31, r1
    26a8:	80 81       	ld	r24, Z
    26aa:	90 e0       	ldi	r25, 0x00	; 0
    26ac:	b3 01       	movw	r22, r6
    26ae:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    26b2:	ee 20       	and	r14, r14
    26b4:	91 f7       	brne	.-28     	; 0x269a <vfprintf+0x6ce>
    26b6:	06 c0       	rjmp	.+12     	; 0x26c4 <vfprintf+0x6f8>
    26b8:	80 e2       	ldi	r24, 0x20	; 32
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	b3 01       	movw	r22, r6
    26be:	0e 94 b3 14 	call	0x2966	; 0x2966 <fputc>
    26c2:	8a 94       	dec	r8
    26c4:	88 20       	and	r8, r8
    26c6:	c1 f7       	brne	.-16     	; 0x26b8 <vfprintf+0x6ec>
    26c8:	99 cc       	rjmp	.-1742   	; 0x1ffc <vfprintf+0x30>
    26ca:	f3 01       	movw	r30, r6
    26cc:	66 81       	ldd	r22, Z+6	; 0x06
    26ce:	77 81       	ldd	r23, Z+7	; 0x07
    26d0:	cb 01       	movw	r24, r22
    26d2:	61 96       	adiw	r28, 0x11	; 17
    26d4:	e2 e1       	ldi	r30, 0x12	; 18
    26d6:	0c 94 89 13 	jmp	0x2712	; 0x2712 <__epilogue_restores__>

000026da <__prologue_saves__>:
    26da:	2f 92       	push	r2
    26dc:	3f 92       	push	r3
    26de:	4f 92       	push	r4
    26e0:	5f 92       	push	r5
    26e2:	6f 92       	push	r6
    26e4:	7f 92       	push	r7
    26e6:	8f 92       	push	r8
    26e8:	9f 92       	push	r9
    26ea:	af 92       	push	r10
    26ec:	bf 92       	push	r11
    26ee:	cf 92       	push	r12
    26f0:	df 92       	push	r13
    26f2:	ef 92       	push	r14
    26f4:	ff 92       	push	r15
    26f6:	0f 93       	push	r16
    26f8:	1f 93       	push	r17
    26fa:	cf 93       	push	r28
    26fc:	df 93       	push	r29
    26fe:	cd b7       	in	r28, 0x3d	; 61
    2700:	de b7       	in	r29, 0x3e	; 62
    2702:	ca 1b       	sub	r28, r26
    2704:	db 0b       	sbc	r29, r27
    2706:	0f b6       	in	r0, 0x3f	; 63
    2708:	f8 94       	cli
    270a:	de bf       	out	0x3e, r29	; 62
    270c:	0f be       	out	0x3f, r0	; 63
    270e:	cd bf       	out	0x3d, r28	; 61
    2710:	09 94       	ijmp

00002712 <__epilogue_restores__>:
    2712:	2a 88       	ldd	r2, Y+18	; 0x12
    2714:	39 88       	ldd	r3, Y+17	; 0x11
    2716:	48 88       	ldd	r4, Y+16	; 0x10
    2718:	5f 84       	ldd	r5, Y+15	; 0x0f
    271a:	6e 84       	ldd	r6, Y+14	; 0x0e
    271c:	7d 84       	ldd	r7, Y+13	; 0x0d
    271e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2720:	9b 84       	ldd	r9, Y+11	; 0x0b
    2722:	aa 84       	ldd	r10, Y+10	; 0x0a
    2724:	b9 84       	ldd	r11, Y+9	; 0x09
    2726:	c8 84       	ldd	r12, Y+8	; 0x08
    2728:	df 80       	ldd	r13, Y+7	; 0x07
    272a:	ee 80       	ldd	r14, Y+6	; 0x06
    272c:	fd 80       	ldd	r15, Y+5	; 0x05
    272e:	0c 81       	ldd	r16, Y+4	; 0x04
    2730:	1b 81       	ldd	r17, Y+3	; 0x03
    2732:	aa 81       	ldd	r26, Y+2	; 0x02
    2734:	b9 81       	ldd	r27, Y+1	; 0x01
    2736:	ce 0f       	add	r28, r30
    2738:	d1 1d       	adc	r29, r1
    273a:	0f b6       	in	r0, 0x3f	; 63
    273c:	f8 94       	cli
    273e:	de bf       	out	0x3e, r29	; 62
    2740:	0f be       	out	0x3f, r0	; 63
    2742:	cd bf       	out	0x3d, r28	; 61
    2744:	ed 01       	movw	r28, r26
    2746:	08 95       	ret

00002748 <__ftoa_engine>:
    2748:	28 30       	cpi	r18, 0x08	; 8
    274a:	08 f0       	brcs	.+2      	; 0x274e <__ftoa_engine+0x6>
    274c:	27 e0       	ldi	r18, 0x07	; 7
    274e:	33 27       	eor	r19, r19
    2750:	da 01       	movw	r26, r20
    2752:	99 0f       	add	r25, r25
    2754:	31 1d       	adc	r19, r1
    2756:	87 fd       	sbrc	r24, 7
    2758:	91 60       	ori	r25, 0x01	; 1
    275a:	00 96       	adiw	r24, 0x00	; 0
    275c:	61 05       	cpc	r22, r1
    275e:	71 05       	cpc	r23, r1
    2760:	39 f4       	brne	.+14     	; 0x2770 <__ftoa_engine+0x28>
    2762:	32 60       	ori	r19, 0x02	; 2
    2764:	2e 5f       	subi	r18, 0xFE	; 254
    2766:	3d 93       	st	X+, r19
    2768:	30 e3       	ldi	r19, 0x30	; 48
    276a:	2a 95       	dec	r18
    276c:	e1 f7       	brne	.-8      	; 0x2766 <__ftoa_engine+0x1e>
    276e:	08 95       	ret
    2770:	9f 3f       	cpi	r25, 0xFF	; 255
    2772:	30 f0       	brcs	.+12     	; 0x2780 <__ftoa_engine+0x38>
    2774:	80 38       	cpi	r24, 0x80	; 128
    2776:	71 05       	cpc	r23, r1
    2778:	61 05       	cpc	r22, r1
    277a:	09 f0       	breq	.+2      	; 0x277e <__ftoa_engine+0x36>
    277c:	3c 5f       	subi	r19, 0xFC	; 252
    277e:	3c 5f       	subi	r19, 0xFC	; 252
    2780:	3d 93       	st	X+, r19
    2782:	91 30       	cpi	r25, 0x01	; 1
    2784:	08 f0       	brcs	.+2      	; 0x2788 <__ftoa_engine+0x40>
    2786:	80 68       	ori	r24, 0x80	; 128
    2788:	91 1d       	adc	r25, r1
    278a:	df 93       	push	r29
    278c:	cf 93       	push	r28
    278e:	1f 93       	push	r17
    2790:	0f 93       	push	r16
    2792:	ff 92       	push	r15
    2794:	ef 92       	push	r14
    2796:	19 2f       	mov	r17, r25
    2798:	98 7f       	andi	r25, 0xF8	; 248
    279a:	96 95       	lsr	r25
    279c:	e9 2f       	mov	r30, r25
    279e:	96 95       	lsr	r25
    27a0:	96 95       	lsr	r25
    27a2:	e9 0f       	add	r30, r25
    27a4:	ff 27       	eor	r31, r31
    27a6:	ea 54       	subi	r30, 0x4A	; 74
    27a8:	ff 4f       	sbci	r31, 0xFF	; 255
    27aa:	99 27       	eor	r25, r25
    27ac:	33 27       	eor	r19, r19
    27ae:	ee 24       	eor	r14, r14
    27b0:	ff 24       	eor	r15, r15
    27b2:	a7 01       	movw	r20, r14
    27b4:	e7 01       	movw	r28, r14
    27b6:	05 90       	lpm	r0, Z+
    27b8:	08 94       	sec
    27ba:	07 94       	ror	r0
    27bc:	28 f4       	brcc	.+10     	; 0x27c8 <__ftoa_engine+0x80>
    27be:	36 0f       	add	r19, r22
    27c0:	e7 1e       	adc	r14, r23
    27c2:	f8 1e       	adc	r15, r24
    27c4:	49 1f       	adc	r20, r25
    27c6:	51 1d       	adc	r21, r1
    27c8:	66 0f       	add	r22, r22
    27ca:	77 1f       	adc	r23, r23
    27cc:	88 1f       	adc	r24, r24
    27ce:	99 1f       	adc	r25, r25
    27d0:	06 94       	lsr	r0
    27d2:	a1 f7       	brne	.-24     	; 0x27bc <__ftoa_engine+0x74>
    27d4:	05 90       	lpm	r0, Z+
    27d6:	07 94       	ror	r0
    27d8:	28 f4       	brcc	.+10     	; 0x27e4 <__ftoa_engine+0x9c>
    27da:	e7 0e       	add	r14, r23
    27dc:	f8 1e       	adc	r15, r24
    27de:	49 1f       	adc	r20, r25
    27e0:	56 1f       	adc	r21, r22
    27e2:	c1 1d       	adc	r28, r1
    27e4:	77 0f       	add	r23, r23
    27e6:	88 1f       	adc	r24, r24
    27e8:	99 1f       	adc	r25, r25
    27ea:	66 1f       	adc	r22, r22
    27ec:	06 94       	lsr	r0
    27ee:	a1 f7       	brne	.-24     	; 0x27d8 <__ftoa_engine+0x90>
    27f0:	05 90       	lpm	r0, Z+
    27f2:	07 94       	ror	r0
    27f4:	28 f4       	brcc	.+10     	; 0x2800 <__ftoa_engine+0xb8>
    27f6:	f8 0e       	add	r15, r24
    27f8:	49 1f       	adc	r20, r25
    27fa:	56 1f       	adc	r21, r22
    27fc:	c7 1f       	adc	r28, r23
    27fe:	d1 1d       	adc	r29, r1
    2800:	88 0f       	add	r24, r24
    2802:	99 1f       	adc	r25, r25
    2804:	66 1f       	adc	r22, r22
    2806:	77 1f       	adc	r23, r23
    2808:	06 94       	lsr	r0
    280a:	a1 f7       	brne	.-24     	; 0x27f4 <__ftoa_engine+0xac>
    280c:	05 90       	lpm	r0, Z+
    280e:	07 94       	ror	r0
    2810:	20 f4       	brcc	.+8      	; 0x281a <__ftoa_engine+0xd2>
    2812:	49 0f       	add	r20, r25
    2814:	56 1f       	adc	r21, r22
    2816:	c7 1f       	adc	r28, r23
    2818:	d8 1f       	adc	r29, r24
    281a:	99 0f       	add	r25, r25
    281c:	66 1f       	adc	r22, r22
    281e:	77 1f       	adc	r23, r23
    2820:	88 1f       	adc	r24, r24
    2822:	06 94       	lsr	r0
    2824:	a9 f7       	brne	.-22     	; 0x2810 <__ftoa_engine+0xc8>
    2826:	84 91       	lpm	r24, Z+
    2828:	10 95       	com	r17
    282a:	17 70       	andi	r17, 0x07	; 7
    282c:	41 f0       	breq	.+16     	; 0x283e <__ftoa_engine+0xf6>
    282e:	d6 95       	lsr	r29
    2830:	c7 95       	ror	r28
    2832:	57 95       	ror	r21
    2834:	47 95       	ror	r20
    2836:	f7 94       	ror	r15
    2838:	e7 94       	ror	r14
    283a:	1a 95       	dec	r17
    283c:	c1 f7       	brne	.-16     	; 0x282e <__ftoa_engine+0xe6>
    283e:	ec e5       	ldi	r30, 0x5C	; 92
    2840:	f0 e0       	ldi	r31, 0x00	; 0
    2842:	68 94       	set
    2844:	15 90       	lpm	r1, Z+
    2846:	15 91       	lpm	r17, Z+
    2848:	35 91       	lpm	r19, Z+
    284a:	65 91       	lpm	r22, Z+
    284c:	95 91       	lpm	r25, Z+
    284e:	05 90       	lpm	r0, Z+
    2850:	7f e2       	ldi	r23, 0x2F	; 47
    2852:	73 95       	inc	r23
    2854:	e1 18       	sub	r14, r1
    2856:	f1 0a       	sbc	r15, r17
    2858:	43 0b       	sbc	r20, r19
    285a:	56 0b       	sbc	r21, r22
    285c:	c9 0b       	sbc	r28, r25
    285e:	d0 09       	sbc	r29, r0
    2860:	c0 f7       	brcc	.-16     	; 0x2852 <__ftoa_engine+0x10a>
    2862:	e1 0c       	add	r14, r1
    2864:	f1 1e       	adc	r15, r17
    2866:	43 1f       	adc	r20, r19
    2868:	56 1f       	adc	r21, r22
    286a:	c9 1f       	adc	r28, r25
    286c:	d0 1d       	adc	r29, r0
    286e:	7e f4       	brtc	.+30     	; 0x288e <__ftoa_engine+0x146>
    2870:	70 33       	cpi	r23, 0x30	; 48
    2872:	11 f4       	brne	.+4      	; 0x2878 <__ftoa_engine+0x130>
    2874:	8a 95       	dec	r24
    2876:	e6 cf       	rjmp	.-52     	; 0x2844 <__ftoa_engine+0xfc>
    2878:	e8 94       	clt
    287a:	01 50       	subi	r16, 0x01	; 1
    287c:	30 f0       	brcs	.+12     	; 0x288a <__ftoa_engine+0x142>
    287e:	08 0f       	add	r16, r24
    2880:	0a f4       	brpl	.+2      	; 0x2884 <__ftoa_engine+0x13c>
    2882:	00 27       	eor	r16, r16
    2884:	02 17       	cp	r16, r18
    2886:	08 f4       	brcc	.+2      	; 0x288a <__ftoa_engine+0x142>
    2888:	20 2f       	mov	r18, r16
    288a:	23 95       	inc	r18
    288c:	02 2f       	mov	r16, r18
    288e:	7a 33       	cpi	r23, 0x3A	; 58
    2890:	28 f0       	brcs	.+10     	; 0x289c <__ftoa_engine+0x154>
    2892:	79 e3       	ldi	r23, 0x39	; 57
    2894:	7d 93       	st	X+, r23
    2896:	2a 95       	dec	r18
    2898:	e9 f7       	brne	.-6      	; 0x2894 <__ftoa_engine+0x14c>
    289a:	10 c0       	rjmp	.+32     	; 0x28bc <__ftoa_engine+0x174>
    289c:	7d 93       	st	X+, r23
    289e:	2a 95       	dec	r18
    28a0:	89 f6       	brne	.-94     	; 0x2844 <__ftoa_engine+0xfc>
    28a2:	06 94       	lsr	r0
    28a4:	97 95       	ror	r25
    28a6:	67 95       	ror	r22
    28a8:	37 95       	ror	r19
    28aa:	17 95       	ror	r17
    28ac:	17 94       	ror	r1
    28ae:	e1 18       	sub	r14, r1
    28b0:	f1 0a       	sbc	r15, r17
    28b2:	43 0b       	sbc	r20, r19
    28b4:	56 0b       	sbc	r21, r22
    28b6:	c9 0b       	sbc	r28, r25
    28b8:	d0 09       	sbc	r29, r0
    28ba:	98 f0       	brcs	.+38     	; 0x28e2 <__ftoa_engine+0x19a>
    28bc:	23 95       	inc	r18
    28be:	7e 91       	ld	r23, -X
    28c0:	73 95       	inc	r23
    28c2:	7a 33       	cpi	r23, 0x3A	; 58
    28c4:	08 f0       	brcs	.+2      	; 0x28c8 <__ftoa_engine+0x180>
    28c6:	70 e3       	ldi	r23, 0x30	; 48
    28c8:	7c 93       	st	X, r23
    28ca:	20 13       	cpse	r18, r16
    28cc:	b8 f7       	brcc	.-18     	; 0x28bc <__ftoa_engine+0x174>
    28ce:	7e 91       	ld	r23, -X
    28d0:	70 61       	ori	r23, 0x10	; 16
    28d2:	7d 93       	st	X+, r23
    28d4:	30 f0       	brcs	.+12     	; 0x28e2 <__ftoa_engine+0x19a>
    28d6:	83 95       	inc	r24
    28d8:	71 e3       	ldi	r23, 0x31	; 49
    28da:	7d 93       	st	X+, r23
    28dc:	70 e3       	ldi	r23, 0x30	; 48
    28de:	2a 95       	dec	r18
    28e0:	e1 f7       	brne	.-8      	; 0x28da <__ftoa_engine+0x192>
    28e2:	11 24       	eor	r1, r1
    28e4:	ef 90       	pop	r14
    28e6:	ff 90       	pop	r15
    28e8:	0f 91       	pop	r16
    28ea:	1f 91       	pop	r17
    28ec:	cf 91       	pop	r28
    28ee:	df 91       	pop	r29
    28f0:	99 27       	eor	r25, r25
    28f2:	87 fd       	sbrc	r24, 7
    28f4:	90 95       	com	r25
    28f6:	08 95       	ret

000028f8 <strnlen_P>:
    28f8:	fc 01       	movw	r30, r24
    28fa:	05 90       	lpm	r0, Z+
    28fc:	61 50       	subi	r22, 0x01	; 1
    28fe:	70 40       	sbci	r23, 0x00	; 0
    2900:	01 10       	cpse	r0, r1
    2902:	d8 f7       	brcc	.-10     	; 0x28fa <strnlen_P+0x2>
    2904:	80 95       	com	r24
    2906:	90 95       	com	r25
    2908:	8e 0f       	add	r24, r30
    290a:	9f 1f       	adc	r25, r31
    290c:	08 95       	ret

0000290e <strnlen>:
    290e:	fc 01       	movw	r30, r24
    2910:	61 50       	subi	r22, 0x01	; 1
    2912:	70 40       	sbci	r23, 0x00	; 0
    2914:	01 90       	ld	r0, Z+
    2916:	01 10       	cpse	r0, r1
    2918:	d8 f7       	brcc	.-10     	; 0x2910 <strnlen+0x2>
    291a:	80 95       	com	r24
    291c:	90 95       	com	r25
    291e:	8e 0f       	add	r24, r30
    2920:	9f 1f       	adc	r25, r31
    2922:	08 95       	ret

00002924 <itoa>:
    2924:	fb 01       	movw	r30, r22
    2926:	9f 01       	movw	r18, r30
    2928:	e8 94       	clt
    292a:	42 30       	cpi	r20, 0x02	; 2
    292c:	c4 f0       	brlt	.+48     	; 0x295e <itoa+0x3a>
    292e:	45 32       	cpi	r20, 0x25	; 37
    2930:	b4 f4       	brge	.+44     	; 0x295e <itoa+0x3a>
    2932:	4a 30       	cpi	r20, 0x0A	; 10
    2934:	29 f4       	brne	.+10     	; 0x2940 <itoa+0x1c>
    2936:	97 fb       	bst	r25, 7
    2938:	1e f4       	brtc	.+6      	; 0x2940 <itoa+0x1c>
    293a:	90 95       	com	r25
    293c:	81 95       	neg	r24
    293e:	9f 4f       	sbci	r25, 0xFF	; 255
    2940:	64 2f       	mov	r22, r20
    2942:	77 27       	eor	r23, r23
    2944:	0e 94 71 15 	call	0x2ae2	; 0x2ae2 <__udivmodhi4>
    2948:	80 5d       	subi	r24, 0xD0	; 208
    294a:	8a 33       	cpi	r24, 0x3A	; 58
    294c:	0c f0       	brlt	.+2      	; 0x2950 <itoa+0x2c>
    294e:	89 5d       	subi	r24, 0xD9	; 217
    2950:	81 93       	st	Z+, r24
    2952:	cb 01       	movw	r24, r22
    2954:	00 97       	sbiw	r24, 0x00	; 0
    2956:	a1 f7       	brne	.-24     	; 0x2940 <itoa+0x1c>
    2958:	16 f4       	brtc	.+4      	; 0x295e <itoa+0x3a>
    295a:	5d e2       	ldi	r21, 0x2D	; 45
    295c:	51 93       	st	Z+, r21
    295e:	10 82       	st	Z, r1
    2960:	c9 01       	movw	r24, r18
    2962:	0c 94 61 15 	jmp	0x2ac2	; 0x2ac2 <strrev>

00002966 <fputc>:
    2966:	0f 93       	push	r16
    2968:	1f 93       	push	r17
    296a:	cf 93       	push	r28
    296c:	df 93       	push	r29
    296e:	8c 01       	movw	r16, r24
    2970:	eb 01       	movw	r28, r22
    2972:	8b 81       	ldd	r24, Y+3	; 0x03
    2974:	81 ff       	sbrs	r24, 1
    2976:	1b c0       	rjmp	.+54     	; 0x29ae <fputc+0x48>
    2978:	82 ff       	sbrs	r24, 2
    297a:	0d c0       	rjmp	.+26     	; 0x2996 <fputc+0x30>
    297c:	2e 81       	ldd	r18, Y+6	; 0x06
    297e:	3f 81       	ldd	r19, Y+7	; 0x07
    2980:	8c 81       	ldd	r24, Y+4	; 0x04
    2982:	9d 81       	ldd	r25, Y+5	; 0x05
    2984:	28 17       	cp	r18, r24
    2986:	39 07       	cpc	r19, r25
    2988:	64 f4       	brge	.+24     	; 0x29a2 <fputc+0x3c>
    298a:	e8 81       	ld	r30, Y
    298c:	f9 81       	ldd	r31, Y+1	; 0x01
    298e:	01 93       	st	Z+, r16
    2990:	f9 83       	std	Y+1, r31	; 0x01
    2992:	e8 83       	st	Y, r30
    2994:	06 c0       	rjmp	.+12     	; 0x29a2 <fputc+0x3c>
    2996:	e8 85       	ldd	r30, Y+8	; 0x08
    2998:	f9 85       	ldd	r31, Y+9	; 0x09
    299a:	80 2f       	mov	r24, r16
    299c:	09 95       	icall
    299e:	89 2b       	or	r24, r25
    29a0:	31 f4       	brne	.+12     	; 0x29ae <fputc+0x48>
    29a2:	8e 81       	ldd	r24, Y+6	; 0x06
    29a4:	9f 81       	ldd	r25, Y+7	; 0x07
    29a6:	01 96       	adiw	r24, 0x01	; 1
    29a8:	9f 83       	std	Y+7, r25	; 0x07
    29aa:	8e 83       	std	Y+6, r24	; 0x06
    29ac:	02 c0       	rjmp	.+4      	; 0x29b2 <fputc+0x4c>
    29ae:	0f ef       	ldi	r16, 0xFF	; 255
    29b0:	1f ef       	ldi	r17, 0xFF	; 255
    29b2:	c8 01       	movw	r24, r16
    29b4:	df 91       	pop	r29
    29b6:	cf 91       	pop	r28
    29b8:	1f 91       	pop	r17
    29ba:	0f 91       	pop	r16
    29bc:	08 95       	ret

000029be <sprintf>:
    29be:	ae e0       	ldi	r26, 0x0E	; 14
    29c0:	b0 e0       	ldi	r27, 0x00	; 0
    29c2:	e5 ee       	ldi	r30, 0xE5	; 229
    29c4:	f4 e1       	ldi	r31, 0x14	; 20
    29c6:	0c 94 7b 13 	jmp	0x26f6	; 0x26f6 <__prologue_saves__+0x1c>
    29ca:	0d 89       	ldd	r16, Y+21	; 0x15
    29cc:	1e 89       	ldd	r17, Y+22	; 0x16
    29ce:	86 e0       	ldi	r24, 0x06	; 6
    29d0:	8c 83       	std	Y+4, r24	; 0x04
    29d2:	1a 83       	std	Y+2, r17	; 0x02
    29d4:	09 83       	std	Y+1, r16	; 0x01
    29d6:	8f ef       	ldi	r24, 0xFF	; 255
    29d8:	9f e7       	ldi	r25, 0x7F	; 127
    29da:	9e 83       	std	Y+6, r25	; 0x06
    29dc:	8d 83       	std	Y+5, r24	; 0x05
    29de:	9e 01       	movw	r18, r28
    29e0:	27 5e       	subi	r18, 0xE7	; 231
    29e2:	3f 4f       	sbci	r19, 0xFF	; 255
    29e4:	ce 01       	movw	r24, r28
    29e6:	01 96       	adiw	r24, 0x01	; 1
    29e8:	6f 89       	ldd	r22, Y+23	; 0x17
    29ea:	78 8d       	ldd	r23, Y+24	; 0x18
    29ec:	a9 01       	movw	r20, r18
    29ee:	0e 94 e6 0f 	call	0x1fcc	; 0x1fcc <vfprintf>
    29f2:	2f 81       	ldd	r18, Y+7	; 0x07
    29f4:	38 85       	ldd	r19, Y+8	; 0x08
    29f6:	02 0f       	add	r16, r18
    29f8:	13 1f       	adc	r17, r19
    29fa:	f8 01       	movw	r30, r16
    29fc:	10 82       	st	Z, r1
    29fe:	2e 96       	adiw	r28, 0x0e	; 14
    2a00:	e4 e0       	ldi	r30, 0x04	; 4
    2a02:	0c 94 97 13 	jmp	0x272e	; 0x272e <__epilogue_restores__+0x1c>

00002a06 <__ultoa_invert>:
    2a06:	fa 01       	movw	r30, r20
    2a08:	aa 27       	eor	r26, r26
    2a0a:	28 30       	cpi	r18, 0x08	; 8
    2a0c:	51 f1       	breq	.+84     	; 0x2a62 <__ultoa_invert+0x5c>
    2a0e:	20 31       	cpi	r18, 0x10	; 16
    2a10:	81 f1       	breq	.+96     	; 0x2a72 <__ultoa_invert+0x6c>
    2a12:	e8 94       	clt
    2a14:	6f 93       	push	r22
    2a16:	6e 7f       	andi	r22, 0xFE	; 254
    2a18:	6e 5f       	subi	r22, 0xFE	; 254
    2a1a:	7f 4f       	sbci	r23, 0xFF	; 255
    2a1c:	8f 4f       	sbci	r24, 0xFF	; 255
    2a1e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a20:	af 4f       	sbci	r26, 0xFF	; 255
    2a22:	b1 e0       	ldi	r27, 0x01	; 1
    2a24:	3e d0       	rcall	.+124    	; 0x2aa2 <__ultoa_invert+0x9c>
    2a26:	b4 e0       	ldi	r27, 0x04	; 4
    2a28:	3c d0       	rcall	.+120    	; 0x2aa2 <__ultoa_invert+0x9c>
    2a2a:	67 0f       	add	r22, r23
    2a2c:	78 1f       	adc	r23, r24
    2a2e:	89 1f       	adc	r24, r25
    2a30:	9a 1f       	adc	r25, r26
    2a32:	a1 1d       	adc	r26, r1
    2a34:	68 0f       	add	r22, r24
    2a36:	79 1f       	adc	r23, r25
    2a38:	8a 1f       	adc	r24, r26
    2a3a:	91 1d       	adc	r25, r1
    2a3c:	a1 1d       	adc	r26, r1
    2a3e:	6a 0f       	add	r22, r26
    2a40:	71 1d       	adc	r23, r1
    2a42:	81 1d       	adc	r24, r1
    2a44:	91 1d       	adc	r25, r1
    2a46:	a1 1d       	adc	r26, r1
    2a48:	20 d0       	rcall	.+64     	; 0x2a8a <__ultoa_invert+0x84>
    2a4a:	09 f4       	brne	.+2      	; 0x2a4e <__ultoa_invert+0x48>
    2a4c:	68 94       	set
    2a4e:	3f 91       	pop	r19
    2a50:	2a e0       	ldi	r18, 0x0A	; 10
    2a52:	26 9f       	mul	r18, r22
    2a54:	11 24       	eor	r1, r1
    2a56:	30 19       	sub	r19, r0
    2a58:	30 5d       	subi	r19, 0xD0	; 208
    2a5a:	31 93       	st	Z+, r19
    2a5c:	de f6       	brtc	.-74     	; 0x2a14 <__ultoa_invert+0xe>
    2a5e:	cf 01       	movw	r24, r30
    2a60:	08 95       	ret
    2a62:	46 2f       	mov	r20, r22
    2a64:	47 70       	andi	r20, 0x07	; 7
    2a66:	40 5d       	subi	r20, 0xD0	; 208
    2a68:	41 93       	st	Z+, r20
    2a6a:	b3 e0       	ldi	r27, 0x03	; 3
    2a6c:	0f d0       	rcall	.+30     	; 0x2a8c <__ultoa_invert+0x86>
    2a6e:	c9 f7       	brne	.-14     	; 0x2a62 <__ultoa_invert+0x5c>
    2a70:	f6 cf       	rjmp	.-20     	; 0x2a5e <__ultoa_invert+0x58>
    2a72:	46 2f       	mov	r20, r22
    2a74:	4f 70       	andi	r20, 0x0F	; 15
    2a76:	40 5d       	subi	r20, 0xD0	; 208
    2a78:	4a 33       	cpi	r20, 0x3A	; 58
    2a7a:	18 f0       	brcs	.+6      	; 0x2a82 <__ultoa_invert+0x7c>
    2a7c:	49 5d       	subi	r20, 0xD9	; 217
    2a7e:	31 fd       	sbrc	r19, 1
    2a80:	40 52       	subi	r20, 0x20	; 32
    2a82:	41 93       	st	Z+, r20
    2a84:	02 d0       	rcall	.+4      	; 0x2a8a <__ultoa_invert+0x84>
    2a86:	a9 f7       	brne	.-22     	; 0x2a72 <__ultoa_invert+0x6c>
    2a88:	ea cf       	rjmp	.-44     	; 0x2a5e <__ultoa_invert+0x58>
    2a8a:	b4 e0       	ldi	r27, 0x04	; 4
    2a8c:	a6 95       	lsr	r26
    2a8e:	97 95       	ror	r25
    2a90:	87 95       	ror	r24
    2a92:	77 95       	ror	r23
    2a94:	67 95       	ror	r22
    2a96:	ba 95       	dec	r27
    2a98:	c9 f7       	brne	.-14     	; 0x2a8c <__ultoa_invert+0x86>
    2a9a:	00 97       	sbiw	r24, 0x00	; 0
    2a9c:	61 05       	cpc	r22, r1
    2a9e:	71 05       	cpc	r23, r1
    2aa0:	08 95       	ret
    2aa2:	9b 01       	movw	r18, r22
    2aa4:	ac 01       	movw	r20, r24
    2aa6:	0a 2e       	mov	r0, r26
    2aa8:	06 94       	lsr	r0
    2aaa:	57 95       	ror	r21
    2aac:	47 95       	ror	r20
    2aae:	37 95       	ror	r19
    2ab0:	27 95       	ror	r18
    2ab2:	ba 95       	dec	r27
    2ab4:	c9 f7       	brne	.-14     	; 0x2aa8 <__ultoa_invert+0xa2>
    2ab6:	62 0f       	add	r22, r18
    2ab8:	73 1f       	adc	r23, r19
    2aba:	84 1f       	adc	r24, r20
    2abc:	95 1f       	adc	r25, r21
    2abe:	a0 1d       	adc	r26, r0
    2ac0:	08 95       	ret

00002ac2 <strrev>:
    2ac2:	dc 01       	movw	r26, r24
    2ac4:	fc 01       	movw	r30, r24
    2ac6:	67 2f       	mov	r22, r23
    2ac8:	71 91       	ld	r23, Z+
    2aca:	77 23       	and	r23, r23
    2acc:	e1 f7       	brne	.-8      	; 0x2ac6 <strrev+0x4>
    2ace:	32 97       	sbiw	r30, 0x02	; 2
    2ad0:	04 c0       	rjmp	.+8      	; 0x2ada <strrev+0x18>
    2ad2:	7c 91       	ld	r23, X
    2ad4:	6d 93       	st	X+, r22
    2ad6:	70 83       	st	Z, r23
    2ad8:	62 91       	ld	r22, -Z
    2ada:	ae 17       	cp	r26, r30
    2adc:	bf 07       	cpc	r27, r31
    2ade:	c8 f3       	brcs	.-14     	; 0x2ad2 <strrev+0x10>
    2ae0:	08 95       	ret

00002ae2 <__udivmodhi4>:
    2ae2:	aa 1b       	sub	r26, r26
    2ae4:	bb 1b       	sub	r27, r27
    2ae6:	51 e1       	ldi	r21, 0x11	; 17
    2ae8:	07 c0       	rjmp	.+14     	; 0x2af8 <__udivmodhi4_ep>

00002aea <__udivmodhi4_loop>:
    2aea:	aa 1f       	adc	r26, r26
    2aec:	bb 1f       	adc	r27, r27
    2aee:	a6 17       	cp	r26, r22
    2af0:	b7 07       	cpc	r27, r23
    2af2:	10 f0       	brcs	.+4      	; 0x2af8 <__udivmodhi4_ep>
    2af4:	a6 1b       	sub	r26, r22
    2af6:	b7 0b       	sbc	r27, r23

00002af8 <__udivmodhi4_ep>:
    2af8:	88 1f       	adc	r24, r24
    2afa:	99 1f       	adc	r25, r25
    2afc:	5a 95       	dec	r21
    2afe:	a9 f7       	brne	.-22     	; 0x2aea <__udivmodhi4_loop>
    2b00:	80 95       	com	r24
    2b02:	90 95       	com	r25
    2b04:	bc 01       	movw	r22, r24
    2b06:	cd 01       	movw	r24, r26
    2b08:	08 95       	ret

00002b0a <_exit>:
    2b0a:	f8 94       	cli

00002b0c <__stop_program>:
    2b0c:	ff cf       	rjmp	.-2      	; 0x2b0c <__stop_program>
